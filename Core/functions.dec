@@ Faraday's Global Utility Functions
@@ Coded by Linda Naughton O'Meara
@@ http://www.wordsmyth.org/faraday
@@
@@ ===================
@@ OVERVIEW
@@ ===================
@@
@@ This system contains a number of useful utility functions.
@@    NOTE: This system is required for just about all of my systems.
@@
@@ ===================
@@ FEATURES
@@ ===================
@@
@@ * Various line functions
@@ * Random color function
@@ * Query functions for staff, player, IC status, etc.
@@ * String formatting functions to supplement ljust/rjust/center 
@@
@@ ===================
@@ REQUIREMENTS
@@ ===================
@@
@@ * PennMUSH
@@
@@ ===================
@@ INSTALLATION
@@ ===================
@@ 
@@ Simply /quote this script to your MUSH via a MUSH client.  You can also cut and paste, but beware
@@ of linebreaks.  There is no need to create any objects or do any manual editing of this script unless
@@ your master room is something other than #2.
@@
@@ ===================
@@ SETUP
@@ ===================
@@
@@ The system itself requires no setup, but you may want to edit some of the functions to display 
@@ lines/colors/etc. the way you like them.
@@
@@ ===================
@@ USAGE
@@ ===================
@@ 
@@ Each function is documented with a help file. You can view that help using the function_help function. 
@@ For example, to view the help for the 'line' function you could type:
@@ 
@@ think function_help(line)
@@
@@ @function will show you a list of all the functions, or you can look at the object. 
@@
@@ ===================
@@ UPDATES
@@ ===================
@@
@@ Join the mailing list (http://groups.yahoo.com/group/faradaycode) to keep up with the latest news.
@@
@@     * Version 1.0 - 6/12/04 - Initial version
@@     * Version 1.1 - 6/6/05 - The isPlayer() function was broken. It now works correctly. 

@set me=quiet

@pemit/silent %#=[ansi(hr,Beginning Installation.  Please wait until the Installation Complete message appears...)]%R

@pemit/silent %#=[ansi(hr,Creating Objects...)]%R

@create Global Utility Functions
@set Global Utility Functions = WIZARD
@set Global Utility Functions = SAFE
@set Global Utility Functions = NO_COMMAND
@DESCRIBE Global Utility Functions=This object contains useful global utility functions.  They include:%R[iter(lattr(me/fun_*),after(##,_))]%R%REach function has an associated help file, which you can view by typing: think fun_help(<function name>)
@set Global Utility Functions/DESCRIBE=no_command visual prefixmatch public nearby
&FUN_CENTER_STR Global Utility Functions=[center(mid(%0,0,%1),%1)]
&FUN_ESCAPE_CR Global Utility Functions=[edit(edit(%0,%r,\\\%r),%R,\\\%R)]
&FUN_FIND_AND_REPLACE Global Utility Functions=replace(%0,match(%0,%1,%3),%2,%3)
&FUN_FUNCTION_HELP Global Utility Functions=switch(hasattr(me,fun_%0),0,ansi(hr,No such function %0.),[line()]%R[ansi(h,Function Help:)] [ansi(hr,%0)]%R%R[u(help_%0)]%R[line()])
&FUN_ICTIME Global Utility Functions=time()
&FUN_ISIC Global Utility Functions=match(xget(%0,status),IC)
&FUN_ISPLAYER Global Utility Functions=t(pmatch(%0))
&FUN_ISSTAFF Global Utility Functions=orflags(%0,WrJ)
&FUN_LINE Global Utility Functions=[ansi(rand_color(),+==~~~~~====~~~~====~~~~====~~~~=====~~~~=====~~~~====~~~~====~~~~====~~~~~==+)]
&FUN_LINE2 Global Utility Functions=[ansi(rand_color(),[repeat(~,78)])]
&FUN_LINE_NO_COLOR Global Utility Functions=+===~~~~~====~~~~====~~~~====~~~~=====~~~~=====~~~~====~~~~====~~~~====~~~~~==+
&FUN_LINE_WITH_TEXT Global Utility Functions=[ansi(rand_color(),+==~~~~~====~~~~====~~~~===[padstr(%B%0%B,25,center,~)]==~~~~====~~~~====~~~~~==+)]
&FUN_MATCHCON Global Utility Functions=[setq(9,#-1)][first(trim(iter([lcon(%1)] %1,switch(strmatch(name(##),%0*),1,##[setq(9,1)]))))][switch(%q9,#-1,#-1)]
&FUN_NUMCOMP Global Utility Functions=switch(1,gt(%0,%1),1,lt(%0,%1),-1,eq(%0,%1),0)
&FUN_ORDINAL Global Utility Functions=switch(%0,1,first,2,second,3,third,4,fourth,5,fifth,6,sixth,7,seventh,8,eighth,9,ninth,10,tenth,11,eleventh,12,twelvth,13,thirteenth,14,fourteenth,15,fifteenth,16,sixteenth,17,seventeenth,18,eighteenth,19,nineteenth,20,twentieth,30,thirtieth,40,fourtieth,50,fiftieth,60,sixtieth,70,seventieth,80,eightieth,90,ninetieth,100,onehundreth,>1000,error,>900,nine-hundred-[ordinal(mod(%0,900))],>800,eight-hundred-[ordinal(mod(%0,800))],>700,seven-hundred-[ordinal(mod(%0,700))],>600,six-hundred-[ordinal(mod(%0,600))],>500,five-hundred-[ordinal(mod(%0,500))],>400,four-hundred-[ordinal(mod(%0,400))],>300,three-hundred-[ordinal(mod(%0,300))],>200,two-hundred-[ordinal(mod(%0,200))],>100,one-hundred-[ordinal(mod(%0,100))],>90,ninety-[ordinal(mod(%0,90))],>80,eighty-[ordinal(mod(%0,80))],>70,seventy-[ordinal(mod(%0,70))],>60,sixty-[ordinal(mod(%0,60))],>50,fifty-[ordinal(mod(%0,50))],>40,forty-[ordinal(mod(%0,40))],>30,thirty-[ordinal(mod(%0,30))],>20,twenty-[ordinal(mod(%0,20))])
&FUN_PADSTR Global Utility Functions=[switch(%2,center,center(mid({%0},0,%1),%1,%3),right,rjust(mid({%0},0,%1),%1,%3),ljust(mid({%0},0,%1),%1,%3))]
&FUN_PARSE_POSE Global Utility Functions=switch(%0,:*,%1 [after(%0,:)],\;*,%1[after(%0,\;)],.*,[after(%0,.)],%1 says\, "%0")
&FUN_RAND_COLOR Global Utility Functions=[switch(mod(secs(),60),<5,b,<10,c,<15,m,<20,r,<25,g,<30,y,<35,b,<40,c,<45,m,<50,r,<55,g,y)]
&FUN_REPLACE_CR Global Utility Functions=[edit(edit(%0,\\\%r,%r),\\\%R,%R)]
&FUN_SORT_OLDEST Global Utility Functions=sortby(sortby_oldest,%0)
&FUN_SORT_RECENT Global Utility Functions=sortby(sortby_recent,%0)
&FUN_WEB_EDIT Global Utility Functions=[setq(9,%0)][setq(9,edit(%q9,<,\[))][setq(9,edit(%q9,>,\]))][setq(9,edit(%q9,\\\%r\\\%r,%R<p>))][setq(9,edit(%q9,\\\%R\\\%R,%R<p>))][setq(9,edit(%q9,\\\%r,%R<BR>))][setq(9,edit(%q9,\\\%R,%R<BR>))]%q9
&HELP_CENTER_STR Global Utility Functions=This function centers a string, just like the center() function, but it also chops the string if it's too long to fit.  It returns the formatted string.%R%RUsage: center_str(<string>, <length>)
&HELP_ESCAPE_CR Global Utility Functions=When storing user input on an attribute, the MUSH will put in hard line breaks for any carriage return(\%R).  This function escapes them out so you can later @decompile the attribute easily.  It returns the string with all carriage returns escaped out.  You use it in conjunction with the 'set' function.  For example:%Rset(#123,foo:\[escape_cr(\%0)\])%R%RIts partner is replace_cr, which will un-escape the linebreaks so you can display them.
&HELP_FIND_AND_REPLACE Global Utility Functions=This function is a simple find/replace combination.  It will find the first instance (and ONLY the first instance) of a pattern match and replace it with the provided string.%R%RUsage: find_and_replace(<original string>,<find string>,<replace string>,<delimiter>)%R%RExample: find_and_replace(Art:2|Cooking:3|Melee:1,Cooking:*,Cooking:4,|)
&HELP_FUNCTION_HELP Global Utility Functions=This function obtains help for one of the utility functions.%R%RUsage: function_help(<function name>)
&HELP_ICTIME Global Utility Functions=This function is intended to return the IC time for your MUSH.  By default, it returns the OOC time, so you'll have to configure it for your game's time system.%R%RUsage: ictime()
&HELP_ISIC Global Utility Functions=This function returns 1 if a player is set IC, and 0 if they are not.%RUsage: isic(<player DB#>)
&HELP_ISPLAYER Global Utility Functions=This function tells whether an object is a player or not.  It returns 1 if the object is a player, and 0 if not.%R%RUsage: isplayer(<db#>)
&HELP_ISSTAFF Global Utility Functions=This function returns 1 if the player is on staff, and 0 if not.  It goes by the Wizard, Royal and Judge flags.  If you use a different system for staff members, you can edit this function.%R%RUsage: isstaff(<db#>)
&HELP_LINE Global Utility Functions=This is a helpful utility you can use to standardize all the lines around your commands.  By default, it gives a standard colored line.  You can edit this to customize the style of your lines.%RUsage: line()%R%RSee also related functions: line2(), line_without_color(), and line_with_text()
&HELP_LINE2 Global Utility Functions=This is a rather plain-looking line.  You can edit this to customize the style of your lines.%RUsage: line2()%R%RSee also related functions: line(), line_without_color(), and line_with_text()
&HELP_LINE_NO_COLOR Global Utility Functions=The same style of line as the line() function, but without color.%RUsage: line_without_color()%R%RSee also related functions: line(), line2(), and line_with_text()
&HELP_LINE_WITH_TEXT Global Utility Functions=The same style of line as the line() function, but text centered in the middle of the line.%RUsage: line_with_text()%R%RSee also related functions: line(), line2(), and line_without_color()
&HELP_MATCHCON Global Utility Functions=This function searches the contents of a room to find a match (either an object or a player) to a given name.  It returns the DB# of the first match it finds, or #-1 if no match is found.%R%RUsage: matchcon(<room DB#>, <name search string>)%R%RNote: This function uses register 9.
&HELP_NUMCOMP Global Utility Functions=This function compares two numbers,much like strcmp compares strings. If the first number is bigger, it returns 1.  If the first number is smaller, it returns -1.  If the numbers are equal, it returns 0.%R%RUsage: numcomp(<num1>, <num2>)
&HELP_ORDINAL Global Utility Functions=This function gives the ordinal representation "first, second, third, etc.) of a number.%R%RUsage: ordinal(<number>)
&HELP_PADSTR Global Utility Functions=This function is a combination of the mid() and ljust/rjust/center() functions.  If a string is too long, it will truncate it.  If a string is too short, it will pad it (on the left, right or center, as you specify it).  By default, it will left justify.  Also, it uses spaces to pad by default by you can override that by specifying a padding character.%R%RUsage: padstr(<string>, <length>) (pads left with spaces)%R%Tpadstr(<string>,<length>,<left/right/center>)%R%Tpadstr(<string>, <length>, <left/right/center>, <pad character>)
&HELP_PARSE_POSE Global Utility Functions=This function takes a standard pose string and formats it with the player's name.  It accepts the tokens : (for action poses), " (for say poses), \; (for possessive poses) and . (for emits).%R%RUsage: parse_pose(<pose string>,<player name>)
&HELP_RAND_COLOR Global Utility Functions=This function gives you a random ansi color.  You can use it to make your lines change color in commands.  Because the color changes every 5 seconds, you can call it more than once in the same command and be reasonably sure of getting the same color both times.  But if you call it from two different commands, you may get two different colors.  To get around this, you can store the value returned from this function and store it in one of the registers.%R%RUsage: ansi(rand_color(),<string>)   or %R%Tsetq(0,rand_color()) then later: ansi(\%q0,<string>)
&HELP_REPLACE_CR Global Utility Functions=This function is the partner to escape_cr.  If you have a string that you removed carriage returns from using escape_cr, you use this function to get them back before displaying them.%R%RUsage: replace_cr(<string>)
&HELP_SORT_OLDEST Global Utility Functions=This function will take a list of items in the form "prefix_number" and sort them by number with the oldest coming first.  For example: MSG_1 MSG_2 MSG_3 MSG_10 would be sorted as MSG_1 MSG_2 MSG_3 MSG10.%R%RUsage: sort_oldest(<list>)%R%RSee also the companion function sort_recent.
&HELP_SORT_RECENT Global Utility Functions=This function will take a list of items in the form "prefix_number" and sort them by number with the most recent coming first.  For example: MSG_1 MSG_2 MSG_3 MSG_10 would be sorted as: MSG_10 MSG_3 MSG_2 MSG_1.%R%RUsage: sort_recent(<list>)%R%RSee also the companion function sort_oldest
&HELP_WEB_EDIT Global Utility Functions=This function will take a MUSH string and perform basic formatting to turn it into a HTML-friendly version.  For example, it will replace < and > with &lt and &gt, and will replace escaped-out carriage returns (obtained using the escape_cr function) with paragraph and line breaks.%R%RUsage: web_edit(<string>)
&SORTBY_OLDEST Global Utility Functions=sub(after(%0,_),after(%1,_))
&SORTBY_RECENT Global Utility Functions=sub(after(%1,_),after(%0,_))
@STARTUP Global Utility Functions=@dolist lattr(me/fun_*)={@function after(##,_)=num(me),##}
@set Global Utility Functions/STARTUP=no_command prefixmatch
&VERSION Global Utility Functions=1.1

@wait 6=@pemit/silent %#=%R%R[ansi(hr,Activating Functions...)]%R
@wait 6=@trigger Global Utility Functions/startup


@wait 6=@pemit/silent %#=[ansi(hr,Setting up database numbers...)]%R


@wait 7=@pemit/silent %#=%R%R[ansi(hr,Installation Complete!!)]%R


@wait 8=@pemit/silent %#=[ansi(hr,Please move the functions object to a safe place.%RInside the globals object or a store room usually works well.)]%R



@wait 8=@set me=!quiet

