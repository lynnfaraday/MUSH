@@ Faraday's MUSH Staff Jobs System
@@ Coded by Linda Naughton O'Meara 
@@ http://www.wordsmyth.org/faraday
@@
@@ ===================
@@ OVERVIEW
@@ ===================
@@ This system allows for the tracking of staff jobs and notifications. 
@@
@@ ===================
@@ FEATURES
@@ ===================
@@ 
@@ * Organize jobs by category.
@@ * Assign jobs to different staff members.
@@ * Allow players to submit +requests directly into the job system.
@@ * Set due date, priority and status.
@@
@@ +==~~~~~====~~~~====~~~~===~~~~~~~ All Jobs ~~~~~~~~==~~~~====~~~~====~~~~~==+
@@ #    Cat   Title                Submitter     Handler       Due Date   Status
@@ 1    CODE  Line Format          Faraday       -----------   None Set   NEW 
@@ 2    BUILD Build Something      Joe           Joe           None Set   25%
@@ 3    REQ   Test                 Faraday       -----------   08/05/04   75%
@@ +==~~~~~====~~~~====~~~~===~~~~~~ +jobs/help ~~~~~~~==~~~~====~~~~====~~~~~==+
@@ 
@@ 
@@ +==~~~~~====~~~~====~~~~===~~~~~~~~ Job 3  ~~~~~~~~~==~~~~====~~~~====~~~~~==+
@@                                    ~ Test ~                                   
@@ Category:     REQ                    ~~~    Priority:   MEDIUM
@@ Submitted By: Faraday                ~~~    Handled By: 
@@ Submit Date:  07/10/04
@@ Due Date:     08/05/04               ~~~    Status:     75%
@@ 
@@ Description:
@@ This is just a test.
@@ 
@@ Comments:
@@ 
@@ [Faraday - Wed Jun 30 23:20:13 2004]
@@ I did something for this job once.
@@ +==~~~~~====~~~~====~~~~===~~~~~~ +jobs/help ~~~~~~~==~~~~====~~~~====~~~~~==+
@@ 
@@
@@ ===================
@@ REQUIREMENTS
@@ ===================
@@
@@ * PennMUSH
@@ * Faraday's Global Utility Functions
@@
@@ * Myrddin's Bulletin Board (for posting job closures to the BBS)
@@     Alternative:  Just don't have an jobs BBS.  Nothing will be posted.
@@
@@ ===================
@@ INSTALLATION
@@ ===================
@@ 
@@ Simply /quote this script to your MUSH via a MUSH client.  You can also cut and paste, but beware
@@ of linebreaks.  There is no need to create any objects or do any manual editing of this script unless
@@ your master room is something other than #2.
@@
@@ ===================
@@ CREDITS
@@ ===================
@@ My jobs system was inspired by Anomaly Jobs. I created it mainly because I had some trouble porting 
@@ Anomaly Jobs to PennMUSH. Although Anomaly Jobs has a lot more functionality and is probably better 
@@ for larger games/staff, this system is a bit simpler and has a few additional features.
@@
@@ ===================
@@ SETUP
@@ ===================
@@
@@ The system comes set up with several default categories. You can add more as you see fit. 
@@ See +jobs/help for setup information.
@@
@@ ===================
@@ USAGE
@@ ===================
@@ 
@@ See +jobs/help and +request/help for usage instructions.
@@
@@ ===================
@@ UPDATES
@@ ===================
@@
@@ Join the mailing list (http://groups.yahoo.com/group/faradaycode) to keep up with the latest news.
@@
@@     * Version 1.0 - 6/12/04 - Initial version

@set me=quiet

@pemit/silent %#=[ansi(hr,Beginning Jobs System Installation.  Please wait until the Installation Complete message appears...)]%R

@pemit/silent %#=[ansi(hr,Creating Objects...)]%R


@create Jobs System
@lock/Use Jobs System=ISSTAFF/1
@lset Jobs System/Use=no_inherit
@set Jobs System = WIZARD
@ACONNECT Jobs System=@fo %#=+jobs
@set Jobs System/ACONNECT=no_command prefixmatch
&CMD-+JOBS Jobs System=$+jobs:think pemit(%#,[setq(0,switch(hasattr(%#,jobs_filter),1,xget(%#,jobs_filter),all))][line_with_text(Filtered Jobs - %q0)]%R[u(#JOBFUN/fun_display_header)][iter(u(#JOBFUN/fun_get_jobs_list,%q0,%#),%R[u(#JOBFUN/fun_display_job,##)])]%R[line_with_text(+jobs/help)])
&CMD-+JOBS-ALIAS Jobs System=$+job*:@switch %0=s*,,@fo %#=+jobs%0
&CMD-+JOBS-ALL Jobs System=$+jobs/all:think pemit(%#,[line_with_text(All Jobs)]%R[u(#JOBFUN/fun_display_header)][iter(u(#JOBFUN/fun_get_jobs_list,all,%#),%R[u(#JOBFUN/fun_display_job,##)])]%R[line_with_text(+jobs/help)])
&CMD-+JOBS-ASSIGN Jobs System=$+jobs/assign *=*:think [setq(0,u(#JOBFUN/fun_find_job,%0))][setq(1,before(%q0,:))][setq(2,after(%q0,:))]pemit(%#,switch(0,words(%q0),ansi(hr,That is not a valid job number.),t(pmatch(%1)),ansi(hr,That is not a valid player.),ansi(hg,You assign Job %0 to %1.[set(%q1,%q2:[u(#JOBFUN/fun_replace_data,xget(%q1,%q2),handler,name(pmatch(%1)))])]))
&CMD-+JOBS-CAT Jobs System=$+jobs/*:think switch(1,hasattr(#JOBFUN,cat_%0),pemit(%#,[line_with_text(New Jobs)]%R[u(#JOBFUN/fun_display_header)][iter(u(#JOBFUN/fun_get_jobs_list,%0,%#),%R[u(#JOBFUN/fun_display_job,##)])]%R[line_with_text(+jobs/help)]),hasattr(me,cmd-+jobs-[before(%0,%B)]),,pemit(%#,ansi(hr,Unknown jobs command.)))
&CMD-+JOBS-CATLIST Jobs System=$+jobs/catlist:think pemit(%#,[line_with_text(Job Categories)][iter(lattr(#JOBFUN/cat_*),%R[after(##,_)])]%R[line_with_text(+jobs/help)]
&cmd-+jobs-delcat Jobs System=$+jobs/delcat *:think [setq(1,#-1)][setq(0,trim(%0))]pemit(%#,switch(0,hasattr(#JOBFUN,cat_%q0),ansi(hr,There is no category with that name.),[ansi(hg,You delete category %q0.)][setq(1,xget(#JOBFUN,cat_%q0))][wipe(#JOBFUN/cat_%q0)]));@switch %q1=#-1,,@nuke %q1
&CMD-+JOBS-CHANGECAT Jobs System=$+jobs/cat *=*:think [setq(0,u(#JOBFUN/fun_find_job,%0))][setq(1,before(%q0,:))][setq(2,after(%q0,:))]pemit(%#,switch(0,words(%q0),ansi(hr,That is not a valid job number.),hasattr(#JOBFUN,cat_%1),ansi(hr,That is not a valid category.),ansi(hg,You change the category of Job %0 to %1.[set(xget(#JOBFUN,cat_%1),%q2:[xget(%q1,%q2)])][wipe(%q1/%q2)]))
&CMD-+JOBS-CLOSE Jobs System=$+jobs/close *:@switch [setq(0,u(#JOBFUN/fun_find_job,%0))][setq(1,before(%q0,:))][setq(2,after(%q0,:))]0=words(%q0),@pemit %#=ansi(hr,That is not a valid job number.),{@pemit %#=ansi(hg,You close Job %0.);+mail [u(#JOBFUN/fun_extract_data,xget(%q1,%q2),submitter)]=Job Closed - %0/%N has closed your job %0.%R%R[u(#JOBFUN/fun_display_job_long,%q1,%q2,xget(%q1,%q2))];@fo %#=+bbpost Staff Job Notices/Job %0 Closed=[u(#JOBFUN/fun_display_job_long,%q1,%q2,xget(%q1,%q2))];@wait 4=[wipe(%q1/%q2)]}
&CMD-+JOBS-COLLAPSE Jobs System=$+jobs/collapse:think [setq(0,u(#JOBFUN/fun_get_jobs_list,all))][setq(1,words(%q0))]iter(%q0,[set(before(##,:),JOB_#@:[xget(before(##,:),after(##,:))])][switch(gt(after(after(##,:),_),%q1),1,wipe([before(##,:)]/[after(##,:)]))])[set(#JOBFUN,next_job:[inc(%q1)])][pemit(%#,ansi(hg,You collapse the job numbers.))]
&CMD-+JOBS-COMMENT Jobs System=$+jobs/comment *=*:think [setq(0,u(#JOBFUN/fun_find_job,%0))][setq(1,before(%q0,:))][setq(2,after(%q0,:))]pemit(%#,switch(0,words(%q0),ansi(hr,That is not a valid job number.),ansi(hg,You add a comment to Job %0.[set(%q1,%q2:[u(#JOBFUN/fun_replace_data,xget(%q1,%q2),comments,[u(#JOBFUN/fun_extract_data,xget(%q1,%q2),comments)]\\\%R\\\%R\[%N - [time()]\]\\\%R[escape_cr(%1)])])]))
&CMD-+JOBS-CREATE Jobs System=$+jobs/create *=*/*:think pemit(%#,switch(0,hasattr(#JOBFUN,cat_%0),ansi(hr,That is not a valid job category.  Try one of these: [iter(lattr(#JOBFUN/cat_*),after(##,_))]),ansi(hg,You submit a new job.)[u(#JOBFUN/fun_create_job,%0,%1,%2,%#)]))
&CMD-+JOBS-CREDITS Jobs System=$+jobs/credits:think pemit(%#,[line()]%RJobs System Version [xget(#42,version)]%R%RInterface and functionality based on the Anomaly Jobs system.  Although Anomaly Jobs has a lot more functionality and is probably better for larger games/staff, this system is a bit simpler and has a few additional features.  Also, it works on PennMUSH.%R%RCoded by Faraday ~ http://www.wordsmyth.org/faraday%R[line()])
&CMD-+JOBS-DUE Jobs System=$+jobs/due *=* * *:think [setq(0,u(#JOBFUN/fun_find_job,%0))][setq(1,before(%q0,:))][setq(2,after(%q0,:))][setq(3,convtime(Mon %1 %2 01:00:00 %3))]pemit(%#,switch(0,words(%q0),ansi(hr,That is not a valid job number.),gt(%q3,0),ansi(hr,That is an invalid date format. Use "Month Day Year".),ansi(hg,You set the due date Job %0 to %1 %2 %3.[set(%q1,%q2:[u(#JOBFUN/fun_replace_data,xget(%q1,%q2),duedate,%q3)])]))
&CMD-+JOBS-FILTER Jobs System=$+jobs/filter *:think pemit(%#,[setq(0,1)][trim(iter(%0,switch(##,me,,all,,new,,switch(1,hasattr(#JOBFUN,cat_##),,setq(0,0)[ansi(hr,## is an invalid filter setting.)]))))][switch(%q0,1,ansi(hg,You set your jobs filter to %0.)[set(%#,jobs_filter:%0)])]
&CMD-+JOBS-HANDLE Jobs System=$+jobs/handle *:think [setq(0,u(#JOBFUN/fun_find_job,%0))][setq(1,before(%q0,:))][setq(2,after(%q0,:))]pemit(%#,switch(0,words(%q0),ansi(hr,That is not a valid job number.),ansi(hg,You assign Job %0 to yourself.[set(%q1,%q2:[u(#JOBFUN/fun_replace_data,xget(%q1,%q2),handler,%N)])]))
&CMD-+JOBS-HELP Jobs System=$+jobs/help*:think pemit(%#,[line_with_text(Jobs System)]%R[switch(%0,,u(#JOBFUN/help_+jobs),u(#JOBFUN/help_+jobs_[trim(%0)]))]%R[line_with_text(+jobs/help)])
&CMD-+JOBS-MAIL Jobs System=$+jobs/mail *=*/*:@switch [setq(0,u(#JOBFUN/fun_find_job,%0))][setq(1,before(%q0,:))][setq(2,after(%q0,:))]0=words(%q0),@pemit %#=ansi(hr,That is not a valid job number.),{@pemit %#=ansi(hg,You add a comment to Job %0.)[set(%q1,%q2:[u(#JOBFUN/fun_replace_data,xget(%q1,%q2),comments,[u(#JOBFUN/fun_extract_data,xget(%q1,%q2),comments)]\\\%R\\\%R\[%N - [time()]\]\\\%R[escape_cr(%2)])])];+mail %1=Job Comment Added/%N has added the following comment to Job %0 - [u(#JOBFUN/fun_extract_data,xget(%q1,%q2),title)]:%R%R%2}
&CMD-+JOBS-ME Jobs System=$+jobs/me:think pemit(%#,[line_with_text(My Jobs)]%R[u(#JOBFUN/fun_display_header)][iter(u(#JOBFUN/fun_get_jobs_list,me,%#),%R[u(#JOBFUN/fun_display_job,##)])]%R[line_with_text(+jobs/help)])
&CMD-+JOBS-NEW Jobs System=$+jobs/new:think pemit(%#,[line_with_text(New Jobs)]%R[u(#JOBFUN/fun_display_header)][iter(u(#JOBFUN/fun_get_jobs_list,new,%#),%R[u(#JOBFUN/fun_display_job,##)])]%R[line_with_text(+jobs/help)])
&CMD-+JOBS-NEWCAT Jobs System=$+jobs/newcat *:think [setq(0,trim(%0))]pemit(%#,switch(1,hasattr(#JOBFUN,cat_%q0),ansi(hr,There is already a category with that name.),gt(words(%q0),1),ansi(hr,Too many words in category name.),gt(strlen(%q0),5),ansi(hr,Category name too long.),[ansi(hg,You create category %q0.)][setq(1,create(ucstr(%q0)))][tel(%q1,me)][set(#JOBFUN,cat_%q0:%q1)]))
&CMD-+JOBS-PRI Jobs System=$+jobs/pri *=*:think [setq(0,u(#JOBFUN/fun_find_job,%0))][setq(1,before(%q0,:))][setq(2,after(%q0,:))]pemit(%#,switch(0,words(%q0),ansi(hr,That is not a valid job number.),member(HIGH MEDIUM LOW,ucstr(%1)),ansi(hr,That is not a valid priority.),ansi(hg,You set the priority of Job %0 to %1.[set(%q1,%q2:[u(#JOBFUN/fun_replace_data,xget(%q1,%q2),priority,switch(%1,high,H,medium,M,low,L))])]))
&CMD-+JOBS-STATUS Jobs System=$+jobs/status *=*:think [setq(0,u(#JOBFUN/fun_find_job,%0))][setq(1,before(%q0,:))][setq(2,after(%q0,:))]pemit(%#,switch(0,words(%q0),ansi(hr,That is not a valid job number.),member(xget(#JOBFUN,status_vals),ucstr(%1)),ansi(hr,That is not a valid status.),ansi(hg,You set the status of Job %0 to %1.[set(%q1,%q2:[u(#JOBFUN/fun_replace_data,xget(%q1,%q2),status,switch(isnum(%1),1,%1\%,ucstr(%1)))])]))
&CMD-+JOBS-TITLE Jobs System=$+jobs/title *=*:think [setq(0,u(#JOBFUN/fun_find_job,%0))][setq(1,before(%q0,:))][setq(2,after(%q0,:))]pemit(%#,switch(0,words(%q0),ansi(hr,That is not a valid job number.),ansi(hg,You set the title of Job %0 to %1.[set(%q1,%q2:[u(#JOBFUN/fun_replace_data,xget(%q1,%q2),title,%1)])]))
&CMD-+JOBS-VIEW Jobs System=$+jobs *:think [setq(0,u(#JOBFUN/fun_find_job,%0))][setq(7,before(%q0,:))][setq(8,after(%q0,:))][setq(9,xget(%q7,%q8))]pemit(%#,switch(%q0,,ansi(hr,That is not a valid job.),[line_with_text(Job %0)]%R[u(#JOBFUN/fun_display_job_long,%q7,%q8,%q9)]%R[line_with_text(+jobs/help)])
&ISSTAFF Jobs System=isstaff(%#)
@STARTUP Jobs System=@set me=!no_command;@function create_job=#JOBFUN/fun_create_job
@set Jobs System/STARTUP=no_command prefixmatch
@set Jobs System = !NO_COMMAND



@create Jobs Functions and Data
@set Jobs Functions and Data = NO_COMMAND
&FUN_CREATE_JOB Jobs Functions and Data=[set([xget(#JOBFUN,cat_[trim(%0)])],job_[xget(#JOBFUN,next_job)]:%1|[secs()]|[name(%3)]|||NEW|M|[escape_cr(%2)]|)][set(#JOBFUN,next_job:[inc(xget(#JOBFUN,next_job))])][iter(lwho(),switch(isstaff(##),1,pemit(##,ansi(hg,New Job Submitted: %1))))]
&FUN_DISPLAY_HEADER Jobs Functions and Data=[ansi(hu,[ljust(#,5)][ljust(Cat,6)][ljust(Title,21)][ljust(Submitter,14)][ljust(Handler,14)][ljust(Due Date,11)]Status)]
&FUN_DISPLAY_JOB Jobs Functions and Data=[setq(7,before(%0,:))][setq(8,after(%0,:))][setq(9,xget(%q7,%q8))][ljust(after(%q8,_),4)]%B[ansi(switch(u(#JOBFUN/fun_extract_data,%q9,priority),H,hr,M,hy,L,hg),[ljust(name(%q7),5)]%B[padstr(u(#JOBFUN/fun_extract_data,%q9,title),20)])]%B[padstr(u(#JOBFUN/fun_extract_data,%q9,submitter),13)]%B[padstr(switch(u(#JOBFUN/fun_extract_data,%q9,handler),,-----------,u(#JOBFUN/fun_extract_data,%q9,handler)),13)]%B[padstr(u(#JOBFUN/fun_format_duedate,u(#JOBFUN/fun_extract_data,%q9,duedate)),10)]%B[u(#JOBFUN/fun_extract_data,%q9,status)]
&FUN_DISPLAY_JOB_LONG Jobs Functions and Data=[center(~ [u(#JOBFUN/fun_extract_data,%2,title)] ~,78)]%R[ansi(h,Category:)]%B%B%B%B%B[ljust(name(%0),20)][center(~~~,10)][ansi(h,Priority:)]%B%B%B[switch(u(#JOBFUN/fun_extract_data,%2,priority),H,ansi(hr,HIGH),M,ansi(hy,MEDIUM),L,ansi(hg,LOW))]%R[ansi(h,Submitted By:)]%B[padstr(u(#JOBFUN/fun_extract_data,%2,submitter),20)][center(~~~,10)][ansi(h,Handled By:)]%B[u(#JOBFUN/fun_extract_data,%2,handler)]%R[ansi(h,Submit Date:)]%B%B[timefmt($m/$d/$y,u(#JOBFUN/fun_extract_data,%2,submitted))]%R[ansi(h,Due Date:)]%B%B%B%B%B[padstr(u(#JOBFUN/fun_format_duedate,u(#JOBFUN/fun_extract_data,%2,duedate)),20)][center(~~~,10)][ansi(h,Status:)]%B%B%B%B%B[u(#JOBFUN/fun_extract_data,%2,status)]%R%R[ansi(hu,Description:)]%R[replace_cr(u(#JOBFUN/fun_extract_data,%2,description))]%R%R[ansi(hu,Comments:)]%R[replace_cr(u(#JOBFUN/fun_extract_data,%2,comments))]
&FUN_EXTRACT_DATA Jobs Functions and Data=extract(%0,match(v(order),%1),1,|)
&FUN_FIND_JOB Jobs Functions and Data=trim(iter(lattr(me/cat_*),switch(hasattr([v(##)],JOB_%0),1,[v(##)]:JOB_%0)))
&FUN_FORMAT_DUEDATE Jobs Functions and Data=switch(%0,,None Set,ansi(switch(sub(%0,secs()),<0,ri,<616251,yi,n),timefmt($m/$d/$y,%0)))
&FUN_GET_JOBS_LIST Jobs Functions and Data=sort_oldest(trim(squish(iter(lattr(me/cat_*),iter(lattr([v(##)]/JOB*),switch(1,u(#JOBFUN/fun_matches_filter,%0,%1,[v(##)],[itext(0)]),[v(##)]:[itext(0)])))))
&FUN_MATCHES_FILTER Jobs Functions and Data=[trim([setq(9,0)][setq(8,xget(%2,%3))][iter(%0,switch(##,all,setq(9,1),me,switch(u(#JOBFUN/fun_extract_data,%q8,handler),name(%1),setq(9,1)),submit,switch(u(#JOBFUN/fun_extract_data,%q8,submitter),name(%1),setq(9,1)),new,switch(sub(secs(),u(#JOBFUN/fun_extract_data,%q8,submitted)),<86400,setq(9,1)),switch(name(%2),##,setq(9,1))))]%q9)]
&FUN_REPLACE_DATA Jobs Functions and Data=replace(%0,match(v(order),%1),%2,|)
&HELP_+JOBS Jobs Functions and Data=The Jobs system allows you to track staff work assignments.  The help for various commands is organized into separate help files.  Choose one of the following categories:%R%R%T[ansi(h,basic)] - Basic job functionality%R%T[ansi(h,display)] - Advanced job list and display options%R%T[ansi(h,status)] - Change job status fields%R%T[ansi(h,setup)] - Setup and management commands%R%RType [ansi(h,+jobs/help <category>)] for more information on a particular topic.
&HELP_+JOBS_BASIC Jobs Functions and Data=The list below shows the basic commands in the job system to view, open, and close jobs.%R%R[ansi(h,+jobs)] - Lists jobs%R[ansi(h,+jobs <#> )] - Views job details%R%R[ansi(h,+jobs/create <category>=<title>/<description>)] - Creates a new job%R[ansi(h,+jobs/assign <#>=<player> )] - Assigns a job%R[ansi(h,+jobs/handle <#> )] - Assigns a job to yourself%R%R[ansi(h,+jobs/comment <#>=<comment>)] - Adds a comment to a job.%R%TNote that all comments will be sent to the submitter%R%Twhen the job is closed.%R[ansi(h,+jobs/mail <#>=<to-list>/<comment> )] - Adds a comment to a job and%R%Tsends a mail to the people on 'to-list'%R[ansi(h,+jobs/close <#> )] - Closes a job.%R%TA copy will be posted to the Staff Jobs BBS%R%TAnother copy will be sent to the original submitter.
&HELP_+JOBS_DISPLAY Jobs Functions and Data=The basic jobs command (+jobs) defaults to showing you all jobs.  However, you can configure what jobs this shows by setting up a job filter.  The filter can have multiple entries.  For example, if you're the leader of a sphere, you might want to see all jobs assigned to you AND all jobs in your sphere.%R%RThe filter accepts keywords for each category, and also special keywords:  [ansi(hg,all)] (All jobs), [ansi(hg,me)] (Jobs assigned to you), [ansi(hg,new)] (Jobs created in the last 24 hours)%R%RIf you want to search for only certain jobs, without changing your filter, there are a number of extra commands you can use.%R%R[ansi(h,+jobs/all)] - Shows all jobs%R[ansi(h,+jobs/me )] - Shows jobs assigned to you%R[ansi(h,+jobs/new )] - Shows jobs created in the last 24 hours%R[ansi(h,+jobs/<cat> )] - Shows jobs in the given category%R%R[ansi(h,+jobs/filter <list> )] - Sets up filter for the regular +jobs command%R%T"list" can be a space-separated list to use multiple filters%R%TFor example: +jobs/filter code me
&help_+jobs_setup Jobs Functions and Data=When you first setup the job system, there are a few default categories.  You should create the ones you want (for example:  CODE, BUILD, TP, etc.) after installing the system.%R%R[ansi(h,+jobs/catlist)] - Shows a list of categories you've created%R[ansi(h,+jobs/newcat <catname>)] - Creates new category.%R%TThe name must be less than 6 characters long%R[ansi(h,+jobs/delcat <catname>)] - Deletes a category AND ALL JOBS WITHIN IT.%R[ansi(h,+jobs/collapse)] - Renumbers the jobs starting with '1'.%R%TUse this if your job numbers are getting too big.%R%RYou can integrate the jobs system with other coded systems using the create_job function.  The syntax is: [ansi(h,\create_job(CATEGORY,TITLE,TEXT,SUBMITTER DB#))] For example:%R%Tcreate_job(BG,BG Submittal,\%N has submitted a background.,\%#)%R%R[ansi(h,+jobs/credits)] - Shows credits and version info
&HELP_+JOBS_STATUS Jobs Functions and Data=The basic job commands allow you to assign and add comments to jobs.  However, the jobs system also has a few advanced features.  You can edit a job's priority, set a due date, and change some of its attributes.  You can also indicate its completion status.  Typically this will be a percent complete, but there are a few special states.  "WORK" just means you're working on it but don't have an actual percent done.  "PEND" can be used if you're waiting on something.  "DEFER" can be used if you don't want to do it now (but may do it eventually).%R%R[ansi(h,+jobs/pri <#>=<high, medium, low> )] - Changes priority%R%TThe system will show the priorities in different colors.%R[ansi(h,+jobs/due <#>=<date>)] -  Sets due date%R%TFormat: Mon Day Year, For example: Jan 01 2004%R%TThe system will show overdue jobs, and jobs due soon%R%T with different colors.%R[ansi(h,+jobs/status <#>=<status>)] - Changes job status%R%T[xget(#JOBFUN,status_vals)]%R[ansi(h,+jobs/title <#>=<title> )] - Changes job title%R[ansi(h,+jobs/cat <#>=<new cat> )] - Changes a job category.
&HELP_+REQUEST Jobs Functions and Data=The +request system is used to submit requests to staff.  You must provide a title for your request (please, keep these somewhat short) and a full-length description.  You can track the status of your request, as well as who it's assigned to and when it's due.%R%R[ansi(h,+request <title>=<description>)] - Submits a request%R[ansi(h,+request)] - Views your open requests%R[ansi(h,+request <#>)] - Views details of an open request.
&NEXT_JOB Jobs Functions and Data=1
&ORDER Jobs Functions and Data=Title Submitted Submitter Handler DueDate Status Priority Description Comments
&STATUS_VALS Jobs Functions and Data=NEW DEFER PEND WORK 25 50 75
&VERSION Jobs Functions and Data=1.0

@create Request System
@set Request System = WIZARD
@set Request System = !NO_COMMAND
&CMD-+REQUEST-LIST Request System=$+request:think pemit(%#,[line_with_text(Open Requests - %q0)]%R[u(#JOBFUN/fun_display_header)][iter(u(#JOBFUN/fun_get_jobs_list,submit,%#),%R[u(#JOBFUN/fun_display_job,##)])]%R[line_with_text(+request/help)])
&CMD-+REQUEST-HELP Request System=$+request/help:think pemit(%#,[line()]%R[u(#JOBFUN/help_+request)]%R[line()])
&CMD-+REQUEST-SUBMIT Request System=$+request *=*:think pemit(%#,switch(1,or(match(%0,*|*),match(%1,*|*)),ansi(hr,Don't include the | character in your request.),ansi(hg,You submit a new request.)[create_job(REQ,{%0},{%1},%#)]))
&CMD-+REQUEST-VIEW Request System=$+request *:think switch(%0,*=*,,[setq(0,u(#JOBFUN/fun_find_job,%0))][setq(7,before(%q0,:))][setq(8,after(%q0,:))][setq(9,xget(%q7,%q8))]pemit(%#,switch(0,words(%q0),ansi(hr,That is not a valid request.),t(match(u(#JOBFUN/fun_extract_data,%q9,submitter),%N)),ansi(hr,That is not one of your requests.),[line_with_text(Request %0)]%R[u(#JOBFUN/fun_display_job_long,%q7,%q8,%q9)]%R[line_with_text(+request/help)]))
@STARTUP Request System=@set me=!no_command
@set Request System/STARTUP=no_command prefixmatch

@pemit/silent %#=[ansi(hr,Setting up database numbers...)]%R

@wait 2=@fo me=@edit Jobs System/*=#JOBFUN,[num(Jobs Functions and Data)]
@wait 2=@fo me=@edit Jobs Functions and Data/*=#JOBFUN,[num(Jobs Functions and Data)]
@wait 2=@fo me=@edit Request System/*=#JOBFUN,[num(Jobs Functions and Data)]
@wait 2=@fo me=@tr Jobs System/startup

@wait 5=@pemit/silent %#=[ansi(hr,Moving objects to their appropriate places...)]%R

@wait 6=@tel Jobs Functions and Data=Jobs System
@wait 7=@tel Jobs System=#2
@wait 7=@tel Request System=#2

@wait 8=@pemit/silent %#=[ansi(hr,Creating default categories...)]%R

@wait 8=@fo %#=+jobs/newcat BG
@wait 9=@fo %#=+jobs/newcat RP
@wait 10=@fo %#=+jobs/newcat CODE
@wait 11=@fo %#=+jobs/newcat BUILD
@wait 12=@fo %#=+jobs/newcat REQ

@wait 13=@pemit/silent %#=[ansi(hr,Make sure you have also installed the Global Utility Functions system.%RYou may also wish to set up a "Staff Jobs Notices" BBS.)]

@wait 14=@pemit/silent %#=%R%R[ansi(hr,Installation Complete!!)]%R

@wait 15=@set me=!quiet

