@@ Faraday's MUSH Postmaster System
@@ Author:  Linda O'Meara
@@ Website: http://code.google.com/p/faramushcode/
@@
@@ Visit the website for documentation, installation instructions, bug reports,
@@ and more.

@set me=quiet

@pemit/silent %#=[ansi(hr,Beginning Postmaster System Installation.  Please wait until the Installation Complete message appears...)]%R

@pemit/silent %#=[ansi(hr,Creating Objects...)]%R


@create MUSH Postmaster
@set MUSH Postmaster = WIZARD
@set MUSH Postmaster = !NO_COMMAND

&CMD-+LIST MUSH Postmaster=$+list:think pemit(%#,[line()]%R[ansi(h[rand_color()],Mailing Lists)]%R%R[ansi(h,Title[space(15)]Description)]%r[repeat(-,78)]%R[iter(sort([lattr(#MAILDB/list_*)]),u(#MAILFUN/FUN_SHOW_LIST_SUMMARY,##,%#))]%R%R[ansi(hb,Private Lists)][iter(sort([lattr(%#/list_*)]),u(#MAILFUN/FUN_SHOW_LIST_SUMMARY,##,%#))]%R%RUse [ansi(h,+mail <list title>=<subject>/<message>)] to send a message to a mailing list.%RUse [ansi(h,+list <list title>)] to view the members of a list.%R[line()]
&CMD-+LIST-ADD MUSH Postmaster=$+list/add *=*:think [setq(0,pmatch(%0))][setq(1,trim(%1))]pemit(%#,switch(0,t(%q0),ansi(hr,That is not a valid player.),hasattr(#MAILDB,list_%q1),ansi(hr,That is not a valid list.  Use +list/new to create a new one.),not(match(xget(#MAILDB,list_%q1),%0)),ansi(hr,That person is already on that list.),ansi(hg,You add %0 to the %1 list.)[set(#MAILDB,list_%q1:[xget(#MAILDB,list_%q1)][name(%q0)]%B)]))
&CMD-+LIST-COMMENT MUSH Postmaster=$+list/comment */*=*:think [setq(0,pmatch(%0))][setq(1,trim(%1))]pemit(%#,switch(0,t(%q0),ansi(hr,That is not a valid player.),hasattr(#MAILDB,list_%q1),ansi(hr,That is not a valid list.),ansi(hg,You set %0's comment for the %1 list to %2.)[set(%q0,comment_%q1:%2)]))
&CMD-+LIST-DELETE MUSH Postmaster=$+list/delete *:think [setq(0,trim(%0))]pemit(%#,switch(0,hasattr(#MAILDB,list_%q0),ansi(hr,That is not a valid list name.),ansi(hg,You delete list %0.)[wipe(#MAILDB/list_%q0)][set(#MAILDB,restricted:[remove(xget(#MAILDB,restricted),%q0)]%B)][wipe(#MAILDB/comment_%q0)]))
&CMD-+LIST-DETAIL MUSH Postmaster=$+list *:think [setq(0,%#)][switch(1,not(or(hasattr(%q0,list_[trim(%0)]),hasattr(#MAILDB,list_[trim(%0)]))),pemit(%#,ansi(hr,[capstr(%0)] is not a valid list.  Type +list to see what lists are available.)),and(match(xget(#MAILDB,restricted),[trim(%0)]),not(or(isstaff(%#),match(xget(#MAILDB,list_[trim(%0)]),%#)))),pemit(%#,ansi(hr,[capstr(%0)] is a restricted list and you are not on it.  You can still send messages to it but you can't see who's on it.)),pemit(%#,[line()]%R[center(ansi(h,[capstr(lcstr(trim(%0)))] List),78)]%R [center(switch(t(match(lattr(%q0/list_*),list_[trim(%0)])),1,xget(%q0,comment_[trim(%0)]),xget(#MAILDB,comment_[trim(%0)])),78)]%R%RName[space(12)]Comment[space(30)]Last Online%r[repeat(-,78)][iter(sortby(#MAILDB/FUN_SORT_LIST,switch(t(match(lattr(%q0/list_*),list_[trim(%0)])),1,xget(%q0,list_[trim(%0)]),xget(#MAILDB,list_[trim(%0)]))),%R[padstr(##,14,left,.)]%B%B[padstr(xget(pmatch(##),comment_[trim(%0)]),35,left,.)]%B%B[padstr(switch(and(hasflag(pmatch(##),connected),not(hasflag(pmatch(##),dark))),1,CONNECTED,xget(pmatch(##),last)),24,left,.)])]%R[line()]))]
&CMD-+LIST-NEW MUSH Postmaster=$+list/new *=*/*:think [setq(0,edit(trim(%0),%B,_))]pemit(%#,switch(0,not(hasattr(#MAILDB,list_%q0)),ansi(hr,There is already a list with that name.),match(yes no,%1),ansi(hr,You must specify 'yes' or 'no' for whether the list is restricted.),ansi(hg,You create a new list %0.)[set(#MAILDB,list_%q0:)][switch(%1,y*,set(#MAILDB,restricted:[xget(#MAILDB,restricted)]%q0%B))][set(#MAILDB,comment_%q0:%2)]))
&CMD-+LIST-REMOVE MUSH Postmaster=$+list/remove *=*:think [setq(0,pmatch(%0))][setq(1,trim(%1))]pemit(%#,switch(0,t(%q0),ansi(hr,That is not a valid player.),hasattr(#MAILDB,list_%q1),ansi(hr,That is not a valid list.),match(xget(#MAILDB,list_%q1),%0),ansi(hr,That person is not on that list.),ansi(hg,You remove %0 from the %1 list.)[set(#MAILDB,list_%q1:[remove(xget(#MAILDB,list_%q1),name(%q0))]%B)]))
&CMD-+MAIL MUSH Postmaster=$+mail *=*/*:@fo %#=@mail [setq(0,u(#MAILFUN/fun_build_to_list,%0,%#))]%q0=%1/[ansi(h,Sent To:)] [iter(%0,capstr(##))]%R%R[edit(%2,\;,\\\;)]
&CMD-+MAIL-++ MUSH Postmaster=$++*:think switch(0,hasattr(%#,mailsub),pemit(%#,You are not composing a mail message.),pemit(%#,%r[line()]%r[ansi(hg,You add to your mail message.[set(%#,mailbody:[xget(%#,mailbody)]%b[edit(%0,\;,\\\;)])] It now reads:)]%r[u(%#/mailbody)]%r%RUse +mail/send to send your message or ++<text> to add to it.%R[line()]%r)
&CMD-+MAIL-ABORT MUSH Postmaster=$+mail/abort:think pemit(%#,You abort your mail composition.[iter(mailto mailsub mailbody,wipe(%#/##))])
&CMD-+MAIL-ADD2 MUSH Postmaster=$-*:think switch(0,hasattr(%#,mailsub),pemit(%#,You are not composing a mail message.),pemit(%#,%r[line()]%r[ansi(hg,You add to your mail message.[set(%#,mailbody:[xget(%#,mailbody)]%b[edit(%0,\;,\\\;)])] It now reads:)]%r[u(%#/mailbody)]%r%RUse +mail/send to send your message or -<text> to add to it.%R[line()]%r)
&CMD-+MAIL-ANON MUSH Postmaster=$+mail/anon */*=*/*:@switch/first 0=hasattr(#MAILDB,list_%0),@pemit %#=That is not a valid list name.,t(match(xget(#MAILDB,list_%0),%N)),@pemit %#=You are not a member of that list.,t(match(xget(#MAILDB,restricted),%0)),@pemit %#=This command can only be used for restricted lists.,{@pemit %#=Message sent.;@fo #56=@mail [setq(0,u(#MAILFUN/fun_build_to_list,%1,%#))]%q0=%2/[ansi(h,From:)]%B%B%B [capstr(%0)] \(Anonymous\)%R[ansi(h,Sent To:)] [iter(%1,capstr(##))] [capstr(%0)] Staff%R%R[edit(%3,\;,\\\;)];@fo %#=+mail staff %0=%2/[ansi(h,From:)] [capstr(%0)] \(Anonymous - %N\)%R[ansi(h,Originally Sent To:)] [iter(%1,capstr(##))]%R%R[edit(%3,\;,\\\;)]}
&CMD-+MAIL-EDIT MUSH Postmaster=$+mail/edit *=*:think switch(hasattr(%#,mailbody),0,pemit(%#,There is no text in the mail message to edit.),[set(%#,mailbody:[edit(xget(%#,mailbody),{%0},{%1})])][pemit(%#,%r[line(+mail System,Composition)]%rYou edit your mail message. It now reads:%r%r[u(%#/mailbody)]%r[line(The Babylon Project,+mail/send to send your message)]%r)])
&CMD-+MAIL-FWD MUSH Postmaster=$+mail/fwd *=*/*:+mail %0=%2/[mail(%#,%1
&CMD-+MAIL-PROOF MUSH Postmaster=$+mail/proof:think switch(hasattr(%#,mailto),0,pemit(%#,You are not composing a mail message.),pemit(%#,%r[line(+mail System,Composition)]%r[ansi(h,To:)] [xget(%#,mailto)]%r[ansi(h,From:)] %N%R[ansi(h,Subject:)]  [xget(%#,mailsub)]%r[repeat(-,30)]%r[u(%#/mailbody)]%r[line(The Babylon Project,+mail/send to send your message)]%r))
&CMD-+MAIL-SEND MUSH Postmaster=$+mail/send:@fo %#=@mail [setq(0,u(#MAILFUN/fun_build_to_list,xget(%#,mailto),%#))]%q0=[xget(%#,mailsub)]/{[ansi(h,Sent To:)] [iter(%q0,capstr(##))]%R%R[u(%#/mailbody)]};@dolist mailto mailsub mailbody=@wipe %#/##
&CMD-+MAIL-START MUSH Postmaster=$+mail/start *=*:think switch(1,hasattr(%#,mailto),pemit(%#,You are already composing a mail message.),match(%1,*/*),pemit(%#,You can't use a '/' in your subject.),pemit(%#,%r[line()]%rYou begin composing your mail message to %0 with subject %1. Use -<text> to add text to your mail message.[set(%#,mailto:%0)][set(%#,mailsub:%1)]%r%RUse +mail/send to send your message.%R[line()]))
&CMD-+MAIL2 MUSH Postmaster=$+mail *=*:@switch %0=*/*,@fo %#={+mail [before(%0,/)]=[after(%0,/)]/[edit(%1,\;,\\\;)]},{@switch %1=*/*,,@fo %#=+mail/start %0=%1}
&CREDITS MUSH Postmaster=Version [v(version)]%R%RCoded by Faraday ~ http://www.wordsmyth.org/faraday
@DESCRIBE MUSH Postmaster=Mailing list and mail composition wrapper.%R[u(credits)]
@set MUSH Postmaster/DESCRIBE=no_command visual prefixmatch public nearby
@STARTUP MUSH Postmaster=@set me=!no_command
@set MUSH Postmaster/STARTUP=no_command prefixmatch
&VERSION MUSH Postmaster=3.0



@create Mail Functions
@describe Mail Functions=Stores functions and data for the +mail system.
@set Mail Functions = WIZARD
@set Mail Functions = NO_COMMAND
&FUN_BUILD_TO_LIST Mail Functions=setunion(switch(xget(%1,cc_sent_mail),1,[name(%1)]),iter(%0,switch(1,isplayer(##),capstr(##),hasattr(%1,list_##),xget(%1,list_##),hasattr(#MAILDB,list_##),xget(#MAILDB,list_##))),%B)
&FUN_SHOW_LIST_SUMMARY Mail Functions=%R[padstr(capstr(lcstr(after(%0,_))),20)][switch(t(match(lattr(%1/list_*),%0)),1,Private List,u(#MAILDB/comment_[after(%0,_)]))]
&HELP_+LIST Mail Functions=See +help +mail_list
&HELP_+MAIL Mail Functions=The +mail command allows you to send messages through the @mail system.  There are a few commands that let you use a MUX-like syntax for composing messages a little at a time, rather than all at once.%R%RThe other benefit of the +mail system is the ability to send to mailing lists.  The "to-list" can be any combination of mailing lists and player names.%R%RYou can set up the system to automatically carbon copy you on all messages you sent.  To do this, set:  [ansi(h,&cc_sent_mail me=1)]%R%R[ansi(hg,Quick Mail Usage:)]%R[ansi(h,+mail <to-list>=<subject>/<message>)] - send a message%R%R[ansi(hg,Other help topics:)]%R[ansi(h,+help +mail_compose)] - MUX-mail style composition%R[ansi(h,+help +mail_list)] - Mailing list help
&MORE_HELP_+MAIL_COMPOSE Mail Functions=The following commands show how to create mail messages by composing them a little at a time.%R%R[ansi(hg,Compose (MUX) Style Usage:)]%R[ansi(h,+mail/start <to-list>=<subject>)] [ansi(hb,-or-)]%r[ansi(h,+mail <to-list>=<subject, which may not contain a />)]%r%tbegins composing your mail message%r[ansi(h,-<text>)] - Adds text to the body of your mail message%r[ansi(h,+mail/proof)] - Reviews the message%r[ansi(h,+mail/edit <text to find>=<text to replace>)] - %R%TEdits the body of your mail message.%R%TYou can also use the @edit command on your MAILBODY attribute.%r[ansi(h,+mail/abort)] - Cancels your message in progress%r[ansi(h,+mail/send)] - Sends the mail message
&MORE_HELP_+MAIL_LIST Mail Functions=The +mail system supports sending messages to mailing lists.  There are certain public lists, created by staff, and private lists that you can create for your own purposes.%R%RPublic lists may be restricted, meaning that only members of the list (or staff) can see who's on it.  You can still send messages to those lists - you just won't be able to tell who it's going to.  Players who receive the messages can then reply anonymously so they can answer the mail without revealing their membership on the list.%R%R[ansi(hg,Mailing List Usage:)]%R[ansi(h,+list)] - Shows all lists%R[ansi(h,+list <list name>)] - Views members of a list.%R%R[ansi(h,&list_<name> me=Player1 Player2 etc.)] - Create your own personal mailing list.  You can edit or delete it later using the standard MUSH attribute commands.%R[ansi(h,&comment_<listname> me=<comment>)] - Change the comment that shows up beside your name if you're on a list.%R%R[ansi(h,+mail/anon <listName>/<to-list>=<subject>/<message>)] - Replies anonymously to a message.  You must be a member of 'listname' and it must be a restricted list.  Both staff and the list will get a copy of the message automatically, and it will show who sent it.%R%RFor example: You could use this if someone sent a message to the "Underground" list requesting to be contacted by someone in the black market.  You could reply saying "Someone will contact you." without giving away the fact that you're in the underground.
&SHELP_+LIST Mail Functions=These commands can be used to manage the +mail mailing lists:%R%R[ansi(h,+list/add <player>=<list>)] - Adds someone to a list.%R[ansi(h,+list/remove <player>=<list>)] - Removes someone from a list.%R[ansi(h,+list/comment <player>/<list>=<comment>)] - Sets a player's list comment.%R%R[ansi(h,+list/new <list>=<restricted? yes or no>/<list comment>)] - Creates a new mailing list.%R[ansi(h,+list/delete <list>)] - Deletes a mailing list.%R%RIf you need to do other stuff, like moving a list from restricted to public, or changing its title, submit a code +job.
&SHELP_+MAIL Mail Functions=See [ansi(h,+shelp +list)] for info on setting up mailing lists.%R%RNote that if a player uses the +mail/anon command to send messages anonymously from a restricted list, a copy will be sent to the list and to the "staff" mailing list (if there is one).  This allows staff members and list members to see who sent what.

@create Mail Lists
@link Mail Lists = #0
@set Mail Lists = NO_COMMAND
@DESCRIBE Mail Lists=Stores the data for the mailing lists.  If you want a custom sort order for the lists, edit FUN_SORT_LIST.
@set Mail Lists/DESCRIBE=no_command visual prefixmatch public nearby
&FUN_SORT_LIST Mail Lists=localize(comp(name(%0),name(%1)))
&RESTRICTED Mail Lists=
&LIST_STAFF Mail Lists=
&COMMENT_STAFF Mail Lists=Staff members.



@pemit/silent %#=[ansi(hr,Setting up database numbers...)]%R

@wait 4=@fo me=@edit MUSH Postmaster/*=#MAILFUN,[num(Mail Functions)]
@wait 4=@fo me=@edit Mail Functions/*=#MAILFUN,[num(Mail Functions)]
@wait 4=@fo me=@edit Mail Lists/*=#MAILFUN,[num(Mail Functions)]
@wait 4=@fo me=@edit MUSH Postmaster/*=#MAILDB,[num(Mail Lists)]
@wait 4=@fo me=@edit Mail Functions/*=#MAILDB,[num(Mail Lists)]
@wait 4=@fo me=@edit Mail Lists/*=#MAILDB,[num(Mail Lists)]

@wait 5=@pemit/silent %#=[ansi(hr,Copying help files...)]%R
@wait 5=@fo %#=+copyhelp [num(Mail Functions)]

@pemit/silent %#=[ansi(hr,Moving objects to their appropriate places...)]%R

@wait 6=@tel Mail Functions=MUSH Postmaster
@wait 6=@tel Mail Lists=MUSH Postmaster
@wait 7=@tel MUSH Postmaster=#2

@wait 7=@pemit/silent %#=%R%R[ansi(hr,Installation Complete!!)]%R

@wait 7=@set me=!quiet
