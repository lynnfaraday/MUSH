@@ Faraday's Version of Shofari's Idle Purger
@@ Author:  Shofari@B5MUSH (original), Linda O'Meara (modifications)
@@ Website: http://code.google.com/p/faramushcode/
@@
@@ Visit the website for documentation, installation instructions, bug reports,
@@ and more.


@set me=quiet

@pemit/silent %#=[ansi(hg,Beginning Idle Purger Installation.  Please wait until you see the 'Installation Complete' message...)]%R

@pemit/silent %#=[ansi(hg,Creating Objects...)]%R

think install_create(IDLE_CMD,Idle Purger,1,0,5.0,Idle purger.)

@lock/Use Idle Purger=ISSTAFF/1
&CMD-+IDLE-CONFIG Idle Purger=$+idle/config:think pemit(%#,[line()]%R[ansi(h,Idle Purger Configuration Options)]%R%R[ansi(hg,IDLETIME:)] [div(v(idletime),86400)] days%R[line()])]
&CMD-+IDLE-ADD Idle Purger=$+idle/add *: think [setq(0,[pmatch(%0)])][pemit(%#,switch(t(%q0),0,ansi(hr,That is not a valid player.),[name(%q0)] has been added to the idle queue.[set(me,idlequeue:[v(idlequeue)]%B%q0)]))]
&CMD-+IDLE-CONFIG-IDLETIME Idle Purger=$+idle/config idletime=*:think [switch([isnum(%0)],0,[pemit(%#,You must enter a -number- of days.)],[set(me,idletime:[mul(86400,%0)])][pemit(%#,You set the idle-timeout for player characters to be [ansi(hy,%0)] days)])]
&CMD-+IDLE-NUMS Idle Purger=$+idle/nums:think [pemit(%#,[get(me/idlequeue)])]
&CMD-+IDLE-PLIST Idle Purger=$+idle/plist:[line()]%R[ansi(h,Protected Players)]%R[iter([get(me/idleprotect)],[pemit(%#,[ljust(##,7)] - [name(##)])])][line()]
&CMD-+IDLE-PROTECT Idle Purger=$+idle/protect *:think [setq(0,[pmatch(%0)])][switch([strmatch(%0,[name(%q0)])],0,[pemit(%#,That is not a valid player)],[set(me,idleprotect:[get(me/idleprotect)]%q0%b)][pemit(%#,You have added [name(%q0)] to the protected list.  Please run +idle/start again to ensure they don't get @nuked)])]
&CMD-+IDLE-PURGE Idle Purger=$+idle/purge:@tr me/LIST_PURGE_ACTIONS=[v(idlequeue)];@dolist [get(me/idlequeue)]={@set ##=!safe;@force %#=+purge [name(##)]};@wipe me/idlequeue
&CMD-+IDLE-QUEUE Idle Purger=$+idle/queue:think pemit(%#,DB#[space(6)]Name[space(18)]Approved?%B%BLast On[space(15)]Vacation%R[line()][iter([get(me/idlequeue)],[setq(0,hasflag(##,unregistered))]%R[ljust(##,7)] - [ljust([ansi(switch(%q0,0,h,hx),name(##))],20)] - [switch(%q0,0,YES,%B%B%B)]%B%B - [left(xget(##,last)],20)] - [get(##/vacation)])])
&CMD-+IDLE-REMOVE Idle Purger=$+idle/remove *: think [setq(0,[pmatch(%0)])][set(me,idletemp:[get(me/idlequeue)])][wipe(me/idlequeue)][switch([strmatch(%0,[name(%q0)])],0,[pemit(%#,That is not a valid player.)],[iter([get(me/idletemp)],[switch([strmatch(%q0,##)],0,[set(me,idlequeue:[get(me/idlequeue)]##%b)],)])][pemit(%#,[name(%q0)] has been removed from the idle queue)],)]
&CMD-+IDLE-START Idle Purger=$+idle/start:think [wipe(me/idlequeue)][setq(0,[convtime([time()])])] [setq(1,0)][iter([lsearch(all,type,players)],[switch([gte([sub(%q0,[convtime([get(##/last)])])],[get(me/idletime)])],1,[switch([strmatch([get(me/idleprotect)],*## *)],0,[set(me,idlequeue:[get(me/idlequeue)]##%b)])])])];@fo %#=+idle/queue
&CMD-+IDLE-UNPROTECT Idle Purger=$+idle/unprotect *:think [setq(0,[pmatch(%0)])] [set(me,idletemp:[get(me/idleprotect)])][switch([strmatch(%0,[name(%q0)])],0,[pemit(%#,That is not a valid player)],[wipe(me/idleprotect)][iter([get(me/idletemp)],[switch([strmatch(%q0,##)],0,[set(me,idleprotect:[get(me/idleprotect)]##%b)],)])][pemit(%#,[name(%q0)] has been removed from the protected list)])]
&CMD-+PURGE Idle Purger=$+purge *:think [setq(0,pmatch(%0))][setq(1,name(pmatch(%0)))];@switch [t(%q0)]=0,@pemit %#=ansi(hr,No such player.),{@tr me/PLAYER_PURGE_ACTIONS=%q0,%#}
&IDLEQUEUE Idle Purger=
&IDLETEMP Idle Purger=
&CREDITS Idle Purger=Originally coded by Shofari@B5MUSH.  Modified and maintained by Faraday (http://www.wordsmyth.org/faraday).

&SHELP_+IDLE Idle Purger=[ansi(hg,Originally Coded by Shofari@B5MUSH.  Modified by Faraday.)]%R%RThe idle purger will nuke old characters that have idled out due to inactivity.  You can also use it as a means to cleanly nuke other players and in the process clean up their objects, mailing lists, etc.  The idle purger does not run automatically.  You execute it at will, and you get to review the list of idle characters before they're nuked.  The general process is:%R%R[ansi(h,+idle/start)] - Checks for idle players%R[ansi(h,+idle/queue)] - Checks the queue of people to be idle-nuked.%R[ansi(h,+idle/remove <name>)] - Removes someone who shouldn't be nuked.%R[ansi(h,+idle/add <name>)] - Adds someone who should be nuked%R[ansi(h,+idle/queue)] - ALWAYS double-check the queue before purging!%R[ansi(h,+idle/purge)] - Executes the purge of everyone in the queue.  [ansi(hr,MAKE ABSOLUTELY SURE BEFORE DOING THIS!)]%R%RNote:  You can also purge players independent of the idle purger simply by using the +purge command.%R%RAlso see +shelp +idle_config for important configuration information.%R%R[ansi(hr,ALWAYS USE +PURGE RATHER THAN @NUKE TO NUKE PLAYERS)]

&SHELP_+PURGE Idle Purger=This command is used to cleanly nuke players.  It will nuke them and clean up any mailing lists, soft-coded housing, or whatever your game needs.  See +shelp +idle for more information.%R%R[ansi(hr,ALWAYS USE +PURGE RATHER THAN @NUKE TO NUKE PLAYERS)]%R%R[ansi(h,+purge <name>)] - Purges a player.

&MORE_SHELP_+IDLE_CONFIG Idle Purger=There are several things you can configure in the idle purger.%R%R[ansi(hm,Idle Timeout)] -  Someone will appear in the list for idle purging when they haven't logged in for this many days.%R[ansi(h,+idle/config idletime=<days>)] - Sets the idle timeout%R[ansi(h,+idle/config)] - Views config info%R%R[ansi(hg,Protected List)] - This is a list of special characters (staff NPCs, feature chars, game wiz characters, builders, guests, etc.) who should never appear on the idle purge list no matter how long they've been idle.%R[ansi(h,+idle/plist)] - Reviews the list of protected chars.%R[ansi(h,+idle/protect <name>)] - Adds someone to the protected list.%R[ansi(h,+idle/unprotect <name>)] - Removes someone from the protected list.%RALWAYS RE-RUN THE +idle/start COMMAND IF YOU CHANGE THE PROTECTED LIST.%R%R[ansi(hc,Purge Actions)] - This is what will happen when characters are purged.  There are two attributes you can configure.  The first is executed only once.  You'd use this if, for instance, you wanted a bbpost listing everyone who's been nuked.  The second is executed once PER CHARACTER.  You'd use this to clean up mailing lists, softcoded housing, etc.  The attributes are stored on the idle purge object.%R[ansi(h,LIST_PURGE_ACTIONS)] - Triggered once for the list of purged characters, which is passed in as \%0.  By default, this will post the list of idle-nuked players to the Announcements bbs.%R[ansi(h,PLAYER_PURGE_ACTIONS)] - Triggered once per character who's nuked.  The character DB# is passed in as \%0 and the person doing the purging is passed as \%1.  By default, this will nuke the player object and remove them from any lists on an object specified in the attribute MAILING_LIST_OBJECT

@STARTUP Idle Purger=@set me=!no_command

&TR_CLEAR_MAIL Idle Purger=@dolist lattr([v(mailing_list_object)]/list_*)={think set([v(mailing_list_object)],##:[remove(xget([v(mailing_list_object)],##),name(%0))])};@fo %1=@nuke [xget(%0,mail_object)]
&TR_REMOVE_ALT Idle Purger=@fo %0=+alts/unregister [name(%0)]
&TR_REMOVE_FRIENDS Idle Purger=@dolist real_players()=think set(##,list_friends:[remove(xget(##,list_friends),[name(%0)])])
&ISSTAFF Idle Purger=isstaff(%#)



@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@    *****       DATA SECTION           *****
@@    *****   CHECK BEFORE UPGRADING     *****
@@    *****   REMOVE OF MODIFY AS NEEDED *****
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

&LIST_PURGE_ACTIONS Idle Purger=+bbpost Announcements/Idle Purge=The following characters have been idle-nuked for inactivity.%R[iter(%0,%R[name(##)])]
&IDLEPROTECT Idle Purger=#1
&IDLETIME Idle Purger=5184000
&MAILING_LIST_OBJECT Idle Purger=#-1
&PLAYER_PURGE_ACTIONS Idle Purger=@tr me/TR_CLEAR_MAIL=%0;@tr me/TR_REMOVE_ALT=%0;@tr me/TR_REMOVE_FRIENDS=%0;@fo %1=@nuke %0

@wait 5=+jobs/create CODE=Idle Purge Protection/Add builders and other potentially-idle staff characters to the protected list so they don't get nuked by the idle purger.  See +shelp +idle.
@wait 5=+jobs/create CODE=Idle Purge Mailing List/Configure the mailing list object on the idle purger so deleted characters get removed from mailing lists.  See +shelp +idle.
@wait 5=+jobs/create CODE=Idle Purge Actions/Set up any additional actions to take upon purging a character, such as room or object cleanup.  See +shelp +idle.

@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@    *****       END DATA SECTION      *****
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


@pemit/silent %#=[ansi(hg,Setting up database numbers...)]%R

@wait 2=+install/updategroup IDLE

@wait 5=@pemit/silent %#=%R%R[ansi(hg,Installation Complete!!)]%R

@wait 5=@set me=!quiet

