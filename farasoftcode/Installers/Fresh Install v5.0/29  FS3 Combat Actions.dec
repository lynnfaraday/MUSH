@@ Faraday's FS3 System
@@ Author:  Linda O'Meara
@@ Website: http://code.google.com/p/faramushcode/
@@
@@ Visit the website for documentation, installation instructions, bug reports,
@@ and more.

@set me=quiet
@pemit/silent %#=%R%R[ansi(hg,Installing FS3 Combat Actions module.)] [ansi(hc,NOTE: This may take a minute.)]

think install_create(FS3_STORAGE,FS3 Object Storage,0,1,5.0,Stores FS3 objects.  See the FS3Combat Action Commands object for important copyright/license information.)
think install_create(FS3COMBAT_CMD_ACTIONS,FS3Combat Action Commands,1,0,5.0,These are the commands for the FS3 skills system.)

think install_create(FS3COMBAT_PREFS,FS3Combat Preferences,0,1,5.0,FS3Combat Preferences.  See the FS3Combat Action Commands object for important copyright/license information.,FS3_STORAGE)

@startup FS3Combat Action Commands=@set me=!no_command

&CREDITS FS3Combat Action Commands=Version [v(version)]%R%RCoded by Faraday ~ http://www.wordsmyth.org/faraday%R%RThe FS3 system is copyright 2007-2008 by Linda Naughton (aka Faraday). All rights reserved. You may reproduce and distribute part or all of these rules and create derivative works (games using FS3) providing a) You don't make any money from it, and b) You include this FS3 copyright and license notice in the distribution.

@set FS3Combat Preferences = !NO_COMMAND

@set FS3Combat Preferences = WIZARD

@@ =============================================================@@ COMBAT ACTIONS

@@ ==================================================================================================
@@ ---------------   Combat Status -----------------
@@ ==================================================================================================


&CMD-+COMBAT-ALL FS3Combat Action Commands=$+combat/all:@pemit %#=[line()]%R[ansi(h,Combat #%B%BOrganizer%B%B%B%BParticipants)][iter(children(#FS3COMBAT_INSTANCE),%R[ljust(##,9)] [padstr(name(xget(##,organizer)),12)] [iter(u(##/fun_participants),prettify(lcstr(itext(0))))])]%R[line()]

&CMD-+COMBAT-STATUS FS3Combat Action Commands=$+combat:@pemit %#=[setq(0,u(fun_combat_num,%N))]switch(0,t(%q0),ansi(hr,You are not in combat.),[ansi(hx,<)][line_with_text(Combat %q0)]%R[ansi(hx,<)] [ansi(h,Name[space(11)]Weapon/Vehicle[space(6)]Damage[space(2)]Stance/Action[space(2)]Target)][iter(u(%q0/fun_active_teams),%R[ansi(hx,<)] %R[ansi(hx,<)] [ansi(hg,Team ##)][iter(sort(u(%q0/fun_team_members,##)),u(fun_display_status,itext(0),%q0))])]%R[ansi(hx,<)]%R[ansi(hx,<)] [ansi(h,Observers/NPCMasters:)] %R[ansi(hx,<)] [iter(setdiff(u(%q0/fun_participants),u(%q0/fun_combatants)),[prettify(lcstr(##))])][switch(xget(%q0,real),0,%R[ansi(hx,<)][center(ansi(hy,*** MOCK COMBAT ***),78)])]%R[ansi(hx,<)][line()])

&CMD-+COMBAT-DETAIL FS3Combat Action Commands=$+combat *:@pemit %#=[setq(0,u(fun_combat_num,%N))]switch(0,t(%q0),ansi(hr,You are not in combat.),u(%q0/fun_is_participant,%0),ansi(hr,%0 is not a valid participant.),[ansi(hx,<)][line()]%R[ansi(hx,<)] [ansi(h,Combat Stats for %0)]%R[ansi(hx,<)] [ansi(h,Type:)] [u(%q0/fun_combatstat,%0,type)] %R[ansi(hx,<)] [ansi(h,Team:)] [u(%q0/fun_combatstat,%0,team)] %R[ansi(hx,<)] [ansi(h,Vehicle:)] [u(%q0/fun_combatstat,%0,vehicle)] %R[ansi(hx,<)] [ansi(h,Weapon:)] [u(%q0/fun_combatstat,%0,weapon)]  %R[ansi(hx,<)] [ansi(h,Ammo)] [u(%q0/fun_combatstat,%0,ammo)]%R[ansi(hx,<)] [ansi(h,Stance:)] [u(%q0/fun_combatstat,%0,stance)] %R[ansi(hx,<)] [ansi(h,Armor:)] [u(%q0/fun_combatstat,%0,armor)] [switch(or(strmatch(xget(%q0,organizer),%#),isstaff(%#)),1,%R[ansi(hx,<)] [ansi(h,Special Modifier:)] [u(%q0/fun_combatstat,%0,mod)])] %R[ansi(hx,<)] [ansi(h,Spending Luck On:)] [u(%q0/fun_combatstat,%0,luck)] %R[ansi(hx,<)] [ansi(h,Last Aimed At:)] [u(%q0/fun_combatstat,%0,lastaim)] %R[ansi(hx,<)] [ansi(h,Suppression Factor)] [u(%q0/fun_combatstat,%0,suppress)] %R[ansi(hx,<)] [ansi(h,Subdued By:)] [u(%q0/fun_combatstat,%0,subduedby)]%R[ansi(hx,<)] [ansi(h,Subduing:)] [u(%q0/fun_combatstat,%0,subduing)]%R[ansi(hx,<)] %R[ansi(hx,<)] [ansi(h,Current Action:)] [u(%q0/fun_combatstat,%0,action)] [switch([u(%q0/fun_combatstat,%0,actoptions)],,,\(Options: [u(%q0/fun_combatstat,%0,actoptions)]\))] %R[ansi(hx,<)] [ansi(h,Target:)] [u(%q0/fun_combatstat,%0,target)] %R[ansi(hx,<)] %R[ansi(hx,<)] [ansi(h,Pose/Action Status:)] [switch(u(fun_acted_display,%0,%q0),+,Posed and Acted,p,Posed,a,Acted,Slacking!)] %R%R[ansi(hx,<)] [ansi(h,Damage:)] [u(fun_dmg_meter,u(%q0/fun_damagemod,%0))] \(Modifier: [u(%q0/fun_damagemod,%0)]\)%R[ansi(hx,<)] [ansi(h,Is KO'd?)] [switch(u(%q0/fun_combatstat,%0,ko),1,yes,no)] %R[ansi(hx,<)][line()])

&CMD-+COMBAT-HERO FS3Combat Action Commands=$+combat/hero:@pemit %#=[setq(0,u(fun_combat_num,%N))][ansi(h,<COMBAT>)] [switch(0,t(%q0),ansi(hr,You are not in combat.),gt(xget(%#,luck_points),0),ansi(hr,You do not have any luck points..),u(%q0/fun_combatstat,%N,ko),ansi(hr,You aren't KO'd yet.  Save your points.),You spend a luck point to soldier on.[set(%#,luck_points:[sub(xget(%#,luck_points),1)])][u(%q0/fun_mod_combatstat,%N,ko,0)][u(%q0/fun_combat_msg,%N spends a luck point to keep fighting!)])]

&CMD-+COMBAT-UNKO FS3Combat Action Commands=$+combat/unko *:@pemit %#=[setq(0,u(fun_combat_num,%0))][ansi(h,<COMBAT>)] [switch(0,or(strmatch(xget(%q0,organizer),%#),isstaff(%#)),ansi(hr,This command is only for the organizer or staff.),t(%q0),ansi(hr,%0 is not in combat.),u(%q0/fun_combatstat,%0,ko),ansi(hr,%0 is not KO'd.),[u(%q0/fun_combat_msg,[prettify(%0)] is not out of the fight yet! \(%N\))][u(%q0/fun_mod_combatstat,%0,ko,0)]You un-KO %0.)]

&CMD-+COMBAT-MSG FS3Combat Action Commands=$+combat/msg *:@switch [setq(0,u(fun_combat_num,%N))]0=t(%q0),@pemit %#=[ansi(h,<COMBAT>)] You are not in combat.),think u(%q0/fun_combat_msg,[ansi(hc,Message from %N:)] %0)

&CMD-+COMBAT-SKILLS FS3Combat Action Commands=$+combat/skills:@pemit %#=[setq(0,u(fun_combat_num,%N))][switch(0,t(%q0),[ansi(h,<COMBAT>)] You are not in combat.,or(strmatch(xget(%q0,organizer),%#),isstaff(%#)),[ansi(h,<COMBAT>)] [ansi(hr,This command is only for the organizer or staff.)],[ansi(hx,<)][line()]%R[ansi(hx,<)] [ansi(h,Name[space(15)]Skill[space(2)]Mod%B%BSuppr%B%BDmg)][iter(u(%q0/fun_combatants),%R[ansi(hx,<)] [ljust(prettify(lcstr(##)),20)] [ljust(u(%q0/fun_get_skill,##,u(%q0/fun_weaponstat,##,atkskill)),5)] [ljust(u(%q0/fun_combatstat,##,mod),5)] [ljust(u(%q0/fun_combatstat,##,suppress),5)] [ljust(damagemod(##),5)])]%R[ansi(hx,<)][line()])]

&CMD-+COMBAT-GEAR FS3Combat Action Commands=$+combat/gear:@pemit %#=[setq(0,u(fun_combat_num,%N))][switch(0,t(%q0),[ansi(h,<COMBAT>)] You are not in combat.,or(strmatch(xget(%q0,organizer),%#),isstaff(%#)),[ansi(h,<COMBAT>)] [ansi(hr,This command is only for the organizer or staff.)],[ansi(hx,<)][line()]%R[ansi(hx,<)] [ansi(h,Name[space(20)]Weapon[space(10)]Armor)][iter(u(%q0/fun_combatants),%R[ansi(hx,<)] [ljust(prettify(lcstr(##)),23)] [ljust(prettify(u(%q0/fun_combatstat,##,weapon)),15)] [prettify(u(%q0/fun_combatstat,##,armor))])]%R[ansi(hx,<)][line()])]

&CMD-+COMBAT-SLACKERS FS3Combat Action Commands=$+combat/slackers:@pemit %#=[setq(0,u(fun_combat_num,%N))][ansi(hx,<)][line()]%R[ansi(hx,<)] [ansi(h,Haven't Posed)][iter(u(%q0/fun_actors),[setq(1,u(fun_acted_display,##,%q0))][switch(%q1,+,,p,,%R[ansi(hx,<)] ##)],)]%R[ansi(hx,<)] %R[ansi(hx,<)] [ansi(h,Haven't Chosen Actions)][iter(u(%q0/fun_actors),[setq(1,u(fun_acted_display,##,%q0))][switch(%q1,+,,a,,%R[ansi(hx,<)] ## [switch(u(%q0/fun_is_npcmaster,##),1,\(NPC Master\),\(Last action: [u(%q0/fun_combatstat,##,action)]\))])],)]%R[ansi(hx,<)][line()]

&CMD-+COMBAT-LOG FS3Combat Action Commands=$+combat/log*:think [setq(0,u(fun_combat_num,%N))][setq(1,switch(%0,,1,trim(%0)))][setq(2,sort(lattr(%q0/log`**)))];@dolist line1 [extract(%q2,add(1,mul(sub(%q1,1),10)),10)] line2=@pemit %#=[switch(##,line1,[line()]%R,line2,%R[ansi(h,Page %q1 of [add(1,div(words(%q2),10))])]%R[line()],[convsecs(after(##,`))]%R[u(%q0/##)])

&CMD-+COMBAT-CLEARLOG FS3Combat Action Commands=$+combat/clearlog:@pemit %#=[ansi(h,<COMBAT>)] [setq(0,u(fun_combat_num,%N))][switch(0,isstaff(%#),ansi(hr,This command is for staff only.),t(%q0),ansi(hr,You are not in combat.),ansi(hg,You clear the combat log.)[wipe(%q0/log`**)])]

&CMD-+COMBAT-HITLOCS FS3Combat Action Commands=$+combat/hitlocs *:@pemit %#=[ansi(h,<COMBAT>)] [setq(0,u(fun_combat_num,%N))][switch(0,t(%q0),You are not in combat.,u(%q0/fun_is_combatant,%0),ansi(hr,%0 is not a valid combatant.),[setq(1,switch(u(%q0/fun_is_in_vehicle,%0),1,u(%q0/fun_combatstat,%0,vehicle),%0))]Possible hit locations for [prettify(%0)][switch(%q1,%0,,%B\(%q1\))]: [ansi(g,u(%q0/fun_valid_hitlocs,%q1))])]

@@ --------------------------
@@ FUN_DISPLAY_STATUS
@@ Shows the combat status line for someone.
@@ %0 = name
@@ %1 = combat #
@@ --------------------------

&FUN_DISPLAY_STATUS FS3Combat Action Commands=localize(%R[ansi(hx,<)] [padstr(prettify(lcstr(%0)),15)][setq(1,u(%1/fun_combatstat,%0,type))][padstr([switch(%q1,soldier,[u(%1/fun_combatstat,%0,weapon)][switch(u(%1/fun_weaponstat,%0,ammo),>0,%B\([u(%1/fun_combatstat,%0,ammo)]\))],[u(%1/fun_combatstat,%0,vehicle)]%B\([switch(%q1,pilot,plt,pas)]\))],19)]%B[switch(u(%1/fun_combatstat,%0,ko),1,[ansi(h,*KO*%B)],u(fun_dmg_meter,u(%1/fun_damagemod,%0)))]%B%B%B[switch(u(%1/fun_combatstat,%0,subduedby),,ucstr(mid(u(%1/fun_combatstat,%0,stance),0,3)),SUB)]/[padstr(u(%1/fun_combatstat,%0,action),10)] [padstr(prettify(lcstr(u(%1/fun_combatstat,%0,target))),17)])

@@ --------------------------
@@ FUN_DMG_METER
@@ %0 = damage modifier
@@ Displays a damage meter that fills up as you become more hurt.
@@ --------------------------

&FUN_DMG_METER FS3Combat Action Commands=switch(%0,>80,ansi(hR,XXXXX),>60,ansi(hr,XXXX.),>40,ansi(hr,XXX..),>20,ansi(hy,XX...),>0,ansi(hg,X....),.....)

@@ --------------------------
@@ FUN_IS_IN_COMBAT
@@ Returns 1 if the person is in combat.
@@ %0 = name
@@ --------------------------

&FUN_IS_IN_COMBAT FS3Combat Action Commands=t(u(FUN_COMBAT_NUM,%0))

@@ --------------------------
@@ FUN_IS_VALID_COMBAT
@@ Returns 1 if there is a combat by that name.
@@ %0 = combat #
@@ --------------------------

&FUN_IS_VALID_COMBAT FS3Combat Action Commands=match(children(#FS3COMBAT_INSTANCE),%0)

@@ --------------------------
@@ FUN_COMBAT_NUM
@@ Returns the combat # of the person, if they're in combat.  Otherwise blank.
@@ %0 = name
@@ --------------------------

&FUN_COMBAT_NUM  FS3Combat Action Commands=switch(t(pmatch(%0)),1,xget(pmatch(%0),combat),squish(iter(children(#FS3COMBAT_INSTANCE),switch(u(##/fun_is_participant,%0),1,##))))

@@ --------------------------
@@ FUN_VEHICLE_COMBAT_NUM
@@ Returns the combat # of a vehicle, if it's being used in combat.
@@ %0 = name
@@ --------------------------

&FUN_VEHICLE_COMBAT_NUM  FS3Combat Action Commands=iter(children(#FS3COMBAT_INSTANCE),switch(hasattr(##,vehicle_[unprettify(%0)]),1,##),,)

@@ --------------------------
@@ FUN_ACTED_DISPLAY 
@@ Shows whether someone has acted(a), posed(p) or both acted/posed (+) at a glance.
@@ %0 = name
@@ %1 = combat #
@@ --------------------------

&FUN_ACTED_DISPLAY FS3Combat Action Commands=switch(1,and(match(xget(%1,posed),%0),match(xget(%1,acted),%0)),+,t(match(xget(%1,posed),%0)),p,t(match(xget(%1,acted),%0)),a,-)


@@ ==================================================================================================
@@ ---------------   Combat Start/Stop/Join/Leave -----------------
@@ ==================================================================================================



&CMD-+COMBAT-START FS3Combat Action Commands=$+combat/start *:@pemit %#=[ansi(h,<COMBAT>)] [switch(0,not(u(FUN_IS_IN_COMBAT,%#)),ansi(hr,You are already in combat.),match(mock real,%0),ansi(hr,Combat type must be mock or real.),You start a combat.  Your combat number is [setq(0,create(Combat Instance))]%q0.[setq(1,parent(%q0,#FS3COMBAT_INSTANCE))][set(%q0,wizard)][set(%q0,organizer:%#)][set(%q0,turn_in_progress:0)][set(%q0,turn:0)][set(%q0,real:[switch(%0,real,1,0)])])];@switch t(%q0)=1,@fo %#=+combat/join %q0/observer

&CMD-+COMBAT-SPAR FS3Combat Action Commands=$+combat/spar *:@pemit %#=[ansi(h,<COMBAT>)] [switch(0,not(u(FUN_IS_IN_COMBAT,%#)),ansi(hr,You are already in combat.),not(u(FUN_IS_IN_COMBAT,%0)),ansi(hr,%0 is already in combat.),You start a sparring match with %0.  Your combat number is [setq(0,create(Combat Instance))]%q0.[setq(1,parent(%q0,#FS3COMBAT_INSTANCE))][set(%q0,organizer:%#)][set(%q0,turn_in_progress:0)][set(%q0,turn:0)][set(%q0,real:[switch(%0,real,1,0)])])];@switch t(%q0)=1,{@fo %#=+combat/join %q0/soldier;@fo %#=+combat/join %0=%q0/soldier;@fo %#=+combat/weapon Sparring;@fo %#=+combat/weapon %0=Sparring;@fo %#=+combat/attack %0;@fo %#=+combat/attack %0=%N;@fo %#=+combat/team %0=2;@fo %#=+combat/newturn}

&CMD-+COMBAT-STOP FS3Combat Action Commands=$+combat/stop *:@switch 0=u(FUN_IS_VALID_COMBAT,%0),@pemit %#=[ansi(h,<COMBAT>)] [ansi(hr,That is not a valid combat number.)],or(isstaff(%#),match(xget(%0,organizer),%#)),@pemit %#=[ansi(h,<COMBAT>)] [ansi(hr,Only staff or the organizer can stop a combat.)],{@pemit %#=[ansi(h,<COMBAT>)] You stop combat %0.[u(%0/fun_combat_msg,%N has stopped the combat.)][setq(0,u(%0/fun_participants))];@dolist %q0=think u(FUN_DO_LEAVE,##,%0);@wait mul(words(%q0),2)={@nuke %0;@nuke %0}}

&CMD-+COMBAT-JOIN FS3Combat Action Commands=$+combat/join *:@pemit %#=switch(%0,*=*,,[ansi(h,<COMBAT>)] [u(FUN_DO_JOIN,%N,%0)])

&CMD-+COMBAT-JOIN-NAME FS3Combat Action Commands=$+combat/join *=*:@pemit %#=switch(words(%0),>2,[ansi(h,<COMBAT>)] Pretty sure you meant to put commas between those names.  If you really meant a multi-word single NPC just use underscores between the words.  Like Joe_Bob_Briggs.,[iter(%0,[switch(#@,>1,%R)][ansi(h,<COMBAT>)] [u(FUN_DO_JOIN,##,%1)],\,)]

&CMD-+COMBAT-LEAVE FS3Combat Action Commands=$+combat/leave:@pemit %#=[setq(0,u(fun_combat_num,%N))][ansi(h,<COMBAT>)] [switch(0,t(%q0),ansi(hr,You are not in combat.),[u(%q0/fun_combat_msg,%N has left the combat.)][u(fun_do_leave,%N,%q0)])]

&CMD-+COMBAT-FORCELEAVE FS3Combat Action Commands=$+combat/leave *:@pemit %#=[setq(0,u(fun_combat_num,%0))][ansi(h,<COMBAT>)] [switch(0,t(%q0),ansi(hr,%0 is not in combat.),[u(%q0/fun_combat_msg,[prettify(%0)] has left the combat.[u(fun_add_id,%0)])][u(fun_do_leave,%0,%q0)])]

&CMD-+COMBAT-NEWTURN FS3Combat Action Commands=$+combat/newturn:think [setq(0,u(fun_combat_num,%N))][setq(1,u(%q0/FUN_INITIATIVE))];@switch 0=t(%q0),@pemit %#=[ansi(h,<COMBAT>)] [ansi(hr,You are not in combat.)],not(xget(%q0,turn_in_progress)),@pemit %#=[ansi(h,<COMBAT>)] [ansi(hr,A turn is already in progress.)],{think set(%q0,turn_in_progress:1);@switch u(%q0/fun_turn_num)=0,{@fo %#=+combat/retarget;think u(%q0/fun_combat_msg,%N has started the combat!  Pose and pick your first action.)[set(%q0,turn:1)][set(%q0,turn_in_progress:0)]},{@pemit %#=[ansi(h,<COMBAT>)] Triggering new turn.;@dolist %q1=@wait [mul(#@,xget(#FS3COMBAT_PREFS,combat_delay))]=@tr %q0/TR_DO_ACTION=##;@wait [add(mul(words(%q1),xget(#FS3COMBAT_PREFS,combat_delay)),5,xget(#FS3COMBAT_PREFS,combat_delay))]=think [u(%q0/fun_new_turn)]}

@@ --------------------------
@@ FUN_ADD_ID
@@ Adds an identifier after a command if it's done on a NPC.
@@ %0=target of the command.
@@ --------------------------

&FUN_ADD_ID FS3Combat Action Commands=switch(%0,%N,,%B\(%N\))

@@ --------------------------
@@ FUN_DO_JOIN
@@ Handles joining someone (PC or NPC) to combat.
@@ %0 = name
@@ %1 = combat#/type/vehicle  (split into %q0=type, %q1=vehicle, %q2=combat #)
@@ 
@@ %q3 = formatted name, taking into account pmatch issues.
@@ %q4 = weapon name
@@ %q5 = armor name
@@ 
@@ NOTE! Uses %qv for temporary vehicle results register and %qn for temp npc register
@@ Returns message to display to enactor.
@@ --------------------------

&FUN_DO_JOIN FS3Combat Action Commands=localize([setq(0,extract(%1,2,1,/))][setq(1,extract(%1,3,1,/))][setq(2,extract(%1,1,1,/))][setq(3,switch(t(pmatch(%0)),1,name(pmatch(%0)),%0))][switch(0,u(FUN_IS_VALID_COMBAT,%q2),ansi(hr,That is not a valid combat number.),not(u(FUN_IS_IN_COMBAT,%0)),ansi(hr,%0 is already in combat.),or(match([v(types)],%q0),u(fun_is_custom_type,%q0)),ansi(hr,That is not a valid type.  Pick one of: [v(types)] [u(fun_custom_types)].),[setq(4,u(fun_default_weapon,%q0,%q1))][setq(5,)][switch(1,u(fun_is_custom_type,%q0),[setq(4,u(fun_customtype_stat,%q0,weapon))][setq(5,u(fun_customtype_stat,%q0,armor))][setq(1,u(fun_customtype_stat,%q0,vehicle))][setq(0,u(fun_customtype_stat,%q0,type))])][setq(v,u(fun_join_vehicle_stuff,%q0,%q1,%q2))][eq(%qv,1)],ansi(hr,after(%qv,|)),[setq(n,u(fun_join_npc_stuff,%0))][eq(%qn,1)],ansi(hr,after(%qn,|)),[switch(%N,%0,You join combat %q2.,You make %q3 join combat %q2.)]%R< Weapon set to: %q4[u(%q2/fun_init_combatstat,%q3,%q0,%q1,%q4)][switch(1,t(%q5),[u(%q2/fun_init_combatstat,%q3,%q0,%q1,%q4)][u(%q2/fun_mod_combatstat,%q3,armor,%q5)]%R< Armor set to: %q5)][set(pmatch(%0),combat:%q2)][u(%q2/fun_combat_msg,[prettify(%q3)] has joined the combat as a %q0[switch(t(%q1),1,%Bin [prettify(%q1)][append(%q2,vehicle_[unprettify(%q1)],unprettify(%q3))])][switch(%q0,observer,,npcmaster,,%Bon team [u(%q2/fun_combatstat,%q3,team)])].[u(fun_add_id,%q3)])])


&FUN_CUSTOM_TYPES FS3Combat Action Commands=iter(lattr(#FS3COMBAT_PREFS/type_*),after(##,_))
&FUN_IS_CUSTOM_TYPE FS3Combat Action Commands=hasattr(#FS3COMBAT_PREFS/type_[unprettify(%0)])
&FUN_CUSTOMTYPE_STAT FS3Combat Action Commands=extract(xget(#FS3COMBAT_PREFS,type_[unprettify(%0)]),match(v(customtype_stats),%1),1,|)
&CUSTOMTYPE_STATS FS3Combat Action Commands=type weapon armor vehicle

@@ --------------------------
@@ FUN_JOIN_VEHICLE_STUFF
@@ Figures out all the vehicle stuff when joining combat.  Checks to make sure the vehicle names are valid and such.  Creates a random vehicle
@@ if needed.  
@@ %0 = type
@@ %1 = vehicle
@@ %2 = combat #
@@
@@ Returns either 1 or 0|error
@@ NOTE!!  Overrides %q1 (vehicle) and %q4 (weapon) if vehicle type was specified and a random vehicle created.  DO NOT LOCALIZE
@@         Do not use other registers from FUN_DO_JOIN!
@@ %qz = throwaway reg for vehicle combat num
@@ --------------------------

&FUN_JOIN_VEHICLE_STUFF FS3Combat Action Commands=switch(1,not(match(pilot passenger,%0)),switch(%1,,1,0|You cannot specify a vehicle if you are not a pilot or passenger.),and(match(%0,pilot),t(u(%2/fun_find_pilot,%1))),0|There is already a pilot for that vehicle.,[setq(z,u(fun_vehicle_combat_num,%1))][not(or(match(%qz,%2),not(words(%qz))))],0|That vehicle is already in another combat.,isvehicle(%1),1,not(%1),0|You must specify a vehicle if you are a pilot or passenger.,not(match(vehicletypes(),unprettify(%1))),0|%1 is not a valid vehicle name or type,t(match(vehicletypes(),unprettify(%1))),1[setq(1,u(#FS3COMBAT_CMD_VEH/fun_random_vehicle,%1))][setq(4,u(fun_default_weapon,%q0,%q1))],0|Unknown error.)

@@ --------------------------
@@ FUN_JOIN_NPC_STUFF
@@ Figures out all the npc stuff when joining combat.  Checks to make sure the npc names are valid and such.  
@@ Creates a random npc if needed.  
@@ %0 = name
@@
@@ Returns either 1 or 0|error
@@ --------------------------

&FUN_JOIN_NPC_STUFF FS3Combat Action Commands=switch(1,isplayer(%0),1,isnpc(%0),1,u(#FS3COMBAT_CMD_NPC/FUN_CREATE_NPC,%0,u(fun_rand_npc_skill),1))

&FUN_RAND_NPC_SKILL FS3Combat Action Commands=first(shuffle(2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 4 4 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 6 6 6 7 8))

@@ --------------------------
@@ FUN_DEFAULT_WEAPON
@@ %0 = type
@@ %1 = vehicle
@@ --------------------------

&FUN_DEFAULT_WEAPON FS3Combat Action Commands=switch(%0,soldier,xget(#FS3COMBAT_PREFS,default_rifle),pilot,first(vehtypestat(vehiclestat(%1,type),weapons)),)

@@ --------------------------
@@ FUN_DO_LEAVE
@@ %0 = name
@@ %1 = combat #
@@
@@ %q0 = vehicle
@@ --------------------------

&FUN_DO_LEAVE FS3Combat Action Commands=localize([u(%1/fun_remove,switch(t(pmatch(%0)),1,name(pmatch(%0)),%0))][switch(%0,%N,You leave the combat.,You make %0 leave the combat.)])

@@ ==================================================================================================
@@ ---------------   Teams and Targets -----------------
@@ ==================================================================================================

@@ %q0 = combat #
@@ %q1 = name
@@ %q2 = team #

&CMD-+COMBAT-TEAM FS3Combat Action Commands=$+combat/team *:@pemit %#=[ansi(h,<COMBAT>)] [setq(0,u(fun_combat_num,%N))][switch(%0,*=*,[setq(1,before(%0,=))][setq(2,after(%0,=))],[setq(1,%N)][setq(2,%0)])][switch(0,t(%q0),ansi(hr,You are not in combat.),u(fun_is_valid_team_num,%q2),ansi(hr,Team number must be between 1 and 9),u(%q0/fun_is_participant,%q1),ansi(hr,%q1 is not in your combat.),You set %q1's team.[u(%q0/fun_mod_combatstat,%q1,team,%q2)][u(%q0/fun_org_msg,%q1's team set to %q2. \(%N\))]

&CMD-+COMBAT-TEAM-TARGET FS3Combat Action Commands=$+combat/teamtarget *=*:@pemit %#=[ansi(h,<COMBAT>)] [setq(0,u(fun_combat_num,%N))][switch(0,t(%q0),ansi(hr,You are not in combat.),[not(strmatch(iter(%0,u(fun_is_valid_team_num,##),,),*0*))],ansi(hr,You may only specify team numbers and they must be from 1-9.),[not(strmatch(iter(%1,u(fun_is_valid_team_num,##),,),*0*))],ansi(hr,You may only specify team numbers and they must be from 1-9.),You set teams %0 to target teams %1.%R< Note that this does not affect team %1.  You must target them separately.[iter(%0,u(%q0/fun_set_team_target,##,%1))])

&CMD-+COMBAT-RETARGET-LIST FS3Combat Action Commands=$+combat/retarget *:think [setq(0,u(fun_combat_num,%N))];@switch 0=t(%q0),@pemit %#=[ansi(h,<COMBAT>)] [ansi(hr,You are not in combat.)];@dolist [u(%q0/fun_combatants)]=think switch(isnpc(##),1,[setq(1,grab(%0,[unprettify(##)]=*,\,))][u(%q0/fun_pick_random_action,##,after(%q1,=))])

&CMD-+COMBAT-RETARGET FS3Combat Action Commands=$+combat/retarget:think [setq(0,u(fun_combat_num,%N))];@switch 0=t(%q0),@pemit %#=[ansi(h,<COMBAT>)] [ansi(hr,You are not in combat.)];@dolist u(%q0/fun_combatants)=think switch(isnpc(##),1,[u(%q0/fun_pick_random_action,##)])

&CMD-+COMBAT-REACTION FS3Combat Action Commands=$+combat/reaction:think [setq(0,u(fun_combat_num,%N))];@switch 0=t(%q0),@pemit %#=[ansi(h,<COMBAT>)] [ansi(hr,You are not in combat.)];@dolist u(%q0/fun_combatants)=think switch(isnpc(##),1,[u(%q0/fun_pick_random_action,##,u(%q0/fun_combatstat,##,target)),)])

&CMD-+COMBAT-TARGET FS3Combat Action Commands=$+combat/target *=*:@pemit %#=[ansi(h,<COMBAT>)] [setq(0,u(fun_combat_num,%N))][switch(0,t(%q0),ansi(hr,You are not in combat.),u(%q0/fun_is_combatant,%0),ansi(hr,%0 is not a combatant.),u(%q0/fun_is_targetable,%1),ansi(hr,%1 is not a valid target.),You target [prettify(%0)] at [prettify(%1)].[u(%q0/fun_mod_combatstat,%0,target,unprettify(%1))][u(%q0/fun_org_msg,[prettify(%0)] targets [prettify(%1)].[u(fun_add_id,%0)])])]

&CMD-+COMBAT-RANDTARGET FS3Combat Action Commands=$+combat/randtarget *:@pemit %#=[setq(0,u(fun_combat_num,%N))][switch(%0,*/*,[setq(1,before(%0,/))][setq(2,after(%0,/))],[setq(1,%0)][setq(2,1)])][switch(0,t(%q0),ansi(hr,You are not in combat.),u(%q0/fun_is_combatant,%q1),ansi(hr,%0 is not a combatant.),[iter(lnum(1,%q2),u(%q0/fun_pick_random_target,%q1))])

&FUN_IS_VALID_TEAM_NUM FS3Combat Action Commands=and(isnum(%0),gt(%0,0),lt(%0,10))

&CMD-+COMBAT-SKILL FS3Combat Action Commands=$+combat/skill *=*:@fo %#=+npc/skill %0=%1

@@ ==================================================================================================
@@ ---------------   Actions -----------------
@@ ==================================================================================================

@@ --------------------------
@@ FUN_CAN_ACT
@@ Does general checks as to whether someone can act.
@@ %0 = name
@@ %1 = action
@@ SIDE EFFECT!!! sets %q0 to be the person's combat number  (also sets %qz  but we don't care)
@@ --------------------------

&FUN_CAN_ACT FS3Combat Action Commands=[setq(0,u(fun_combat_num,%0))][setq(z,u(fun_combat_num,%N))][and(not(xget(%q0,turn_in_progress)),t(%qz),t(%q0),not(u(%q0/fun_combatstat,%0,ko)),u(%q0/fun_is_combatant,%0),switch(t(u(%q0/fun_combatstat,%0,subduedby)),1,switch(%1,pass,1,escape,1,mod,1,lethal,1,luck,1,0),1))]

@@ --------------------------
@@ FUN_CANT_ACT_MSG
@@ Emits the right message if someone can't act.
@@ %0 = name
@@ --------------------------

&FUN_CANT_ACT_MSG FS3Combat Action Commands=ansi(hr,switch(0,not(xget(%q0,turn_in_progress)),Please wait until the new turn message.,t(u(fun_combat_num,%N)),You are not in combat.,t(%q0),[prettify(%0)] is not in combat.,u(%q0/fun_is_combatant,%0),[prettify(%0)] is not a combatant.,not(u(%q0/fun_combatstat,%0,ko)),[prettify(%0)] is KO'd.,not(t(u(%q0/fun_combatstat,%0,subduedby))),[prettify(%0)] is subdued and can only try to escape.,[prettify(%0)] can't act for some unknown reason.  This may be a bug.))

@@ ---------------   Pass -----------------
@@ Pass has no options or target

&CMD-+COMBAT-PASS FS3Combat Action Commands=$+combat/pass:@pemit %#=[ansi(h,<COMBAT>)] [u(FUN_ACTION_PASS,%N)]

&CMD-+COMBAT-PASS-PERSON FS3Combat Action Commands=$+combat/pass *:@pemit %#=[ansi(h,<COMBAT>)] [u(FUN_ACTION_PASS,%0)]

@@ --------------------------
@@ FUN_ACTION_PASS
@@ Registers a pass action.
@@ %0 = actor name
@@
@@ %q0 = combat num (from fun_can_act)
@@ --------------------------

&FUN_ACTION_PASS FS3Combat Action Commands=switch(0,u(fun_can_act,%0,pass),u(fun_cant_act_msg,%0),You set [switch(%N,%0,your,%0's)] action.[u(%q0/FUN_SET_ACTION,%0,pass,,)])


@@ ---------------   Reload -----------------
@@ Reload has no options or target.  You don't need to reload your gun if the ammo stat is '0'.
@@ Although it doesn't quite make sense to let them reload a full clip, we don't care and it could be used to simlulate unjamming
@@ a weapon or something.

&CMD-+COMBAT-RELOAD FS3Combat Action Commands=$+combat/reload:@pemit %#=[ansi(h,<COMBAT>)] [u(FUN_ACTION_RELOAD,%N)]

&CMD-+COMBAT-RELOAD-PERSON FS3Combat Action Commands=$+combat/reload *:@pemit %#=[ansi(h,<COMBAT>)] [u(FUN_ACTION_RELOAD,%0)]

@@ --------------------------
@@ FUN_ACTION_RELOAD
@@ Registers a reload action.
@@ %0 = actor name
@@
@@ %q0 = combat num (from fun_can_act)
@@ --------------------------

&FUN_ACTION_RELOAD FS3Combat Action Commands=switch(0,u(fun_can_act,%0,reload),u(fun_cant_act_msg,%0),u(%q0/fun_weaponstat,%0,reloadable),ansi(hr,%0's weapon can't be reloaded.),You set [switch(%N,%0,your,%0's)] action.[u(%q0/FUN_SET_ACTION,%0,reload,,)])


@@ ---------------   Escape -----------------
@@ Reload has no options.  The target is automatically the person who's subdued you.  Obviously you must first be
@@ subdued.

&CMD-+COMBAT-ESCAPE FS3Combat Action Commands=$+combat/escape:@pemit %#=[ansi(h,<COMBAT>)] [u(FUN_ACTION_ESCAPE,%N)]

&CMD-+COMBAT-ESCAPE-PERSON FS3Combat Action Commands=$+combat/escape *:@pemit %#=[ansi(h,<COMBAT>)] [u(FUN_ACTION_ESCAPE,%0)]

@@ --------------------------
@@ FUN_ACTION_ESCAPE
@@ Registers an escape action.
@@ %0 = actor name
@@
@@ %q0 = combat num (from fun_can_act)
@@ --------------------------

&FUN_ACTION_ESCAPE FS3Combat Action Commands=switch(0,u(fun_can_act,%0,escape),u(fun_cant_act_msg,%0),t(u(%q0/fun_combatstat,%0,subduedby)),ansi(hr,%0 is not subdued.),You set [switch(%N,%0,your,%0's)] action.[u(%q0/FUN_SET_ACTION,%0,escape,u(%q0/fun_combatstat,%0,subduedby),)])



@@ ---------------   Subdue -----------------
@@ Subdue has a target and no options.  You must have a melee weapon.

&CMD-+COMBAT-SUBDUE FS3Combat Action Commands=$+combat/subdue *:@pemit %#=[ansi(h,<COMBAT>)] [switch(%0,*=*,u(FUN_ACTION_SUBDUE,before(%0,=),after(%0,=)),u(FUN_ACTION_SUBDUE,%N,%0))]

@@ --------------------------
@@ FUN_ACTION_SUBDUE
@@ Registers a subdue action.
@@ %0 = actor name
@@ %1 = target name
@@
@@ %q0 = combat num (from fun_can_act)
@@ --------------------------

&FUN_ACTION_SUBDUE FS3Combat Action Commands=switch(0,u(fun_can_act,%0,subdue),u(fun_cant_act_msg,%0),switch(u(%q0/fun_combatstat,%1,subduedby),,1,unprettify(%0),1,0),ansi(hr,Someone else is already subduing %1.),strmatch(weaponstat(u(%q0/fun_combatstat,%0,weapon),wpntype),melee),ansi(hr,Only melee weapons can subdue.),u(%q0/fun_is_targetable,%1),ansi(hr,%1 is not a valid target.),You set [switch(%N,%0,your,%0's)] action.[u(%q0/FUN_SET_ACTION,%0,subdue,%1,)])

@@ ---------------   Suppress -----------------
@@ Suppress has a target and no options.  

&CMD-+COMBAT-SUPPRESS FS3Combat Action Commands=$+combat/suppress *:@pemit %#=[ansi(h,<COMBAT>)] [switch(%0,*=*,u(FUN_ACTION_SUPPRESS,before(%0,=),after(%0,=)),u(FUN_ACTION_SUPPRESS,%N,%0))]

@@ --------------------------
@@ FUN_ACTION_SUPPRESS
@@ Registers a suppress action.
@@ %0 = actor name
@@ %1 = target list (comma-sep)
@@
@@ %q0 = combat num (from fun_can_act)
@@ %q1 = check targets status
@@ %qz = tmporary ammo register
@@ --------------------------

&FUN_ACTION_SUPPRESS FS3Combat Action Commands=localize(switch(0,u(fun_can_act,%0,suppress),u(fun_cant_act_msg,%0),lte(words(%1,\,),5),ansi(hr,You cannot target more than 5 targets.),[setq(1,u(fun_check_targets,%1,%q0))][eq(%q1,1)],ansi(hr,after(%q1,|)),or(eq(words(%1,\,),1),match(u(%q0/fun_weaponstat,%0,wpntype),defensive),u(%q0/fun_weaponstat,%0,auto)),ansi(hr,You cannot suppress multiple targets without a fullauto or defensive weapon.),switch(u(%q0/fun_weaponstat,%0,wpntype),Ranged,[setq(z,u(%q0/fun_combatstat,%0,ammo))]or(eq(%qz,0),gte(%qz,words(%1,\,))),1),ansi(hr,You don't have enough bullets.),You set [switch(%N,%0,your,%0's)] action.[u(%q0/FUN_SET_ACTION,%0,suppress,%1,)]))


@@ ---------------   Aim -----------------
@@ Aim has a target and no options.  

&CMD-+COMBAT-AIM FS3Combat Action Commands=$+combat/aim *:@pemit %#=[ansi(h,<COMBAT>)] [switch(%0,*=*,u(FUN_ACTION_AIM,before(%0,=),after(%0,=)),u(FUN_ACTION_AIM,%N,%0))]

@@ --------------------------
@@ FUN_ACTION_AIM
@@ Registers an aim action.
@@ %0 = actor name
@@ %1 = target name
@@
@@ %q0 = combat num (from fun_can_act)
@@ --------------------------

&FUN_ACTION_AIM FS3Combat Action Commands=switch(0,u(fun_can_act,%0,aim),u(fun_cant_act_msg,%0),u(%q0/fun_is_targetable,%1),ansi(hr,%1 is not a valid target.),u(%q0/FUN_CAN_ATTACK,%0),ansi(hr,That weapon cannot attack.),You set [switch(%N,%0,your,%0's)] action.[u(%q0/FUN_SET_ACTION,%0,aim,%1,)])


@@ ---------------   Explode -----------------
@@ We use the options to store the folks in the two explosive zones: immediate and near
@@ immediate targets are stored in the normal 'target' list.  near targets are stored in the 'options' list.

&CMD-+COMBAT-EXPLODE FS3Combat Action Commands=$+combat/explode *:@pemit %#=[ansi(h,<COMBAT>)] [switch(%0,*=*,u(FUN_ACTION_EXPLODE,before(%0,=),before(after(%0,=),/),after(after(%0,=),/)),u(FUN_ACTION_EXPLODE,%N,before(%0,/),after(%0,/)))]

@@ --------------------------
@@ FUN_ACTION_EXPLODE
@@ Registers an explode attack action.
@@ %0 = actor name
@@ %1 = immediate target list
@@ %2 = near target list
@@
@@ %q0 = combat num (from fun_can_act)
@@ %q1 = check targets status
@@ --------------------------

&FUN_ACTION_EXPLODE FS3Combat Action Commands=switch(0,u(fun_can_act,%0,explode),u(fun_cant_act_msg,%0),match(u(%q0/fun_weaponstat,%0,wpntype),Explosive),ansi(hr,[prettify(lcstr(%0))] does not have an explosive weapon.),lte(add(words(%1,\,),words(%2,\,)),10),ansi(hr,You cannot target more than 10 targets total.),[setq(1,u(fun_check_targets,%1,%q0))][eq(%q1,1)],ansi(hr,after(%q1,|)),[setq(1,u(fun_check_targets,%2,%q0))][eq(%q1,1)],ansi(hr,after(%q1,|)),You set [switch(%N,%0,your,%0's)] action.[u(%q0/FUN_SET_ACTION,%0,explode,%1,%2)])


@@ ---------------   Fullauto -----------------
@@ Fullauto has a list of targets and no options.  Weapon must be capable of fullauto fire.

&CMD-+COMBAT-FULLAUTO FS3Combat Action Commands=$+combat/fullauto *:@pemit %#=[ansi(h,<COMBAT>)] [switch(%0,*=*,u(FUN_ACTION_FULLAUTO,before(%0,=),after(%0,=)),u(FUN_ACTION_FULLAUTO,%N,%0))]

@@ --------------------------
@@ FUN_ACTION_FULLAUTO
@@ Registers a fullauto attack action.
@@ %0 = actor name
@@ %1 = target list
@@
@@ %q0 = combat num (from fun_can_act)
@@ %q1 = check targets status
@@ --------------------------

&FUN_ACTION_FULLAUTO FS3Combat Action Commands=localize(switch(0,u(fun_can_act,%0,fullauto),u(fun_cant_act_msg,%0),u(%q0/FUN_CAN_ATTACK,%0),ansi(hr,That weapon cannot attack.),[setq(1,u(fun_check_targets,%1,%q0))][eq(%q1,1)],ansi(hr,after(%q1,|)),lte(words(%1,\,),5),ansi(hr,You cannot target more than 5 targets.),words(u(%q0/fun_combatstat,%0,weapon)),ansi(hr,You don't have a weapon!),u(%q0/fun_weaponstat,%0,auto),ansi(hr,Your weapon cannot fire fullauto.),u(%q0/fun_has_enough_ammo,%0,words(%1,\,)),ansi(hr,You don't have enough bullets for fullauto fire.),You set [switch(%N,%0,your,%0's)] action.[u(%q0/FUN_SET_ACTION,%0,fullauto,%1,)]))

@@ --------------------------
@@ FUN_CHECK_TARGETS
@@ Checks a group of targets.
@@ %0 = target list
@@ %1 = combat num
@@ --------------------------

&FUN_CHECK_TARGETS FS3Combat Action Commands=localize([setq(0,1)][setq(1,)][iter(%0,switch(u(%1/fun_is_targetable,##),0,[setq(0,0)][setq(1,%q1## is not a valid target.%B)]),\,,)][switch(%q0,1,1,0|%q1)])


@@ ---------------   Attack -----------------
@@ Attack has a target and can also have options.

&CMD-+COMBAT-ATTACK FS3Combat Action Commands=$+combat/ATTACK *:@pemit %#=[ansi(h,<COMBAT>)] [switch(%0,*=*/*,u(FUN_ACTION_ATTACK,before(%0,=),before(after(%0,=),/),after(after(%0,=),/)),*/*,u(FUN_ACTION_ATTACK,%N,before(%0,/),after(%0,/)),*=*,u(FUN_ACTION_ATTACK,before(%0,=),after(%0,=),),u(FUN_ACTION_ATTACK,%N,%0,))]

@@ --------------------------
@@ FUN_ACTION_ATTACK
@@ Registers an attack action.
@@ %0 = actor name
@@ %1 = target name
@@ %2 = options list (may be blank)
@@
@@ %q0 = combat num (from fun_can_act)
@@ %q1 = check option status
@@ --------------------------

&FUN_ACTION_ATTACK FS3Combat Action Commands=localize(switch(0,u(fun_can_act,%0,attack),u(fun_cant_act_msg,%0),u(%q0/fun_is_targetable,%1),ansi(hr,%1 is not a valid target.),u(%q0/FUN_CAN_ATTACK,%0),ansi(hr,That weapon cannot attack.),[setq(1,u(fun_check_options,%0,%1,%2,%q0))][eq(%q1,1)],ansi(hr,after(%q1,|)),words(u(%q0/fun_combatstat,%0,weapon)),ansi(hr,You don't have a weapon!),not(u(%q0/fun_out_of_ammo,%0)),ansi(hr,%0 is out of ammo.),not(match(u(%q0/fun_weaponstat,%0,wpntype),explosive)),ansi(hr,Use +combat/explode for explosive weapons.),You set [switch(%N,%0,your,%0's)] action.[u(%q0/FUN_SET_ACTION,%0,attack,%1,%2)]))

@@ --------------------------
@@ FUN_CHECK_OPTIONS
@@ Checks attack options.  Returns 1 or 0|error
@@ %0 = actor name
@@ %1 = target name
@@ %2 = options list (may be blank)
@@ %3 = combat num
@@
@@ %q0 - fun for current option
@@ %q1 - return status
@@ %q2 - current option check status
@@ --------------------------
&FUN_CHECK_OPTIONS FS3Combat Action Commands=localize([setq(1,1)][iter(%2,[setq(0,fun_check_opt_[before(##,=)])][switch(hasattr(me,%q0),0,setq(1,0|## is not a valid attack option.),[setq(2,u(%q0,%0,%1,after(##,=),%3))][switch(%q2,0*,setq(1,%q2))])],\,,)]%q1)

@@ %0 = actor name
@@ %1 = target name
@@ %2 = option
@@ %3 = combat num
&FUN_CHECK_OPT_RANGE FS3Combat Action Commands=switch(0,isnum(%2),0|Range must be a number.,gt(%2,0),0|Range must be greater than 0.,lte(%2,u(%3/fun_weaponstat,%0,range)),0|You cannot exceed your weapon's max range.,1)

&FUN_CHECK_OPT_CALLED FS3Combat Action Commands=[setq(h,u(%3/fun_valid_hitlocs,switch(u(%3/fun_is_in_vehicle,%1),1,u(%3/fun_combatstat,%1,vehicle),%1)))][switch(0,t(%2),0|You must specify a hit location.,match(%qh,unprettify(%2)),0|That is not a valid hit location for that target.  Try one of these: %qh,1)]

&FUN_CHECK_OPT_BURST FS3Combat Action Commands=switch(0,u(%3/fun_weaponstat,%0,auto),0|Your weapon is not capable of burst fire.,gte(u(%3/fun_combatstat,%0,ammo),2),0|You must have at least 2 bullets in the clip to fire a burst.,1)

@@ ---------------   Treat -----------------
@@ Treat has a target

&CMD-+COMBAT-TREAT FS3Combat Action Commands=$+combat/treat *:@pemit %#=[ansi(h,<COMBAT>)] [switch(%0,*=*,u(FUN_ACTION_TREAT,before(%0,=),after(%0,=),%1),u(FUN_ACTION_TREAT,%N,%0))]


@@ --------------------------
@@ FUN_ACTION_TREAT
@@ Registers a treat action.
@@ %0 = actor name
@@ %1 = target name
@@
@@ %q0 = combat num (from fun_can_act)
@@ %qz = temp for treat status
@@ --------------------------

&FUN_ACTION_TREAT FS3Combat Action Commands=localize(switch(0,u(fun_can_act,%0,treat),u(fun_cant_act_msg,%0),or(u(%q0/fun_is_combatant,%1),match(u(fun_vehicle_combat_num,%1),%q0)),ansi(hr,%1 is not a valid target.),[setq(z,u(#FS3COMBAT_CMD_DMG/fun_can_treat,%1,%0))]eq(%qz,1),ansi(hr,after(%qz,|)),You set [switch(%N,%0,your,%0's)] action.[u(%q0/FUN_SET_ACTION,%0,treat,%1,%2)]))


@@ ---------------   Rally -----------------
@@ Rally has a target and no options.  

&CMD-+COMBAT-RALLY FS3Combat Action Commands=$+combat/rally *:@pemit %#=[ansi(h,<COMBAT>)] [switch(%0,*=*,u(FUN_ACTION_RALLY,before(%0,=),after(%0,=)),u(FUN_ACTION_RALLY,%N,%0,%1))]


@@ --------------------------
@@ FUN_ACTION_RALLY
@@ Registers a rally action.
@@ %0 = actor name
@@ %1 = target name
@@
@@ %q0 = combat num (from fun_can_act)
@@ --------------------------

&FUN_ACTION_RALLY FS3Combat Action Commands=switch(0,u(fun_can_act,%0,rally),u(fun_cant_act_msg,%0),u(%q0/fun_is_combatant,%1),ansi(hr,%1 is not a valid target.),isplayer(%1),ansi(hr,This command may only be used on PCs.),u(%q0/fun_combatstat,%1,ko),ansi(hr,%1 is not KO'd.),You set [switch(%N,%0,your,%0's)] action.[u(%q0/FUN_SET_ACTION,%0,rally,%1,)])



@@ ==================================================================================================
@@ ---------------   Prep -----------------
@@ ==================================================================================================



@@ ---------------   Type -----------------
@@ Changing types has to reinitialize their combat stats.


&CMD-+COMBAT-TYPE FS3Combat Action Commands=$+combat/type *:@pemit %#=[ansi(h,<COMBAT>)] [switch(%0,*=*,u(FUN_PREP_TYPE,before(%0,=),before(after(%0,=),/),after(after(%0,=),/)),u(FUN_PREP_TYPE,%N,before(%0,/),after(%0,/)))]


@@ --------------------------
@@ FUN_PREP_TYPE
@@ Changes type.
@@ %0 = name
@@ %1 = type
@@ %2 = vehicle
@@ Uses %qv for temp vehicle stuff 1 or 0|error
@@      %q1 is set for vehicle type
@@      %q4 for weapon
@@ --------------------------

&FUN_PREP_TYPE FS3Combat Action Commands=[switch(0,u(fun_can_act,%0,type),[u(fun_cant_act_msg,%0)][switch(u(%q0/fun_combatstat,%0,type),observer,ansi(hr,%BObservers must leave the combat and rejoin to change their type.))],match(v(types),%1),ansi(hr,That is not a valid type.),[setq(1,%2)][setq(4,u(fun_default_weapon,%1,%q1))][setq(v,u(FUN_JOIN_VEHICLE_STUFF,%1,%2,%q0))][eq(%qv,1)],after(%qv,|),[switch(%N,%0,You change your type.,You change %0's type.)]%R< Weapon set to: %q4[u(%q0/fun_init_combatstat,%0,%1,%q1,%q4)][u(%q0/fun_combat_msg,[prettify(%0)] has changed type to %1[switch(t(%2),1,%Bin [prettify(%q1)])].[u(fun_add_id,%0)])])]


@@ ---------------   Weapon -----------------
@@ Warn them if they pick an invalid vehicle weapon but don't restrict it.  This allows for special cases like a rifleman poking his
@@ gun out the side of an APC or a plane outfitted with unusual armament.


&CMD-+COMBAT-WEAPON FS3Combat Action Commands=$+combat/weapon *:@pemit %#=[ansi(h,<COMBAT>)] [switch(%0,*=*,u(FUN_PREP_WEAPON,before(%0,=),after(%0,=)),u(FUN_PREP_WEAPON,%N,%0))]


@@ --------------------------
@@ FUN_PREP_WEAPON
@@ %0 = name
@@ %1 = weapon
@@ --------------------------

&FUN_PREP_WEAPON FS3Combat Action Commands=[switch(0,u(fun_can_act,%0,weapon),u(fun_cant_act_msg,%0),match(weapons(),unprettify(%1)),ansi(hr,That is not a valid weapon.),[switch(%N,%0,You change your weapon.,You change %0's weapon.)] Action and target have been reset.  [switch(1,and(u(%q0/FUN_IS_IN_VEHICLE,%0),not(match(u(%q0/fun_vehiclestat,%0,weapons),unprettify(%1)))),ansi(hm,%R< %1 is not a normal weapon for %0's vehicle.  Please make sure it makes sense ICly.))][u(%q0/fun_mod_combatstat,%0,weapon,unprettify(%1))][u(%q0/fun_mod_combatstat,%0,ammo,u(%q0/fun_weaponstat,%0,ammo))][u(%q0/fun_mod_combatstat,%0,target,)][u(%q0/fun_mod_combatstat,%0,action,pass)][u(%q0/fun_combat_msg,[prettify(%0)] has changed weapons to %1.[u(fun_add_id,%0)])])]


@@ ---------------   Stance -----------------

&CMD-+COMBAT-STANCE FS3Combat Action Commands=$+combat/stance *:@pemit %#=[ansi(h,<COMBAT>)] [switch(%0,*=*,u(FUN_PREP_STANCE,before(%0,=),after(%0,=)),u(FUN_PREP_STANCE,%N,%0))]

@@ --------------------------
@@ FUN_PREP_STANCE
@@ %0 = name
@@ %1 = stance
@@ --------------------------

&FUN_PREP_STANCE FS3Combat Action Commands=[switch(0,u(fun_can_act,%0,stance),u(fun_cant_act_msg,%0),match(v(stances),%1),ansi(hr,That is not a valid stance.  Try one of [v(stances)]),match(soldier pilot,u(%q0/fun_combatstat,%0,type)),ansi(hr,Only soldiers and pilots may change stances.),[switch(%N,%0,You change your stance.,You change %0's stance.)][u(%q0/fun_mod_combatstat,%0,stance,lcstr(%1))][u(%q0/fun_combat_msg,[prettify(%0)] has changed stance to %1.[u(fun_add_id,%0)])])]


@@ ---------------   Armor -----------------
@@ Armor applies to the person.  Vehicle armor is factored separately.

&CMD-+COMBAT-ARMOR FS3Combat Action Commands=$+combat/armor *:@pemit %#=[ansi(h,<COMBAT>)] [switch(%0,*=*,u(FUN_PREP_ARMOR,before(%0,=),after(%0,=)),u(FUN_PREP_ARMOR,%N,%0))]

@@ --------------------------
@@ FUN_PREP_ARMOR
@@ %0 = name
@@ %1 = armor
@@ --------------------------

&FUN_PREP_ARMOR FS3Combat Action Commands=[switch(0,u(fun_can_act,%0,armor),u(fun_cant_act_msg,%0),match([armor()] none,unprettify(%1)),ansi(hr,That is not a valid armor type.),not(match(armorstat(%1,class),Vehicle)),ansi(hr,You can't wear vehicle armor.  It's factored in automatically.),[switch(%N,%0,You change your armor.,You change %0's armor.)][u(%q0/fun_mod_combatstat,%0,armor,[switch(%1,none,,unprettify(%1))])][u(%q0/fun_combat_msg,[prettify(%0)] has changed armor to %1.[u(fun_add_id,%0)])])]

@@ ---------------   Mod -----------------
@@ Sets special modifiers.

&CMD-+COMBAT-MOD FS3Combat Action Commands=$+combat/mod *:@pemit %#=[ansi(h,<COMBAT>)] [switch(%0,*=*,u(FUN_PREP_MOD,before(%0,=),after(%0,=)),u(FUN_PREP_MOD,%N,%0))]


@@ --------------------------
@@ FUN_PREP_MOD
@@ Message is sent only to organizer so GMs can apply sneaky mods.
@@ %0 = name
@@ %1 = mod
@@ --------------------------

&FUN_PREP_MOD FS3Combat Action Commands=[switch(0,u(fun_can_act,%0,mod),u(fun_cant_act_msg,%0),isnum(%1),ansi(hr,Modifiers must be a number.),You apply a modifier to [switch(%N,%0,yourself,prettify(lcstr(%0)))].[u(%q0/fun_mod_combatstat,%0,mod,trim(%1))][u(%q0/fun_org_msg,%N has applied a %1 modifier to %0.)])]

@@ ---------------   Lethal -----------------
@@ Sets a lethality modifier.

&CMD-+COMBAT-LETHAL FS3Combat Action Commands=$+combat/lethal *:@pemit %#=[ansi(h,<COMBAT>)] [switch(%0,*=*,u(FUN_PREP_LETHAL,before(%0,=),after(%0,=)),u(FUN_PREP_LETHAL,%N,%0))]


@@ --------------------------
@@ FUN_PREP_LETHAL
@@ Message is sent only to organizer so GMs can apply sneaky mods.
@@ %0 = name
@@ %1 = mod
@@ --------------------------

&FUN_PREP_LETHAL FS3Combat Action Commands=[switch(0,u(fun_can_act,%0,lethal),u(fun_cant_act_msg,%0),isnum(%1),ansi(hr,Modifiers must be a number.),You apply a lethality modifier to [switch(%N,%0,yourself,prettify(lcstr(%0)))].[u(%q0/fun_mod_combatstat,%0,lethal,trim(%1))][u(%q0/fun_org_msg,%N has applied a %1 lethality modifier to %0.)])]


@@ ---------------   Luck -----------------
@@ Sets luck modifiers.

&CMD-+COMBAT-LUCK FS3Combat Action Commands=$+combat/luck *:@pemit %#=[ansi(h,<COMBAT>)] [switch(%0,*=*,ansi(hr,Only PCs may use luck.),u(FUN_PREP_LUCK,%N,%0))]

@@ --------------------------
@@ FUN_PREP_LUCK
@@ %0 = name
@@ %1 = luck
@@ --------------------------

&FUN_PREP_LUCK FS3Combat Action Commands=[switch(0,u(fun_can_act,%0,luck),u(fun_cant_act_msg,%0),match(v(LUCK_OPTIONS),%1),ansi(hr,You may only spend luck on [v(LUCK_OPTIONS)].),gt(xget(%#,luck_points),0),ansi(hr,You are out of luck points.),You will spend luck on %1 this turn. %R< [ansi(hg,NOTE:)] If you switch your luck it will cost you another luck point.[u(%q0/fun_mod_combatstat,%0,luck,unprettify(%1))][set(%#,luck_points:[sub(xget(%#,luck_points),1)])][u(%q0/fun_combat_msg,%N will spend luck on %1 this turn.)])]

&TYPES FS3Combat Action Commands=soldier pilot passenger observer npcmaster

&STANCES FS3Combat Action Commands=normal banzai evade cautious cover outofsight

&LUCK_OPTIONS FS3Combat Action Commands=attack defense initiative


@@ =============================================================@@ COMBAT PREFS

&HATTR_COMBAT FS3Combat Preferences=

@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@    *****       DATA SECTION           *****
@@    *****   CHECK BEFORE UPGRADING     *****
@@    *****   REMOVE OF MODIFY AS NEEDED *****
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


&HERO_FACTOR FS3Combat Preferences=0

&DEFAULT_RIFLE FS3Combat Preferences=Rifle

&FIRSTAID_SKILL FS3Combat Preferences=First_Aid
&JURYRIG_SKILL FS3Combat Preferences=Repair

&MEDICINE_SKILL FS3Combat Preferences=Medicine

&REPAIR_SKILL FS3Combat Preferences=Repair

&TOUGHNESS_SKILL FS3Combat Preferences=Athletic

&HOSPITALS FS3Combat Preferences=#-1

&TYPE_CENTURION FS3Combat Preferences=Soldier|LMG_Tripod|Centurion|
&TYPE_RAIDER FS3Combat Preferences=Pilot|||Raider

&COMBAT_DELAY FS3Combat Preferences=3


@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@    *****       END DATA SECTION      *****
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@wait 10=@set me=!quiet
@wait 10=@pemit/silent %#=%R%R[ansi(hg,Installation complete.)]