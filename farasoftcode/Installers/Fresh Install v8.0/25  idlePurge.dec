@@ Faraday's Version of Shofari's Idle Purger
@@ Author:  Shofari@B5MUSH (original), Linda O'Meara (modifications)
@@ Website: http://www.aresmush.com/
@@
@@ Visit the website for documentation, installation instructions, bug reports,
@@ and more.


@set me=quiet

@pemit/silent %#=[ansi(hg,Beginning Idle Purger Installation.  Please wait until you see the 'Installation Complete' message...)]%R

@pemit/silent %#=[ansi(hg,Creating Objects...)]%R

think install_create(IDLE_CMD,Idle Purger,1,0,8.0,Idle purger.)

@lock/Use Idle Purger=ISSTAFF/1

&CMD-+IDLE-ADD Idle Purger=$+idle/add *: think [setq(0,[pmatch(%0)])][pemit(%#,switch(t(%q0),0,ansi(hr,That is not a valid player.),[name(%q0)] has been added to the idle queue.[append(num(me),idlequeue,%q0)]))]
&CMD-+IDLE-CONFIG Idle Purger=$+idle/config:think pemit(%#,[line()]%R[ansi(h,Idle Purger Configuration Options)]%R%R[ansi(hg,IDLETIME:)] [div(v(idletime),86400)] days%R[line()])]
&CMD-+IDLE-CONFIG-IDLETIME Idle Purger=$+idle/config idletime=*:think [switch([isnum(%0)],0,[pemit(%#,You must enter a -number- of days.)],[set(me,idletime:[mul(86400,%0)])][pemit(%#,You set the idle-timeout for player characters to be [ansi(hy,%0)] days)])]
&CMD-+IDLE-EXECUTE Idle Purger=$+idle/execute:think [setq(0,filter(me/fun_newly_idle,v(idlequeue)))][setq(1,filter(me/fun_warned,v(idlequeue)))][setq(2,filter(me/fun_nuke_em,v(idlequeue)))];@tr me/DO_IDLE_BBPOST=%q0,%q1,%q2;@dolist %q1={@newpassword ##=[rand(10,99)][rand(10,99)][rand(10,99)]};@dolist %q0={&IDLEWARN ##=1};@dolist %q2={@set ##=!safe;@force %#=+purge [name(##)]};@wait 20={@wipe me/idlequeue}
&CMD-+IDLE-GONE Idle Purger=$+idle/gone *=*/*:think pemit(%#,switch(0,[setq(0,pmatch(%0))]t(%q0),ansi(hr,There is no such player.),match(left dead npc roster breeze,%1),ansi(hr,That is not a valid option.),ansi(hg,You mark %0 as %1.)[set(%q0,gone:%1)][set(%q0,gone_note:%2)]))
&CMD-+IDLE-NUMS Idle Purger=$+idle/nums:think [pemit(%#,[get(me/idlequeue)])]
&CMD-+IDLE-PLIST Idle Purger=$+idle/plist:[line()]%R[ansi(h,Protected Players)]%R[iter([get(me/idleprotect)],[pemit(%#,[ljust(##,7)] - [name(##)])])][line()]
&CMD-+IDLE-PROTECT Idle Purger=$+idle/protect *:think [setq(0,[pmatch(%0)])][switch([strmatch(%0,[name(%q0)])],0,[pemit(%#,That is not a valid player)],[append(num(me),idleprotect,%q0)][pemit(%#,You have added [name(%q0)] to the protected list.  Please run +idle/start again to ensure they don't get @nuked)])]
&CMD-+IDLE-QUEUE Idle Purger=$+idle/queue:think pemit(%#,DB#[space(6)]Name[space(18)]%B%BLast On[space(6)]Gone Vacation/Last Will%R[line()]%R[ansi(r,Unapproved/Breezed Through Chars -- will be nuked)][iter(filter(me/fun_nuke_em,v(idlequeue)),u(fun_showidle,##))]%R%R[ansi(y,Warned -- will be idled out)][iter(filter(me/fun_warned,v(idlequeue)),u(fun_showidle,##))]%R%R[ansi(g,Newly Idled -- will be warned)][iter(filter(me/fun_newly_idle,v(idlequeue)),u(fun_showidle,##))])
&CMD-+IDLE-REMOVE Idle Purger=$+idle/remove *: think [setq(0,[pmatch(%0)])][set(me,idletemp:[get(me/idlequeue)])][wipe(me/idlequeue)][switch([strmatch(%0,[name(%q0)])],0,[pemit(%#,That is not a valid player.)],[iter([get(me/idletemp)],[switch([strmatch(%q0,##)],0,[set(me,idlequeue:[get(me/idlequeue)]##%b)],)])][pemit(%#,[name(%q0)] has been removed from the idle queue)],)]
&CMD-+IDLE-START Idle Purger=$+idle/start:think [wipe(me/idlequeue)][setq(0,[convtime([time()])])] [setq(1,0)][iter([lsearch(all,type,players)],[switch([gte([sub(%q0,[convtime([get(##/last)])])],[get(me/idletime)])],1,[switch([or(strmatch([get(me/idleprotect)],*## *),isgone(##))],0,[set(me,idlequeue:[get(me/idlequeue)]##%b)])])])];@fo %#=+idle/queue
&CMD-+IDLE-UNPROTECT Idle Purger=$+idle/unprotect *:think [setq(0,[pmatch(%0)])] [set(me,idletemp:[get(me/idleprotect)])][switch([strmatch(%0,[name(%q0)])],0,[pemit(%#,That is not a valid player)],[wipe(me/idleprotect)][iter([get(me/idletemp)],[switch([strmatch(%q0,##)],0,[set(me,idleprotect:[get(me/idleprotect)]##%b)],)])][pemit(%#,[name(%q0)] has been removed from the protected list)])]
&CMD-+IDLE-UNWARN Idle Purger=$+idle/unwarn *:think [setq(0,[pmatch(%0)])][pemit(%#,switch(t(%q0),0,ansi(hr,That is not a valid player.),[name(%q0)] has been marked as newly idle. [set(%q0,idlewarn:0)]))]
&CMD-+IDLE-WARN Idle Purger=$+idle/warn *:think [setq(0,[pmatch(%0)])][pemit(%#,switch(t(%q0),0,ansi(hr,That is not a valid player.),[name(%q0)] has been marked as idle-warned. [set(%q0,idlewarn:1)]))]
&CMD-+PURGE Idle Purger=$+purge *:think [setq(0,pmatch(%0))][setq(1,name(pmatch(%0)))];@switch [t(%q0)]=0,@pemit %#=ansi(hr,No such player.),{@tr me/PLAYER_PURGE_ACTIONS=%q0,%#}
&CREDITS Idle Purger=Originally coded by Shofari@B5MUSH.  Modified and maintained by Faraday (http://www.wordsmyth.org/faraday).
@set Idle Purger=DESCRIBE:Idle purger.%r\[u\(credits\)\]
&FUN_IS_GONE Idle Purger=words(xget(%0,gone))
&FUN_NEWLY_IDLE Idle Purger=and(not(hasflag(%0,unregistered)),not(xget(%0,idlewarn)))
&FUN_NOT_APPROVED Idle Purger=hasflag(%0,unregistered)
&FUN_NUKE_EM Idle Purger=or(hasflag(%0,unregistered),match(xget(%0,gone),breeze))
&FUN_SHOWIDLE Idle Purger=localize([setq(0,hasflag(%0,unregistered))]%R[ljust(%0,7)] - [ljust([ansi(switch(%q0,0,h,hx),name(%0))],20)] - [left(timefmt(%x,xget(%0,last))],10)] - [switch(xget(%0,gone),npc,(N),roster,(R),left,(L),dead,(K),breeze,(B),%B%B%B)]%B[get(%0/vacation)]%B/%B[xget(%0,lastwill)])
&FUN_WARNED Idle Purger=and(xget(%0,idlewarn),not(match(xget(%0,gone),breeze)))
&IDLEPROTECT Idle Purger=#1 
&ISSTAFF Idle Purger=isstaff(%#)
&MORE_SHELP_+IDLE_CONFIG Idle Purger=There are several things you can configure in the idle purger.%R%R[ansi(hm,Idle Timeout)] -  Someone will appear in the list for idle purging when they haven't logged in for this many days.%R[ansi(h,+idle/config idletime=<days>)] - Sets the idle timeout%R[ansi(h,+idle/config)] - Views config info%R%R[ansi(hg,Protected List)] - This is a list of special characters (staff NPCs, feature chars, game wiz characters, builders, guests, etc.) who should never appear on the idle purge list no matter how long they've been idle.%R[ansi(h,+idle/plist)] - Reviews the list of protected chars.%R[ansi(h,+idle/protect <name>)] - Adds someone to the protected list.%R[ansi(h,+idle/unprotect <name>)] - Removes someone from the protected list.%RALWAYS RE-RUN THE +idle/start COMMAND IF YOU CHANGE THE PROTECTED LIST.%R%R[ansi(hc,Purge Actions)] - This is what will happen when characters are purged.  There are two attributes you can configure.  The first is executed only once.  You'd use this if, for instance, you wanted a bbpost listing everyone who's been nuked.  The second is executed once PER CHARACTER.  You'd use this to clean up mailing lists, softcoded housing, etc.  The attributes are stored on the idle purge object.%R[ansi(h,DO_IDLE_BBPOST)] - Edit the text of the idle bbpost.%R[ansi(h,PLAYER_PURGE_ACTIONS)] - Triggered once per character who's nuked.  The character DB# is passed in as \%0 and the person doing the purging is passed as \%1.  By default, this will nuke the player object and remove them from any lists on an object specified in the attribute MAILING_LIST_OBJECT
&SHELP_IDLE Idle Purger=You can run the idle purger to get rid of old characters.%b%bThe idle purger has three lists:%r%r- The WARN list is for players who will be warned that they are idle.%r- The GONE list is for players who have fully idled out and left the game.%r- The PURGE list is for players who will be +purged \(a fancy nuke that cleans up mailing lists and other stuff\).%r%r[ansi(hw,+idle/start)][ansi(n,%b- Checks for idle players and generates the three lists.%r)]%b%b%bNewly-idle players go on the WARN list%r%b%b%bPlayers who were already warned go on the GONE list%r%b%b%bPlayers who never made it out of chargen go on the PURGE list.%r%r[ansi(hw,+idle/queue%b)][ansi(n,- At any time\, you can view the three lists.%r%r)][ansi(hw,+idle/add and +idle/remove)][ansi(n,%b- Adds/removes people from the idle list.%b%bYou could do this to add someone who intentionally quit the game.)][ansi(hw,%r)][ansi(h,%r)][ansi(h,+idle/warn and +idle/unwarn%b)][ansi(n,- Sets or removes a warning\, which will move someone between the WARN and GONE lists.%r)]%r[ansi(hw,+idle/gone%b)][ansi(n,<player>=<reason>/<comment>%r%b%b%bReason can be:%b%bleft\, dead\, npc\, roster or breeze%r%b%b%b- Roster will automatically add them to the roster system \(if installed\)%r%b%b%b- NPC just flags them as a NPC.%r%b%b%b- Breeze means they just breezed through.%r%b%bOnly 'breeze' chars will be nuked.%b%bThe others stick around for future reference.)][ansi(hw,%r%r)][ansi(h,+idle/execute)][ansi(n,%b- Executes the idling out of everyone in the queue.%b)][ansi(hr,MAKE ABSOLUTELY SURE BEFORE DOING THIS!)][ansi(n,%r)]%rAlso see +shelp +idle_config for important configuration information.
&SHELP_+PURGE Idle Purger=This command is used to cleanly nuke players.  It will nuke them and clean up any mailing lists, soft-coded housing, or whatever your game needs.  See +shelp +idle for more information.%R%R[ansi(hr,ALWAYS USE +PURGE RATHER THAN @NUKE TO NUKE PLAYERS)]%R%R[ansi(h,+purge <name>)] - Purges a player.
&STARTUP Idle Purger=@set me=!no_command;@fun isgone=me/fun_is_gone
@set Idle Purger/STARTUP=no_command prefixmatch
&TR_CLEAR_MAIL Idle Purger=@dolist lattr([v(mailing_list_object)]/list_*)={think set([v(mailing_list_object)],##:[remove(xget([v(mailing_list_object)],##),name(%0))])};@fo %#=@nuke [xget(%0,mail_object)]
&TR_REMOVE_ALT Idle Purger=@fo %0=+alts/unregister [name(%0)]
&TR_REMOVE_FRIENDS Idle Purger=@dolist real_players()=think set(##,list_friends:[remove(xget(##,list_friends),[name(%0)])])
&VERSION Idle Purger=8.0



@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@    *****       DATA SECTION           *****
@@    *****   CHECK BEFORE UPGRADING     *****
@@    *****   REMOVE OF MODIFY AS NEEDED *****
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

&DO_IDLE_BBPOST Idle Purger=@fo %#={+bbpost Announcements/Idle-Out Notice=%R%R\[ansi(hx,----- Barely Knew You -----)\]%RThe following folks barely hit the grid, so their characters have been recycled and actors freed up.%R[iter(%2,%R[ljust(name(##),15,.)][actor(name(##))])]%R%R\[ansi(hr,----- Idled Out -----)\]%RThe following folks have idled out.%R[iter(%1,%R[ljust(name(##),15,.)][switch(xget(##,gone),npc,\[ansi(c,Background NPC)\] - [xget(##,gone_note)],left,\[ansi(m,Left Town)\] - [xget(##,gone_note)],dead,\[ansi(r,Dead)\] - [xget(##,gone_note)],roster,\[ansi(g,NPC'd and placed on +roster)\])])]%R%R\[ansi(hy,----- Idle Warning -----)\]%RThe following folks are in danger of idling out.  If you know them from ElseMU, please tell them we miss them and hope that they will return!  If they fail to return by the next idle cycle, they will idle out and staff will decide what to do with them.  This could include NPC-rostering them, killing them off, or having them leave town.  If you have a preference on this matter, let staff know.%R[iter(%0,%R[name(##)])]}

&IDLEPROTECT Idle Purger=#1
&IDLETIME Idle Purger=2592000
&MAILING_LIST_OBJECT Idle Purger=#-1
&PLAYER_PURGE_ACTIONS Idle Purger=@fo %1=+actor/clear %0;@tr me/TR_CLEAR_MAIL=%0;@tr me/TR_REMOVE_ALT=%0;@tr me/TR_REMOVE_FRIENDS=%0;@dolist lsearch(%0,type,room)={@chown ##=*Builder};@dolist lsearch(%0,type,exit)={@chown ##=*Builder};@fo %1=@nuke %0

&CRON_JOB_IDLEPURGE CRON - Myrddin's mushcron=think create_job(ADMIN,Idle Purge,Purge idle players.,%#)
&CRON_TIME_IDLEPURGE CRON - Myrddin's mushcron=|01 15||01|30|


@wait 5=+jobs/create CODE=Idle Purge Protection/Add builders and other potentially-idle staff characters to the protected list so they don't get nuked by the idle purger.  See +shelp +idle.
@wait 5=+jobs/create CODE=Idle Purge Mailing List/Configure the mailing list object on the idle purger so deleted characters get removed from mailing lists.  See +shelp +idle.
@wait 5=+jobs/create CODE=Idle Purge Actions/Set up any additional actions to take upon purging a character, such as room or object cleanup.  See +shelp +idle.

@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@    *****       END DATA SECTION      *****
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


@pemit/silent %#=[ansi(hg,Setting up database numbers...)]%R

@wait 2=+install/updategroup IDLE

@wait 5=@pemit/silent %#=%R%R[ansi(hg,Installation Complete!!)]%R

@wait 5=@set me=!quiet

