@@ Faraday's MUSH Postmaster System
@@ Author:  Linda O'Meara
@@ Website: http://code.google.com/p/faramushcode/
@@
@@ Visit the website for documentation, installation instructions, bug reports,
@@ and more.

@set me=quiet

@pemit/silent %#=[ansi(hg,Beginning Events System Installation...)]%R

@pemit/silent %#=[ansi(hg,Creating Objects...)]%R

think install_create(EVENTS_CMD,Events System,1,0,5.0,Events system.)
think install_create(EVENTS_DB,Events Database,0,1,5.0,Events data storage.)

&CMD-+EVENT-ALIAS Events System=$+event *:@fo %#=+events %0
&CMD-+EVENTS Events System=$+events:think pemit(%#,[line_with_text(Events System)]%R[ansi(h,#%B%B%BEvent[space(40)]Date/Time)]%R[repeat(-,78)][iter(sortby(sortby_events,lattr(#EVENTS_DB/event_*)),[setq(0,switch(u(fun_event_distance,##),<0,hx,n))]%R[ljust(#@.,3)] [padstr(ansi(%q0,u(fun_get_name,##)),45)][ansi(%q0,u(fun_get_datetime,##))])]%R[line_with_text(+help +events)])
&CMD-+EVENTS-DELETE Events System=$+events/delete *:think pemit(%#,switch(1,lte(%0,0),ansi(hr,That is not a valid event.),gt(%0,words(lattr(#EVENTS_DB/event_*))),ansi(hr,That is not a valid event.),[setq(0,extract(sortby(sortby_events,lattr(#EVENTS_DB/event_*)),%0,1))]or(isstaff(%#),strmatch(u(fun_get_contact,%q0),%N)),ansi(hg,You delete event #%0)[wipe(#EVENTS_DB/%q0)],ansi(hr,Only the submitter may delete an event.))
&cmd-+events-REM Events System=$+events/rem:think pemit(%#,[line_with_text(Events This Week)][u(fun_get_reminders)]%R[line_with_text(+help +events)])
&CMD-+EVENTS-SUBMIT Events System=$+events/submit *=*/*:think switch(0,u(fun_is_valid_date,%1),pemit(%#,ansi(hr,That is not a valid date.  The format must be: Sun Aug 08 2006 @ 5pm EST)),[set(#EVENTS_DB,event_[xget(#EVENTS_DB,next_event)]:%N|%0|%1|[escape_cr(%2)])][pemit(%#,ansi(hg,You submit your event %0.))][iter(lwho(),pemit(##,ansi(hg,%N has submitted a new event: %0)))][set(#EVENTS_DB,next_event:[inc(xget(#EVENTS_DB,next_event))])])
&CMD-+EVENTS-VIEW Events System=$+events *:think pemit(%#,switch(1,lte(%0,0),ansi(hr,That is not a valid event.),gt(%0,words(lattr(#EVENTS_DB/event_*))),ansi(hr,That is not a valid event.),[setq(0,extract(sortby(sortby_events,lattr(#EVENTS_DB/event_*)),%0,1))][line_with_text(Events System)]%R[center(ansi(hr,u(fun_get_name,%q0)),78)]%R%R[ansi(h,Date/Time:)]%B[u(fun_get_datetime,%q0)]%R[ansi(h,Contact:)]%B%B%B[u(fun_get_contact,%q0)]%R%R[ansi(h,Details:)]%R[u(fun_get_details,%q0)]%R[line_with_text(+help +events)])
@STARTUP Events System=@set me=!no_command;@function event_reminders=[num(me)],fun_get_reminders
&FUN_EVENT_DISTANCE Events System=sub(u(fun_event_time,u(fun_get_datetime,%0)),secs())
&FUN_EVENT_TIME Events System=convtime([extract(%0,1,3)]%B23:59:59%B[extract(%0,4,1)])
&FUN_IS_VALID_DATE Events System=gt(u(fun_event_time,%0),0)
&FUN_GET_CONTACT Events System=extract(xget(#EVENTS_DB,%0),1,1,|)
&FUN_GET_DATETIME Events System=extract(xget(#EVENTS_DB,%0),3,1,|)
&FUN_GET_DETAILS Events System=extract(replace_cr(xget(#EVENTS_DB,%0)),4,1,|)
&FUN_GET_NAME Events System=extract(xget(#EVENTS_DB,%0),2,1,|)
&FUN_GET_REMINDERS Events System=[squish(iter(sortby(sortby_events,lattr(#EVENTS_DB/event_*)),[setq(9,u(fun_event_distance,##))][switch(and(gte(%q9,0),lte(%q9,2409600)),1,[setq(8,%q8%R[center("[u(fun_get_name,##)]" on [u(fun_get_datetime,##)],78)])])]))][switch(words(%q8),0,%R[center(None Scheduled,78)],%q8)]
&HELP_+EVENTS Events System=Tinyplot scenes and other events can be listed using the +events command so everyone will be reminded of them.%R%R[ansi(h,+events)] - List all events.%R[ansi(h,+events <#>)] - Views details for a particular event.%R[ansi(h,+events/delete <#>)] - Deletes an event.  Only the submitter can do this.%R[ansi(h,+events/submit <title>=<date-time>/<detailed description>)] - Adds a new event.%R%TNOTE: The date/time must be in the form: Day Month Date Year @ Time%R%TExample: Sun Jun 02 2007 @ 7pm EST%R%TIt is strongly suggested that you list the timezone to avoid confusion.
&SORTBY_EVENTS Events System=localize([setq(0,sub(u(fun_event_distance,%0),u(fun_event_distance,%1)))][switch(%q0,0,sub(after(%0,_),after(%1,_)),%q0)])


@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@    *****       DATA SECTION           *****
@@    *****   CHECK BEFORE UPGRADING     *****
@@    *****   REMOVE OF MODIFY AS NEEDED *****
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


&NEXT_EVENT Events Database=1
@wait 5=+jobs/create CODE=Events/If you're not using the MOTD system, you should create a global ACONNECT for the +events/rem command, so people are reminded of upcoming events.


@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@    *****       END DATA SECTION      *****
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@pemit/silent %#=[ansi(hg,Setting up database numbers...)]%R

@wait 2=+install/updategroup EVENTS

@wait 5=@pemit/silent %#=%R%R[ansi(hg,Installation Complete!!)]

@wait 5=@set me=!quiet

