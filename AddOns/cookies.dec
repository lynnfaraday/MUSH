@@ Faraday's +cookie System
@@ Author:  Linda O'Meara
@@ Website: http://code.google.com/p/faramushcode/
@@
@@ Visit the website for documentation, installation instructions, bug reports,
@@ and more.

@set me=quiet

@pemit/silent %#=[ansi(hg,Beginning +cookie Installation.  Please wait until the Installation Complete message appears...)]%R


@pemit/silent %#=[ansi(hg,Creating Objects...)]%R

think install_create(COOKIE_CMD,Cookie System,1,0,5.0,Cookies!)
think install_create(COOKIE_DB,Cookie DB,0,1,5.0,Cookie database storage.)

&CMD-+COOKIE Cookie System=$+cookie *:think switch(words(%0),1,[setq(0,pmatch(%0))][pemit(%#,switch(0,t(%q0),ansi(hr,That is not a valid player.),not(match(%#,%q0)),ansi(hr,You can't give yourself a cookie!),not(match(xget(%#,cookies_given),[name(%q0)])),ansi(hr,You have already given %0 a cookie this week.),not(match(xget(%#,alts),%q0)),ansi(hr,You can't give your alt a cookie!),ansi(hg,You give [name(%q0)] a cookie.)[set(%#,cookies_given:[xget(%#,cookies_given)][name(%q0)]%B)][set(%q0,cookies_received:[xget(%q0,cookies_received)]%N%B)]))])
&CMD-+COOKIE-HERE Cookie System=$+cookie/here:@dolist remove(lcon(%l),%#)=@switch [conn(##)]=>0,@fo %#=+cookie [name(##)]
&CMD-+COOKIE-LEVELS Cookie System=$+cookie/levels:think pemit(%#,[line()]%R[ansi(h,Cookie award levels)][iter(sort(lattr(#COOKIE_DB/COOKIE_LEVEL_*)),%R[ljust(u(fun_format_cookie_level_name,#@),20)][ansi(h,[u(fun_cookie_level_cookies,#@)] cookies)])]%R%RYou have a total of [xget(%#,cookies)] cookies[switch(cookie_award(%#),,.,\,%Bwhich gives you the [cookie_award(%#)] cookie award.)]%R[line()])
&CMD-+COOKIE-LIST Cookie System=$+cookie *:@switch words(%0)=>1,@dolist %0=@fo %#=+cookie ##
&CMD-+COOKIE-REMIND Cookie System=$+cookie/remind *:think pemit(%#,switch(0,match(on off,%0),ansi(hr,You must specify ON or OFF.),switch(%0,on,ansi(hg,You turn on the cookie reminder.)[set(%#,cookie_remind:1)],off,[set(%#,cookie_remind:0)]ansi(hg,You turn off the cookie reminder.))
&CMD-+COOKIES Cookie System=$+cookies:think pemit(%#,[line()]%R[ansi(h,You have given out the following cookies this week:)]%R%R[switch(xget(%#,cookies_given),,[ansi(hr,No Cookies Given)],iter(sort(setdiff(xget(%#,cookies_given),)),%R[ljust(##:,15)][words(graball(xget(%#,cookies_given),##))]))]%R[line()])
&CMD-+COOKIE-TOP Cookie System=$+cookie/top:think pemit(%#,[setq(0,iter(real_players(),[rjust(xget(##,cookies),4,0)]:##))][line()]%R[ansi(h,Top Cookie Earners \(total cookies\))]%R[iter(extract(revwords(sort(%q0)),1,20),%R[ljust(#@.,4)][padstr(name(after(##,:)),15)]  [ljust(u(fun_format_cookie_Level_name,u(fun_Cookie_level,after(##,:))),10)] \([trimpenn(before(##,:),0,l)] cookies\))]%R%RSee also [ansi(h,+cookie/top2)]%R[line()])
&CMD-+COOKIE-TOP2 Cookie System=$+cookie/top2:think pemit(%#,[setq(0,iter(real_players(),[switch(xget(##,cookies),0,,[round(fdiv(xget(##,cookies),fdiv(sub(secs(),convtime(ctime(##))),86400)),2)]:##)]))][line()]%R[ansi(h,Top Cookie Earners \(cookies per day\))]%R[iter(extract(revwords(sort(%q0)),1,20),%R[ljust(#@.,4)][padstr(name(after(##,:)),15)]  [ljust(u(fun_format_cookie_Level_name,u(fun_Cookie_level,after(##,:))),10)] \([trimpenn(before(##,:),0,l)] cookies/day\))]%R[line()])
&CMD-+LUCK Cookie System=$+luck:think pemit(%#,ansi(hg,[line()]%RYou have [xget(%#,luck_points)] luck [switch(xget(%#,luck_points),1,point,points)].%R%RYou can save up a maximum of [xget(#COOKIE_DB,max_lp)] luck points.%R[line()]))
&CMD-+LUCK-AWARD Cookie System=$+luck/award *=*/*:@switch [setq(0,pmatch(%0))]0=isstaff(%#),@pemit %#=ansi(hr,Restricted to staff.),t(%q0),@pemit %#=ansi(hr,There is no such player.),isnum(%1),@pemit %#=ansi(hr,That is not a number.),{@pemit %#=ansi(hg,You award %0 %1 luck points for %2.);+bbpost Staff Job Notices/Luck Award - [name(%q0)]=%N awarded [name(%q0)] with %1 Luck Points for %2.;@fo %#=+mail [name(%q0)]=Luck Award/Congratulations!  You have received %1 Luck Points for %2.;think set(%q0,luck_points:[add(xget(%q0,luck_points),%1)])
&CMD-+LUCK-INFO Cookie System=$+luck/info:think pemit(%#,[line()]%R[ansi(h,+luck Uses)]%R%R[u(#COOKIE_DB/LUCK_INFO)]%R[line()])
&CMD-+LUCK-SPEND Cookie System=$+luck/spend *=*:think switch(0,gte(xget(%#,luck_points),%0),pemit(%#,ansi(hr,You don't have that many luck points)),isnum(%0),pemit(%#,ansi(hr,That is not a number.)),[remit(%l,ansi(h,%N spends %0 luck points on %1.))][create_job(REQ,Luck - %N,%N has spent %0 luck points on %1,%#)][set(%#,luck_points:[sub(xget(%#,luck_points),%0)])])
&CMD-+LUCK-SPEND2 Cookie System=$+luck/spend *:think pemit(%#,switch(%0,*=*,,ansi(hr,You forgot the reason.)))
&CRON_JOB_COOKIEAWARD Cookie System=@tr me/tr-cookie-award
&CRON_JOB_COOKIEREMIND Cookie System=@tr me/tr-cookie-reminder
&CRON_TIME_COOKIEAWARD Cookie System=||Sun|23|59|
&CRON_TIME_COOKIEREMIND Cookie System=|||01 03 05 07 09 11 13 15 17 19 21 23|00|
&FUN_COOKIE_AWARD Cookie System=u(fun_format_cookie_level_name,u(fun_cookie_level,%0))
&FUN_COOKIE_LEVEL Cookie System=localize([setq(9,0)][iter(sort(lattr(#COOKIE_DB/COOKIE_LEVEL_*)),switch(gte(xget(%0,cookies),u(fun_cookie_level_cookies,#@)),1,setq(9,#@)),,)]%q9)
&FUN_COOKIE_LEVEL_COLOR Cookie System=extract(xget(#COOKIE_DB,COOKIE_LEVEL_[rjust(%0,2,0)]),3,1,|)
&FUN_COOKIE_LEVEL_COOKIES Cookie System=extract(xget(#COOKIE_DB,COOKIE_LEVEL_[rjust(%0,2,0)]),2,1,|)
&FUN_COOKIE_LEVEL_NAME Cookie System=switch(%0,0,-,extract(xget(#COOKIE_DB,COOKIE_LEVEL_[rjust(%0,2,0)]),1,1,|))
&FUN_FORMAT_COOKIE_LEVEL_NAME Cookie System=ansi(u(fun_cookie_level_color,%0),u(fun_cookie_level_name,%0))
&FUN_TOP_COOKIE_EARNERS Cookie System=[set(me,COOKIE_EARNERS:~%0~)][iter(%0,[setq(3,%q3[switch(words(%q3),>0,%B)][rjust(before(after(##,:),-),4,0)]:[before(##,:)]_[before(after(##,:),-)])],|)][iter(extract(revwords(sort(%q3)),1,10,),%R[ljust(#@.,4)] [ljust(name(before(after(##,:),_)),15)] - [after(after(##,:),_)] cookies)]
&HELP_+COOKIE Cookie System=Cookies are a way of rewarding players for fun RP.  If you enjoyed a scene, give the other player(s) a cookie.  It's that simple.  Cookies are anonymous, so other players will not see any messages to let them know they got a cookie.  Cookies are tallied weekly, and those with the most cookies are recognized on the public BBS.%R%RYou can give out as many cookies as you want per week, but only one to each character.  Cookies also grant 'luck points' (see +help +luck).%R%R[ansi(h,+cookie <player>)] - Gives someone a cookie.%R[ansi(h,+cookie/here)] - Gives everyone in the room a cookie.%R[ansi(h,+cookies)] - Show who all you've given cookies to this week.%R[ansi(h,+cookie/levels)] - Shows the cookie level awards.%R%R[ansi(h,+cookie/remind <on or off>)] - Turns the hourly cookie reminder on or off.%R%R[ansi(h,+cookie/top)] - Shows top cookie earners of all time (weekly winners are posted to the bbs)
&HELP_+LUCK Cookie System=Luck Points, which are obtained through cookies (see +help +cookie) can be used to generate various lucky effects, at staff's discretion.  There is a max cap on the number of luck points you can store up.%R%R[ansi(h,+luck)] - Views your luck points.%R[ansi(h,+luck/spend <points>=<reason>)] - Spends luck points.%R[ansi(h,+luck/info)] - Views what you can spend luck points on.
&SHELP_+COOKIE Cookie System=Cookies are given out automatically, so there are no staff commands.  The list of who got cookies from whom is posted to the staff jobs BBS every week when cookies are awarded.%R%RThe cookie award levels are stored on #COOKIE_DB in attributes named COOKIE_LEVEL_XX.  You can have anywhere from one to 99 cookie levels, but they must be numbered with two digits so they sort right.  Each level should specify:  NAME|# OF COOKIES REQUIRED|ANSI COLOR%RFor example: Bronze|10|hy%R%RYou'll also want to set up the LUCK_INFO attribute to describe what luck points can be spent on.
&SHELP_+LUCK Cookie System=You can give a bonus luck point award with:  [ansi(h,+luck/award <player>=<# of luck points>/<reason>)]
@STARTUP Cookie System=@set me=!no_command;@fun COOKIE_AWARD=[num(me)],FUN_COOKIE_AWARD
@set Cookie System/STARTUP=no_command prefixmatch
&TR-COOKIE-AWARD Cookie System=think [setq(9,)][iter(lsearch(all,type,player),switch(gt(words(xget(##,cookies_received)),0),1,setq(9,%q9[name(##)]: [xget(##,cookies_received)]|)))]x[set(me,DEBUG_COOKIE_LOG:%q9)];+bbpost Staff job Notices/Cookie Awards For [timefmt($x,secs())]=[ljust(Player,15)]Cookies Received%R[line2()][iter(%q9,%R[ljust(before(##,:),15)][after(##,:)],|)];@tr me/tr-cookie-award2
&TR-COOKIE-AWARD2 Cookie System=think [setq(9,)][iter(lsearch(all,type,player),switch(gt(words(xget(##,cookies_received)),0),1,##[setq(9,%q9[switch(words(%q9),>0,%B)][rjust(words(xget(##,cookies_received)),4,0)]:[name(##)])]))][set(me,DEBUG_COOKIE_LIST1:%q9)][setq(9,sort(%q9))][set(me,DEBUG_COOKIE_LIST2:%q9)][setq(9,revwords(%q9))][set(me,DEBUG_COOKIE_LIST3:%q9)];+bbpost Cookie Notices/Top Cookie Earners For [timefmt($x,secs())]=[ljust(Player,20)]Cookies Received%R[line2()][iter(extract(%q9,1,10),%R[ljust(#@.,3)] [ljust(after(##,:),20)][trimpenn(before(##,:),0,l)] cookies)];@tr me/tr-cookie-award3
&TR-COOKIE-AWARD3 Cookie System=think [iter(lsearch(all,type,player),[setq(0,words(xget(##,cookies_received)))][set(##,old_cookies:[xget(##,cookies)])][set(##,old_luck:[xget(##,luck_Points)])][set(##,temp_cookies:%q0)][set(##,cookies:[add(xget(##,cookies),%q0)])][set(##,luck_points:[min(xget(#COOKIE_DB,max_LP),add(xget(##,luck_points),mul(%q0,xget(#COOKIE_DB,lp_per_cookie))))])][set(##,cookies_received:)][set(##,cookies_given:)])]
&TR-COOKIE-REMINDER Cookie System=@dolist lwho()=@switch xget(##,cookie_remind)=1,@pemit ##=ansi(hg,<OOC> Remember to +cookie.  Cookies will be awarded on Sunday at midnight server time.)


&HATTR_COOKIES_GIVEN Cookie DB=
&HATTR_COOKIES_RECEIVED Cookie DB=
&HATTR_COOKIE_REMIND Cookie DB=
&HATTR_COOKIES Cookie DB=
&HATTR_LUCK_POINTS Cookie DB=


@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@    *****       DATA SECTION           *****
@@    *****   CHECK BEFORE UPGRADING     *****
@@    *****   REMOVE OF MODIFY AS NEEDED *****
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

&LP_PER_COOKIE Cookie DB=0.1
&MAX_LP Cookie DB=5
&COOKIE_LEVEL_01 Cookie DB=Copper|10|m
&COOKIE_LEVEL_02 Cookie DB=Bronze|25|y
&COOKIE_LEVEL_03 Cookie DB=Silver|50|h
&COOKIE_LEVEL_04 Cookie DB=Gold|100|hy
&COOKIE_LEVEL_05 Cookie DB=Platinum|200|hb
&COOKIE_LEVEL_06 Cookie DB=Palladium|500|hg
&LUCK_INFO Cookie DB=Pester your staff to fill in what you can use luck points on.  If you are using the FS3 combat system, luck points are built in automatically.  See +help +combat.


@wait 7=+job/create CODE=Cookie Cron/Copy the +cookie CRON job over to the MUSHCron system, or otherwise configure it to run weekly.
@wait 7=+job/create CODE=Cookie Levels/Customize the cookie levels if desired.  See +shelp +cookie.
@wait 7=+job/create CODE=Set up info on what luck points can be used on.  See +shelp +cookie.


@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@    *****       END DATA SECTION      *****
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@pemit/silent %#=[ansi(hg,Setting up database numbers...)]%R

@wait 2=+install/updategroup COOKIE

@wait 5=@pemit/silent %#=%R%R[ansi(hg,Installation Complete!!)]

@wait 5=@set me=!quiet
