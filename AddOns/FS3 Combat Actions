@create FS3Combat Action Commands
@set FS3Combat Action Commands = WIZARD
@set FS3Combat Action Commands = SAFE
@set FS3Combat Action Commands = !NO_COMMAND

@@ ================================================================================================================
@@ ---------------   Combat Status -----------------
@@ ================================================================================================================

&CMD-+COMBAT-ALL FS3Combat Action Commands=$+combat/all:@pemit %#=[line()]%R[ansi(h,Combat #%B%BOrganizer%B%B%B%BParticipants)][iter(children(#806),%R[ljust(##,9)] [padstr(name(xget(##,organizer)),12)] [iter(u(##/fun_participants),prettify(lcstr(itext(0))))])]%R[line()]

&CMD-+COMBAT-STATUS FS3Combat Action Commands=$+combat:@pemit %#=[setq(0,u(fun_combat_num,%N))]switch(0,t(%q0),ansi(hr,You are not in combat.),[line()]%R[ansi(hx,<)] [ansi(h,Name[space(11)]Weapon/Vehicle[space(6)]Damage[space(2)]Stance/Action[space(2)]Target)][iter(u(%q0/fun_active_teams),%R[ansi(hx,<)] %R[ansi(hx,<)] [ansi(hg,Team ##)][iter(sort(u(%q0/fun_team_members,##)),u(fun_display_status,itext(0),%q0))])]%R[ansi(hx,<)]%R[ansi(hx,<)] [ansi(h,Observers/NPCMasters:)] %R[ansi(hx,<)] [iter(setdiff(u(%q0/fun_participants),u(%q0/fun_combatants)),prettify(lcstr(##)))]%R[line()])

&CMD-+COMBAT-HERO FS3Combat Action Commands=$+combat/hero:@pemit %#=[setq(0,u(fun_combat_num,%N))][ansi(h,<COMBAT>)] [switch(0,t(%q0),ansi(hr,You are not in combat.),gt(xget(%#,luck_points),0),ansi(hr,You do not have any luck points..),u(%q0/fun_combatstat,%N,ko),ansi(hr,You aren't KO'd yet.  Save your points.),You spend a luck point to soldier on.[set(%#,luck_points:[sub(xget(%#,luck_points),1)])][u(%q0/fun_mod_combatstat,%N,ko,0)][u(%q0/fun_combat_msg,%N spends a luck point to keep fighting!)])]

&CMD-+COMBAT-MSG FS3Combat Action Commands=$+combat/msg *:@switch [setq(0,u(fun_combat_num,%N))]0=t(%q0),[ansi(h,<COMBAT>)] You are not in combat.,think u(%q0/fun_combat_msg,[ansi(hc,Message from %N:)] %0)

@@ --------------------------
@@ FUN_DISPLAY_STATUS
@@ Shows the combat status line for someone.
@@ %0 = name
@@ %1 = combat #
@@ --------------------------
&FUN_DISPLAY_STATUS FS3Combat Action Commands=localize(%R[ansi(hx,<)][u(fun_acted_display,%0,%1)] [padstr(prettify(lcstr(%0)),15)][setq(1,u(%1/fun_combatstat,%0,type))][padstr([switch(%q1,soldier,u(%1/fun_combatstat,%0,weapon),[u(%1/fun_combatstat,%0,vehicle)]%B\([switch(%q1,pilot,plt,pas)]\))],20)][switch(u(%1/fun_combatstat,%0,ko),1,[ansi(h,*KO*%B)],u(fun_dmg_meter,u(%1/fun_damagemod,%0)))]%B%B%B[ucstr(mid(u(%1/fun_combatstat,%0,stance),0,3))]/[padstr(u(%1/fun_combatstat,%0,action),10)] [padstr(prettify(lcstr(u(%1/fun_combatstat,%0,target))),17)])

@@ --------------------------
@@ FUN_DMG_METER
@@ %0 = damage modifier
@@ Displays a damage meter that fills up as you become more hurt.
@@ --------------------------
&FUN_DMG_METER FS3Combat Action Commands=switch(%0,>80,ansi(hR,XXXXX),>60,ansi(hr,XXXX.),>40,ansi(hy,XXX..),>20,ansi(hb,XX...),>0,ansi(hg,X....),.....)


@@ --------------------------
@@ FUN_IS_IN_COMBAT
@@ Returns 1 if the person is in combat.
@@ %0 = name
@@ --------------------------
&FUN_IS_IN_COMBAT FS3Combat Action Commands=t(u(FUN_COMBAT_NUM,%0))

@@ --------------------------
@@ FUN_IS_VALID_COMBAT
@@ Returns 1 if there is a combat by that name.
@@ %0 = combat #
@@ --------------------------
&FUN_IS_VALID_COMBAT FS3Combat Action Commands=match(children(#806),%0)

@@ --------------------------
@@ FUN_COMBAT_NUM
@@ Returns the combat # of the person, if they're in combat.  Otherwise blank.
@@ %0 = name
@@ --------------------------
&FUN_COMBAT_NUM  FS3Combat Action Commands=switch(t(pmatch(%0)),1,xget(pmatch(%0),combat),squish(iter(children(#806),switch(u(##/fun_is_participant,%0),1,##))))

@@ --------------------------
@@ FUN_ACTED_DISPLAY 
@@ Shows whether someone has acted(a), posed(p) or both acted/posed (+) at a glance.
@@ %0 = name
@@ %1 = combat #
@@ --------------------------
&FUN_ACTED_DISPLAY FS3Combat Action Commands=ansi(hx,switch(1,and(match(xget(%1,posed),%0),match(xget(%1,acted),%0)),+,t(match(xget(%1,posed),%0)),p,t(match(xget(%1,acted),%0)),a,-))

@@ ================================================================================================================
@@ ---------------   Combat Start/Stop/Join/Leave -----------------
@@ ================================================================================================================


&CMD-+COMBAT-START FS3Combat Action Commands=$+combat/start *:@pemit %#=[ansi(h,<COMBAT>)] [switch(0,not(u(FUN_IS_IN_COMBAT,%#)),ansi(hr,You are already in combat.),match(mock real,%0),ansi(hr,Combat type must be mock or real.),You start a combat.  Your combat number is [setq(0,create(Combat Instance))]%q0.[setq(1,parent(%q0,#806))][set(%q0,organizer:%#)][set(%q0,real:[switch(%0,real,1,0)])])];@switch t(%q0)=1,@fo %#=+combat/join %q0/observer

&CMD-+COMBAT-STOP FS3Combat Action Commands=$+combat/stop *:@pemit %#=[ansi(h,<COMBAT>)] [switch(0,u(FUN_IS_VALID_COMBAT,%0),ansi(hr,That is not a valid combat number.),or(isstaff(%#),strmatch(xget(%0,organizer),%N)),ansi(hr,Only staff or the organizer can stop a combat.),You stop combat %0.[u(%0/fun_combat_msg,%N has stopped the combat.)][iter(u(%0/fun_participants),u(FUN_DO_LEAVE,##,%0))][setq(0,1)])];@switch %q0=1,{@nuke %0;@nuke %0}

&CMD-+COMBAT-JOIN FS3Combat Action Commands=$+combat/join *:@pemit %#=switch(%0,*=*,,[ansi(h,<COMBAT>)] [u(FUN_DO_JOIN,%N,%0)])
&CMD-+COMBAT-JOIN-NAME FS3Combat Action Commands=$+combat/join *=*:@pemit %#=[ansi(h,<COMBAT>)] [u(FUN_DO_JOIN,%0,%1)]

&CMD-+COMBAT-LEAVE FS3Combat Action Commands=$+combat/leave:@pemit %#=[setq(0,u(fun_combat_num,%N))][ansi(h,<COMBAT>)] [switch(0,t(%q0),ansi(hr,You are not in combat.),[u(%q0/fun_combat_msg,%N has left the combat.)][u(fun_do_leave,%N,%q0)])]

&CMD-+COMBAT-FORCELEAVE FS3Combat Action Commands=$+combat/leave *:@pemit %#=[setq(0,u(fun_combat_num,%0))][ansi(h,<COMBAT>)] [switch(0,t(%q0),ansi(hr,%0 is not in combat.),[u(%q0/fun_combat_msg,[prettify(%0)] has left the combat.[u(fun_add_id,%0)])][u(fun_do_leave,%0,%q0)])]

&CMD-+COMBAT-NEWTURN FS3Combat Action Commands=$+combat/newturn:think [setq(0,u(fun_combat_num,%N))][setq(1,u(%q0/FUN_INITIATIVE))];@switch 0=t(%q0),@pemit %#=[ansi(h,<COMBAT>)] [ansi(hr,You are not in combat.)],{@switch u(%q0/fun_turn_num)=0,{@fo %#=+combat/retarget;think u(%q0/fun_new_turn)},@pemit %#=[ansi(h,<COMBAT>)] Triggering new turn.;@dolist %q1=@wait [mul(#@,2)]=think u(%q0/fun_do_action,##);@wait [add(mul(words(%q1),2),1)]=think [u(%q0/fun_new_turn)]}

@@ --------------------------
@@ FUN_ADD_ID
@@ Adds an identifier after a command if it's done on a NPC.
@@ %0=target of the command.
@@ --------------------------
&FUN_ADD_ID FS3Combat Action Commands=switch(%0,%N,,%B\(%N\))

@@ --------------------------
@@ FUN_DO_JOIN
@@ Handles joining someone (PC or NPC) to combat.
@@ %0 = name
@@ %1 = combat#/type/vehicle  (split into %q0=type, %q1=vehicle, %q2=combat #)
@@ 
@@ NOTE! Uses %qv for temporary vehicle results register and %qn for temp npc register
@@ Returns message to display to enactor.
@@ --------------------------

&FUN_DO_JOIN FS3Combat Action Commands=localize([setq(0,extract(%1,2,1,/))][setq(1,extract(%1,3,1,/))][setq(2,extract(%1,1,1,/))][switch(0,u(FUN_IS_VALID_COMBAT,%q2),ansi(hr,That is not a valid combat number.),not(u(FUN_IS_IN_COMBAT,%0)),ansi(hr,%0 is already in combat.),match(v(types),%q0),ansi(hr,That is not a valid type.  Pick one of: [v(types)].),[setq(v,u(fun_join_vehicle_stuff,%q0,%q1))][eq(%qv,1)],ansi(hr,after(%qv,|)),[setq(n,u(fun_join_npc_stuff,%0))][eq(%qn,1)],ansi(hr,after(%qn,|)),[switch(%N,%0,You join combat %q2.,You make %0 join combat %q2.)]%R< Weapon set to: [u(fun_default_weapon,%q0,%q1)][u(%q2/fun_init_combatstat,%0,%q0,%q1,[u(fun_default_weapon,%q0,%q1)])][set(pmatch(%0),combat:%q2)][u(%q2/fun_combat_msg,[prettify(%0)] has joined the combat as a %q0[switch(t(%q1),1,%Bin [prettify(%q1)])][switch(%q0,observer,,npcmaster,,%Bon team [u(%q2/fun_combatstat,%0,team)])].[u(fun_add_id,%0)])])


@@ --------------------------
@@ FUN_JOIN_VEHICLE_STUFF
@@ Figures out all the vehicle stuff when joining combat.  Checks to make sure the vehicle names are valid and such.  Creates a random vehicle
@@ if needed.  
@@ %0 = type
@@ %1 = vehicle
@@
@@ Returns either 1 or 0|error
@@ NOTE!!  Overrides %q1 if vehicle type was specified and a random vehicle created.  DO NOT LOCALIZE
@@ --------------------------

&FUN_JOIN_VEHICLE_STUFF FS3Combat Action Commands=switch(1,not(match(pilot passenger,%0)),1,isvehicle(%1),1,not(%1),0|You must specify a vehicle if you are a pilot or passenger.,not(match(vehicletypes(),%1)),0|%1 is not a valid vehicle name or type,t(match(vehicletypes(),%1)),1[setq(1,randvehicle(%1))],0|Unknown error.)

@@ --------------------------
@@ FUN_JOIN_NPC_STUFF
@@ Figures out all the npc stuff when joining combat.  Checks to make sure the npc names are valid and such.  
@@ Creates a random npc if needed.  
@@ %0 = name
@@
@@ Returns either 1 or 0|error
@@ --------------------------

&FUN_JOIN_NPC_STUFF FS3Combat Action Commands=switch(1,isplayer(%0),1,isnpc(%0),1,createnpc(%0,u(fun_rand_npc_skill)))
&FUN_RAND_NPC_SKILL FS3Combat Action Commands=first(shuffle(1 2 2 3 3 3 4 4 4 4 4 4 4 4 4 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 6 6 6 7 7 8 8 9 10 11 12))

@@ --------------------------
@@ FUN_DEFAULT_WEAPON
@@ %0 = type
@@ %1 = vehicle
@@ --------------------------
&FUN_DEFAULT_WEAPON FS3Combat Action Commands=switch(%0,soldier,defaultrifle(),pilot,first(vehtypestat(vehiclestat(%1,type),weapons)),)


@@ --------------------------
@@ FUN_DO_LEAVE
@@ %0 = name
@@ %1 = combat #
@@ --------------------------
&FUN_DO_LEAVE FS3Combat Action Commands=[switch(isplayer(%0),1,wipe([pmatch(%0)]/combat))][clearmockdmg(%0)][u(%1/fun_remove,%0)][switch(%0,%N,You leave the combat.,You make %0 leave the combat.)]


@@ ================================================================================================================
@@ ---------------   Teams and Targets -----------------
@@ ================================================================================================================


@@ %q0 = combat #
@@ %q1 = name
@@ %q2 = team #
&CMD-+COMBAT-TEAM FS3Combat Action Commands=$+combat/team *:@pemit %#=[ansi(h,<COMBAT>)] [setq(0,u(fun_combat_num,%N))][switch(%0,*=*,[setq(1,before(%0,=))][setq(2,after(%0,=))],[setq(1,%N)][setq(2,%0)])][switch(0,t(%q0),ansi(hr,You are not in combat.),u(fun_is_valid_team_num,%q2),ansi(hr,Team number must be between 1 and 9),u(%q0/fun_is_participant,%q1),ansi(hr,%q1 is not in your combat.),You set %q1's team.[u(%q0/fun_mod_combatstat,%q1,team,%q2)][u(%q0/fun_org_msg,%q1's team set to %q2. \(%N\))]

&CMD-+COMBAT-TEAM-TARGET FS3Combat Action Commands=$+combat/teamtarget *=*:@pemit %#=[ansi(h,<COMBAT>)] [setq(0,u(fun_combat_num,%N))][switch(0,t(%q0),ansi(hr,You are not in combat.),[not(strmatch(iter(%0,u(fun_is_valid_team_num,##),,),*0*))],ansi(hr,You may only specify team numbers and they must be from 1-9.),[not(strmatch(iter(%1,u(fun_is_valid_team_num,##),,),*0*))],ansi(hr,You may only specify team numbers and they must be from 1-9.),You set teams %0 to target teams %1.%R< Note that this does not affect team %1.  You must target them separately.[iter(%0,u(%q0/fun_set_team_target,##,%1))])

&CMD-+COMBAT-RETARGET-LIST FS3Combat Action Commands=$+combat/retarget *:@pemit %#=[ansi(h,<COMBAT>)] [setq(0,u(fun_combat_num,%N))][switch(0,t(%q0),ansi(hr,You are not in combat.),iter(u(%q0/fun_combatants),switch(isnpc(##),1,[setq(1,grab(%0,[unprettify(##)]=*,\,))][u(%q0/fun_set_action,##,attack,switch(t(%q1),1,after(%q1,=),u(%q0/fun_pick_random_target,##)))])),,)]You force NPCs to pick new targets.

&CMD-+COMBAT-RETARGET FS3Combat Action Commands=$+combat/retarget:@pemit %#=[ansi(h,<COMBAT>)] [setq(0,u(fun_combat_num,%N))][switch(0,t(%q0),ansi(hr,You are not in combat.),iter(u(%q0/fun_combatants),switch(isnpc(##),1,[u(%q0/fun_set_action,##,attack,u(%q0/fun_pick_random_target,##))])),,)]You force NPCs to pick new targets.

&CMD-+COMBAT-TARGET FS3Combat Action Commands=$+combat/target *=*:@pemit %#=[ansi(h,<COMBAT>)] [setq(0,u(fun_combat_num,%N))][switch(0,t(%q0),ansi(hr,You are not in combat.),u(%q0/fun_is_combatant,%0),ansi(hr,%0 is not a combatant.),u(%q0/fun_is_targetable,%1),ansi(hr,%1 is not a valid target.),You target [prettify(%0)] at [prettify(%1)].[u(%q0/fun_mod_combatstat,%0,target,unprettify(%1))][u(%q0/fun_org_msg,[prettify(%0)] targets [prettify(%1)].[u(fun_add_id,%0)])])]

&FUN_IS_VALID_TEAM_NUM FS3Combat Action Commands=and(isnum(%0),gt(%0,0),lt(%0,10))


@@ ================================================================================================================
@@ ---------------   Actions -----------------
@@ ================================================================================================================

@@ --------------------------
@@ FUN_CAN_ACT
@@ Does general checks as to whether someone can act.
@@ %0 = name
@@ SIDE EFFECT!!! sets %q0 to be the person's combat number  (also sets %q1  but we don't care)
@@ --------------------------
&FUN_CAN_ACT FS3Combat Action Commands=[setq(0,u(fun_combat_num,%0))][setq(1,u(fun_combat_num,%N))][and(t(%q1),t(%q0),not(u(%q0/fun_combatstat,%0,ko)),u(%q0/fun_is_actor,%0))]

@@ ---------------   Pass -----------------
@@ Pass has no options or target

&CMD-+COMBAT-PASS FS3Combat Action Commands=$+combat/pass:@pemit %#=[ansi(h,<COMBAT>)] [u(FUN_ACTION_PASS,%N)]

&CMD-+COMBAT-PASS-PERSON FS3Combat Action Commands=$+combat/pass *:@pemit %#=[ansi(h,<COMBAT>)] [u(FUN_ACTION_PASS,%0)]

@@ --------------------------
@@ FUN_ACTION_PASS
@@ Registers a pass action.
@@ %0 = actor name
@@ --------------------------
&FUN_ACTION_PASS FS3Combat Action Commands=switch(0,u(fun_can_act,%0),ansi(hr,%0 is either KO'd or not a combatant.),You set [switch(%N,%0,your,%0's)] action.[u(%q0/FUN_SET_ACTION,%0,pass,,)])


@@ ---------------   Reload -----------------
@@ Reload has no options or target.  You don't need to reload your gun if the ammo stat is '0'.
@@ Although it doesn't quite make sense to let them reload a full clip, we don't care and it could be used to simlulate unjamming
@@ a weapon or something.

&CMD-+COMBAT-RELOAD FS3Combat Action Commands=$+combat/reload:@pemit %#=[ansi(h,<COMBAT>)] [u(FUN_ACTION_RELOAD,%N)]

&CMD-+COMBAT-RELOAD-PERSON FS3Combat Action Commands=$+combat/reload *:@pemit %#=[ansi(h,<COMBAT>)] [u(FUN_ACTION_RELOAD,%0)]

@@ --------------------------
@@ FUN_ACTION_RELOAD
@@ Registers a reload action.
@@ %0 = actor name
@@ --------------------------
&FUN_ACTION_RELOAD FS3Combat Action Commands=switch(0,u(fun_can_act,%0),ansi(hr,%0 is either KO'd or not a combatant.),u(%q0/fun_weaponstat,%0,ammo),ansi(hr,%0's weapon doesn't need to be reloaded.),You set [switch(%N,%0,your,%0's)] action.[u(%q0/FUN_SET_ACTION,%0,reload,,)])


@@ ---------------   Escape -----------------
@@ Reload has no options.  The target is automatically the person who's subdued you.  Obviously you must first be
@@ subdued.

&CMD-+COMBAT-ESCAPE FS3Combat Action Commands=$+combat/escape:@pemit %#=[ansi(h,<COMBAT>)] [u(FUN_ACTION_ESCAPE,%N)]

&CMD-+COMBAT-ESCAPE-PERSON FS3Combat Action Commands=$+combat/escape *:@pemit %#=[ansi(h,<COMBAT>)] [u(FUN_ACTION_ESCAPE,%0)]

@@ --------------------------
@@ FUN_ACTION_ESCAPE
@@ Registers an escape action.
@@ %0 = actor name
@@ --------------------------
&FUN_ACTION_ESCAPE FS3Combat Action Commands=switch(0,u(fun_can_act,%0),ansi(hr,%0 is either KO'd or not a combatant.),t(u(%q0/fun_combatstat,%0,subduedby)),ansi(hr,%0 is not subdued.),You set [switch(%N,%0,your,%0's)] action.[u(%q0/FUN_SET_ACTION,%0,escape,u(%q0/fun_combatstat,%0,subduedby),)])


@@ ---------------   Subdue -----------------
@@ Subdue has a target and no options.  You must have a melee weapon.

&CMD-+COMBAT-SUBDUE FS3Combat Action Commands=$+combat/subdue *:@pemit %#=[ansi(h,<COMBAT>)] [switch(%0,*=*,u(FUN_ACTION_SUBDUE,before(%0,=),after(%0,=)),u(FUN_ACTION_SUBDUE,%N,%0))]

@@ --------------------------
@@ FUN_ACTION_SUBDUE
@@ Registers a subdue action.
@@ %0 = actor name
@@ %1 = target name
@@ --------------------------

&FUN_ACTION_SUBDUE FS3Combat Action Commands=switch(0,u(fun_can_act,%0),ansi(hr,%0 is either KO'd or not a combatant.),strmatch(weaponstat(u(%q0/fun_combatstat,%0,weapon),wpntype),melee),ansi(hr,Only melee weapons can subdue.),u(%q0/fun_is_targetable,%1),ansi(hr,%1 is not a valid target.),You set [switch(%N,%0,your,%0's)] action.[u(%q0/FUN_SET_ACTION,%0,subdue,%1,)])



@@ ---------------   Suppress -----------------
@@ Suppress has a target and no options.  
@@ TODO: You can target one person or multiple if you have a full-auto weapon.

&CMD-+COMBAT-SUPPRESS FS3Combat Action Commands=$+combat/suppress *:@pemit %#=[ansi(h,<COMBAT>)] [switch(%0,*=*,u(FUN_ACTION_SUPPRESS,before(%0,=),after(%0,=)),u(FUN_ACTION_SUPPRESS,%N,%0))]

@@ --------------------------
@@ FUN_ACTION_SUPPRESS
@@ Registers a suppress action.
@@ %0 = actor name
@@ %1 = target name
@@ --------------------------
&FUN_ACTION_SUPPRESS FS3Combat Action Commands=switch(0,u(fun_can_act,%0),ansi(hr,%0 is either KO'd or not a combatant.),u(%q0/fun_is_targetable,%1),ansi(hr,%1 is not a valid target.),You set [switch(%N,%0,your,%0's)] action.[u(%q0/FUN_SET_ACTION,%0,suppress,%1,)])


@@ ---------------   Aim -----------------
@@ Aim has a target and no options.  

&CMD-+COMBAT-AIM FS3Combat Action Commands=$+combat/aim *:@pemit %#=[ansi(h,<COMBAT>)] [switch(%0,*=*,u(FUN_ACTION_AIM,before(%0,=),after(%0,=)),u(FUN_ACTION_AIM,%N,%0))]

@@ --------------------------
@@ FUN_ACTION_AIM
@@ Registers an aim action.
@@ %0 = actor name
@@ %1 = target name
@@ --------------------------
&FUN_ACTION_AIM FS3Combat Action Commands=switch(0,u(fun_can_act,%0),ansi(hr,%0 is either KO'd or not a combatant.),u(%q0/fun_is_targetable,%1),ansi(hr,%1 is not a valid target.),u(%q0/FUN_CAN_ATTACK,%0),ansi(hr,That weapon cannot attack.),You set [switch(%N,%0,your,%0's)] action.[u(%q0/FUN_SET_ACTION,%0,aim,%1,)])


@@ ---------------   Explode -----------------
@@ We use the options to store the folks in the three explosive zones: immediate, near, far.

@@ TODO: Explode not done
&CMD-+COMBAT-EXPLODE FS3Combat Action Commands=$+combat/explode*:@pemit %#=Sorry, but Faraday has not implemented explosions yet.

@@ ---------------   Fullauto -----------------
@@ Fullauto has a list of targets and no options.  Weapon must be capable of fullauto fire.

@@ TODO: Fullauto not done
&CMD-+COMBAT-FULLAUTO FS3Combat Action Commands=$+combat/fullauto*:@pemit %#=Sorry, but Faraday has not implemented full auto yet.

@@ ---------------   Attack -----------------
@@ Attack has a target and can also have options.

&CMD-+COMBAT-ATTACK FS3Combat Action Commands=$+combat/ATTACK *:@pemit %#=[ansi(h,<COMBAT>)] [switch(%0,*=*/*,u(FUN_ACTION_ATTACK,before(%0,=),before(after(%0,=),/),after(after(%0,=),/)),*=*,u(FUN_ACTION_ATTACK,before(%0,=),after(%0,=),),*/*,u(FUN_ACTION_ATTACK,%N,%0,%1),u(FUN_ACTION_ATTACK,%N,%0,))]

@@ --------------------------
@@ FUN_ACTION_ATTACK
@@ Registers an attack action.
@@ %0 = actor name
@@ %1 = target name
@@ %2 = options list (may be blank)
@@ TODO: Allow options
@@ --------------------------
&FUN_ACTION_ATTACK FS3Combat Action Commands=switch(0,u(fun_can_act,%0),ansi(hr,%0 is either KO'd or not a combatant.),u(%q0/fun_is_targetable,%1),ansi(hr,%1 is not a valid target.),u(%q0/FUN_CAN_ATTACK,%0),ansi(hr,That weapon cannot attack.),eq(words(%2,1)),ansi(hr,Attack options are not yet supported.  Sorry.),words(u(%q0/fun_combatstat,%0,weapon)),ansi(hr,You don't have a weapon!),You set [switch(%N,%0,your,%0's)] action.[u(%q0/FUN_SET_ACTION,%0,attack,%1,%2)])




@@ ================================================================================================================
@@ ---------------   Prep -----------------
@@ ================================================================================================================


@@ ---------------   Type -----------------
@@ Changing types has to reinitialize their combat stats.

&CMD-+COMBAT-TYPE FS3Combat Action Commands=$+combat/type *:@pemit %#=[ansi(h,<COMBAT>)] [switch(%0,*=*,u(FUN_PREP_TYPE,before(%0,=),before(after(%0,=),/),after(after(%0,=),/)),u(FUN_PREP_TYPE,%N,before(%0,/),after(%0,/)))]

@@ --------------------------
@@ FUN_PREP_TYPE
@@ Changes type.
@@ %0 = name
@@ %1 = type
@@ %2 = vehicle
@@ Uses %qv for temp vehicle stuff
@@ --------------------------

&FUN_PREP_TYPE FS3Combat Action Commands=[switch(0,u(fun_can_act,%0),ansi(hr,%0 is either KO'd or not a combatant.  If you are an observer you must leave the combat and rejoin.),match(v(types),%1),ansi(hr,That is not a valid type.),[setq(v,u(FUN_JOIN_VEHICLE_STUFF,%1,%2))][eq(%qv,1)],after(%qv,|),[switch(%N,%0,You change your type.,You change %0's type.)]%R< Weapon set to: [u(fun_default_weapon,%1,%2)][u(%q0/fun_init_combatstat,%0,%1,%2,u(fun_default_weapon,%1,%2))][u(%q0/fun_combat_msg,[prettify(%0)] has changed type to %1[switch(t(%2),1,%Bin [prettify(%2)])].[u(fun_add_id,%0)])])]

@@ ---------------   Weapon -----------------
@@ Warn them if they pick an invalid vehicle weapon but don't restrict it.  This allows for special cases like a rifleman poking his
@@ gun out the side of an APC or a plane outfitted with unusual armament.

&CMD-+COMBAT-WEAPON FS3Combat Action Commands=$+combat/weapon *:@pemit %#=[ansi(h,<COMBAT>)] [switch(%0,*=*,u(FUN_PREP_WEAPON,before(%0,=),after(%0,=)),u(FUN_PREP_WEAPON,%N,%0))]

@@ --------------------------
@@ FUN_PREP_WEAPON
@@ %0 = name
@@ %1 = weapon
@@ --------------------------

&FUN_PREP_WEAPON FS3Combat Action Commands=[switch(0,u(fun_can_act,%0),ansi(hr,%0 is either KO'd or not a combatant.),match(weapons(),%1),ansi(hr,That is not a valid weapon.),[switch(%N,%0,You change your weapon.,You change %0's weapon.)][switch(1,and(u(%q0/FUN_IS_IN_VEHICLE,%0),not(match(u(%q0/fun_vehiclestat,%0,weapons),%1))),ansi(hm,%R< %1 is not a normal weapon for %0's vehicle.  Please make sure it makes sense ICly.))][u(%q0/fun_mod_combatstat,%0,weapon,%1)][u(%q0/fun_combat_msg,[prettify(%0)] has changed weapons to %1.[u(fun_add_id,%0)])])]

@@ ---------------   Stance -----------------

&CMD-+COMBAT-STANCE FS3Combat Action Commands=$+combat/stance *:@pemit %#=[ansi(h,<COMBAT>)] [switch(%0,*=*,u(FUN_PREP_STANCE,before(%0,=),after(%0,=)),u(FUN_PREP_STANCE,%N,%0))]

@@ --------------------------
@@ FUN_PREP_STANCE
@@ %0 = name
@@ %1 = stance
@@ --------------------------

&FUN_PREP_STANCE FS3Combat Action Commands=[switch(0,u(fun_can_act,%0),ansi(hr,%0 is either KO'd or not a combatant.),match(v(stances),%1),ansi(hr,That is not a valid stance.),match(soldier pilot,u(%q0/fun_combatstat,%0,type)),ansi(hr,Only soldiers and pilots may change stances.),[switch(%N,%0,You change your stance.,You change %0's stance.)][u(%q0/fun_mod_combatstat,%0,stance,lcstr(%1))][u(%q0/fun_combat_msg,[prettify(%0)] has changed stance to %1.[u(fun_add_id,%0)])])]



&TYPES FS3Combat Action Commands=soldier pilot passenger observer npcmaster
&STANCES FS3Combat Action Commands=normal banzai evade cautious cover outofsight



@STARTUP FS3Combat Action Commands=@set me=!no_command


@create FS3Combat Preferences
@set FS3Combat Preferences = !NO_COMMAND
@set FS3Combat Preferences = WIZARD

&HERO_FACTOR FS3Combat Preferences=0
&DEFAULT_RIFLE FS3Combat Preferences=Rifle

@STARTUP FS3Combat Preferences=@set me=!no_command;@fun herofactor=me,hero_factor;@fun defaultrifle=me,default_rifle
