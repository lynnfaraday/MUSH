@@ Faraday's FS3 System
@@ Author:  Linda O'Meara
@@ Website: http://code.google.com/p/faramushcode/
@@
@@ Visit the website for documentation, installation instructions, bug reports,
@@ and more.

@set me=quiet

@pemit/silent %#=[ansi(hg,Installing FS3 Skills module.  Please wait...)]%R

@pemit/silent %#=%R%R[ansi(hg,Creating objects.)]

think install_create(FS3_STORAGE,FS3 Object Storage,0,1,5.0,Stores FS3 objects.)
think install_create(FS3SKILL_CMD,FS3 Skill System,1,0,5.0,These are the commands for the FS3 skills system.)

think install_create(FS3SKILL_HELP,FS3 Skill Help,0,1,5.0,FS3 Help Files.  See the FS3 Skill System object for important copyright/license information.,FS3_STORAGE)
think install_create(FS3SKILL_FUN,FS3 Skill Functions,1,1,5.0,Stores FS3 skill functions.    See the FS3 Skill System object for important copyright/license information.,FS3_STORAGE)
think install_create(FS3SKILL_DB,FS3 Skill Data,1,1,5.0,Stores FS3 skill data.  See the FS3 Skill System object for important copyright/license information.,FS3_STORAGE)

think install_create(FS3SKILL_CGINFO,Chargen Info Functions,1,1,5.0,Functions related to chargen but also useful outside of it.,FS3_STORAGE)
think install_create(FS3SKILL_CGDEMO,Demographic Commands,1,0,5.0,Chargen Demographic Commands,CREATOR)
think install_create(FS3SKILL_CGABILITY,FS3 Chargen Commands,1,0,5.0,FS3 Chargen Commands.  See the FS3 Skill System object for important copyright/license information.,CREATOR)
think install_create(FS3SKILL_CGEXIT,Chargen Exit Parent,0,0,5.0,Chargen exit parent.,FS3_STORAGE)

@pemit/silent %#=%R%R[ansi(hg,Setting up object attributes.)]


&CREDITS FS3 Object Storage=Version [v(version)]%R%RCoded by Faraday ~ http://www.wordsmyth.org/faraday%R%RThe FS3 system is copyright 2007-2008 by Linda Naughton (aka Faraday). All rights reserved. You may reproduce and distribute part or all of these rules and create derivative works (games using FS3) providing a) You don't make any money from it, and b) You include this FS3 copyright and license notice in the distribution.


&CMD-+LIMITS FS3 Skill System=$+limits:think pemit(%#,[line()]%R[ansi(h,Ability Limits in Chargen)]%R%RYou can't spend more than [xget(#FS3SKILL_DB,max_points_attributes)] points on attributes%RAll attributes must be at least level 1.%RYou can't spend more than [xget(#FS3SKILL_DB,max_points_action)] points on action skills.%RYou must have [xget(#FS3SKILL_DB,min_quirks)]-[xget(#FS3SKILL_DB,max_quirks)] Quirks.%RYou must have at least [xget(#FS3SKILL_DB,min_bgskills)] different background skills.%RYou must be a native speaker in at least one language.%R%R[ansi(h,Ability Limits For Chargen and XP)]%R%RYou can't have more than [xget(#FS3SKILL_DB,max_high_abilities)] abilities \(including attributes\) above level [xget(#FS3SKILL_DB,high_ability_level)].%R[line()])
&CMD-+QUIRKS FS3 Skill System=$+quirks:@fo %#=+abilities2
&CMD-+LANGUAGES FS3 Skill System=$+languages:@fo %#=+abilities2
&CMD-+ABILITIES FS3 Skill System=$+abilities:think pemit(%#,[line()]%R[ansi(hg,Attributes)][iter(lattr(#FS3SKILL_DB/attribute*),%R[ljust(prettify(lcstr(after(##,_))),20)][u(#FS3SKILL_DB/##)])]%R%R[ansi(hr,Action Skills)][iter(lattr(#FS3SKILL_DB/actionskill*),%R[ljust(prettify(lcstr(after(##,_))),20)][u(#FS3SKILL_DB/##)])]%R%R[ansi(h,Continued in +abilities2)]%R[line()]
&CMD-+ABILITIES2 FS3 Skill System=$+abilities2:think pemit(%#,[line()]%RBackground Skills, Language Skills and Quirks are all freeform, meaning you can make up anything you want.  The lists below are just some ideas.%R%R[ansi(hy,Sample Background Skills)]%R[iter(xget(#FS3SKILL_DB,background_skills),##,|,%R)]%R%R[ansi(hb,Sample Language Skills)]%R[iter(xget(#FS3SKILL_DB,language_skills),##,|,%R)]%R%R[ansi(hm,Sample Quirks)]%R[table(xget(#FS3SKILL_DB,quirks),39,78,|,)]%R[line()]
&CMD-+ATTRIBUTES FS3 Skill System=$+attributes:@fo %#=+abilities
&REM-+ROLL FS3 Skill System= %q0 = parsed roll params  %R %q1=ability %R %q2=ruling attr or blank %R  %q3=modifier or 0 %r %q4=roll result
&CMD-+ROLL FS3 Skill System=$+roll *:think switch(%0,* vs *,,[setq(0,u(#FS3SKILL_FUN/fun_parse_roll_params,%0))][setq(1,extract(%q0,1,1,|))][setq(2,extract(%q0,2,1,|))][setq(3,extract(%q0,3,1,|))][setq(4,roll_ability(%#,%q1,%q3,%q2))][switch(1,and(isnum(%q1),not(u(#FS3SKILL_FUN/FUN_IS_VALID_RATING,%q1))),pemit(%#,ansi(hr,%q1 is not a valid ability rating number.)),and(t(%q2),not(u(#FS3SKILL_FUN/FUN_IS_VALID_ATTRIBUTE,%q2))),pemit(%#,ansi(hr,%q2 is not an attribute.)),and(t(%q3),not(isnum(%q3))),pemit(%#,ansi(hr,%q3 is not a valid modifier.)),u(#FS3SKILL_FUN/fun_notify_roll_results,%l,[ansi(hy,<FS3>)] %N rolls [prettify(%0)]: [u(#FS3SKILL_FUN/fun_pretty_success_level,%q4)].))])
&CMD-+ROLL-CASUAL FS3 Skill System=$+roll/casual *:think [setq(0,u(#FS3SKILL_FUN/fun_parse_roll_params,%0))][setq(1,extract(%q0,1,1,|))][setq(2,extract(%q0,2,1,|))[setq(3,extract(%q0,3,1,|))][setq(4,roll_ability(%#,%q1,add(%q3,20),%q2))][switch(1,and(isnum(%q1),not(u(#FS3SKILL_FUN/FUN_IS_VALID_RATING,%q1))),pemit(%#,ansi(hr,%q1 is not a valid ability rating number.)),and(t(%q2),not(u(#FS3SKILL_FUN/FUN_IS_VALID_ATTRIBUTE,%q2))),pemit(%#,ansi(hr,%q2 is not an attribute.)),and(t(%q3),not(isnum(%q3))),pemit(%#,ansi(hr,%q3 is not a valid modifier.)),u(#FS3SKILL_FUN/fun_notify_roll_results,%l,[ansi(hy,<FS3>)] %N rolls [prettify(%0)] [ansi(hy,*CASUAL*)]: [u(#FS3SKILL_FUN/fun_pretty_success_level,%q4)].))])
&REM_+ROLL_OPPOSED FS3 Skill System=%q0 = parsed roll params A  %R%T %q1 = A ability %R%T  %q2 = A ruling attr or blank   %R%T   %q3 = A modifier  %R%T   %q4 = A result  %R%R   %q5 = B parsed params %R%T %q6 = B ability %R%T  %q7 = B ruling attr or blank   %R%T   %q8 = B modifier  %R%T   %q9 = B result  %R%R   %qa = Opposed result text
&CMD-+ROLL-OPPOSED FS3 Skill System=$+roll *=* vs *=*:think [setq(0,u(#FS3SKILL_FUN/fun_parse_roll_params,%1))][setq(1,extract(%q0,1,1,|))][setq(2,extract(%q0,2,1,|))][setq(3,extract(%q0,3,1,|))][setq(4,roll_ability(pmatch(%0),%q1,%q3,%q2))][setq(5,u(#FS3SKILL_FUN/fun_parse_roll_params,%3))][setq(6,extract(%q5,1,1,|))][setq(7,extract(%q5,2,1,|))][setq(8,extract(%q5,3,1,|))][setq(9,roll_ability(pmatch(%2),%q6,%q8,%q7))][setq(a,u(#FS3SKILL_FUN/FUN_GET_OPPOSED_RESULT,%q4,%q9))][switch(1,and(isnum(%q1),not(u(#FS3SKILL_FUN/FUN_IS_VALID_RATING,%q1))),pemit(%#,ansi(hr,%q1 is not a valid ability rating number.)),and(isnum(%q6),not(u(#FS3SKILL_FUN/FUN_IS_VALID_RATING,%q6))),pemit(%#,ansi(hr,%q6 is not a valid ability rating number.)),and(t(%q2),not(u(#FS3SKILL_FUN/FUN_IS_VALID_ATTRIBUTE,%q2))),pemit(%#,ansi(hr,%q2 is not an attribute.)),and(t(%q3),not(isnum(%q3))),pemit(%#,ansi(hr,%q3 is not a valid modifier.)),and(t(%q7),not(u(#FS3SKILL_FUN/FUN_IS_VALID_ATTRIBUTE,%q7))),pemit(%#,ansi(hr,%q7 is not an attribute.)),and(t(%q8),not(isnum(%q8))),pemit(%#,ansi(hr,%q8 is not a valid modifier.)),u(#FS3SKILL_FUN/fun_notify_roll_results,%l,[ansi(hy,<FS3>)] Opposed Roll -- [capstr(%0)]:[prettify(%1)] vs [capstr(%2)]:[prettify(%3)]%R<%T[capstr(%0)]: [u(#FS3SKILL_FUN/FUN_PRETTY_SUCCESS_LEVEL,%q4)][space(10)][capstr(%2)]: [u(#FS3SKILL_FUN/FUN_PRETTY_SUCCESS_LEVEL,%q9)]%R<%T%TNet Result: [u(#FS3SKILL_FUN/FUN_PRETTY_OPPOSED_RESULT,[capstr(%0)],[capstr(%2)],%qa)])]
&CMD-+RULINGATTR FS3 Skill System=$+rulingattr:think pemit(%#,[line()]%R[ansi(h,Ruling Attributes)]%R%R[ansi(h,Action Skills)]%R[table(iter(lattr(#FS3SKILL_DB/actionskill_*),[prettify(lcstr(after(##,_)))]:[prettify(u(#FS3SKILL_FUN/fun_ruling_attr,%#,[after(##,_)]))],,|),25,78,|)]%R%R[ansi(h,Background Skills)] (May be customized using the +rulingattr command.)%R[table(iter(xget(%#,bgskills),[prettify(before(##,:))]:[prettify(u(#FS3SKILL_FUN/fun_ruling_attr,%#,before(##,:)))],,|),25,78,|)]%R%R[ansi(h,Language Skills)]%RAll use [xget(#FS3SKILL_DB,ruling_attr_bg)]%R[line()]
&CMD-+RULINGATTR-SET FS3 Skill System=$+rulingattr *=*:think pemit(%#,switch(0,match(u(#FS3SKILL_FUN/fun_ability_type,%#,%0),background),ansi(hr,You may only set ruling attributes for background skills.),ability_level(%#,%0),ansi(hr,You don't have that skill.),u(#FS3SKILL_FUN/fun_is_valid_attribute,%1),ansi(hr,That is not a valid attribute.),ansi(hg,You set the ruling attribute for [prettify(%0)] to [prettify(%1)].)[setq(0,[unprettify(%0)]:[unprettify(%1)])][switch(match(xget(%#,ruling_attr),[unprettify(%0)]:*),0,append(%#,ruling_attr,%q0),set(%#,ruling_attr:[find_and_replace(xget(%#,ruling_attr),[unprettify(%0)]:*,%q0)]))]))
&CMD-+SHEET FS3 Skill System=$+sheet*:think pemit(%#,switch(%0,* *,,u(#FS3SKILL_FUN/fun_display_sheet,%#,%0)))
&CMD-+SHEET-OTHER FS3 Skill System=$+sheet* *:think pemit(%#,switch(0,or(isstaff(%#),xget(#FS3SKILL_DB,PLAYER_VISIBLE_SHEETS)),ansi(hr,That command is restricted to staff.),t(pmatch(%1)),ansi(hr,That is not a valid player.),u(#FS3SKILL_FUN/fun_display_sheet,pmatch(%1),%0)))
&CMD-+SKILLS FS3 Skill System=$+skills:@fo %#=+abilities
&CMD-+SKILLMOD FS3 Skill System=$+skillmod *=*/*/*:think pemit(%#,switch(0,isstaff(%#),ansi(hr,This command is for staff only.),[setq(0,u(#FS3SKILL_FUN/FUN_SET_ABILITY,pmatch(%0),%1,%2,%3))]switch(%q0,0*,ansi(hr,after(%q0,|)),ansi(hg,You modify %0's %2 %1 ability by %3.  It is now a [ability_level(%0,%2)].))
@startup FS3 Skill System=@set me=!no_command
&CREDITS FS3 Skill System=Version [v(version)]%R%RCoded by Faraday ~ http://www.wordsmyth.org/faraday%R%RThe FS3 system is copyright 2007-2008 by Linda Naughton (aka Faraday). All rights reserved. You may reproduce and distribute part or all of these rules and create derivative works (games using FS3) providing a) You don't make any money from it, and b) You include this FS3 copyright and license notice in the distribution.


@startup FS3 Skill Functions=@function ability_level=me,fun_ability_level,2,2,admin;@function roll_ability=me/fun_roll_ability;@function opposed_result=me/fun_get_opposed_result;@function pretty_opposed_result=me/fun_pretty_opposed_result
&REM_ABILITY_LEVEL FS3 Skill Functions=%0 = player, %1=ability.  returns level, default 5
&FUN_ABILITY_LEVEL FS3 Skill Functions=localize([switch(1,isnum(%1),%1,not(pmatch(%0)),5,[setq(0,0)][setq(1,unprettify(%1))][iter(attributes actionskills langskills bgskills,switch(t(grab(xget(%0,##),%q1:*)),1,setq(0,after(grab(xget(%0,##),%q1:*),:))),,)]%q0)])

&FUN_ABILITY_TYPE FS3 Skill Functions=localize([setq(0,unprettify(%1))][switch(1,hasattr(#FS3SKILL_DB,attribute_%q0),attribute,hasattr(#FS3SKILL_DB,actionskill_%q0),action,background)])
&FUN_ATTRIBUTES FS3 Skill Functions=iter(lattr(#FS3SKILL_DB/ATTRIBUTE_*),after(##,_))

&FUN_DISPLAY_SHEET FS3 Skill Functions=localize([setq(0,switch(%1,,0,%1))]switch(hasattr(#FS3SKILL_DB,FUN_DISPLAY_SHEET_PAGE%q0),0,ansi(hr,That is not a valid character sheet page.),u(#FS3SKILL_DB/FUN_DISPLAY_SHEET_PAGE%q0,%0)))
&FUN_DISPLAY_ATTRS FS3 Skill Functions=[line_with_text(ansi(hw,Attributes))]%R[table(iter(u(FUN_ATTRIBUTES),[padstr(ansi(h,[prettify(lcstr(##))]:),15)]%B[u(#FS3SKILL_FUN/fun_print_level,ability_level(%0,##),attribute)],,|),37,78,|)]
&FUN_DISPLAY_ACTSKILLS FS3 Skill Functions=[line_with_text(ansi(hw,Action Skills))]%R[table(iter(sort(xget(%0,actionskills)),[padstr(ansi(h,[prettify(before(##,:))]:),15)]%B[u(#FS3SKILL_FUN/fun_print_level,after(##,:),skill)],,|),37,78,|)]
&FUN_DISPLAY_BGSKILLS FS3 Skill Functions=[line_with_text(ansi(hw,Background Skills))]%R[table(iter(sort(xget(%0,bgskills)),[padstr(ansi(h,[prettify(before(##,:))]:),15)]%B[u(#FS3SKILL_FUN/fun_print_level,after(##,:),skill)],,|),37,78,|)]
&FUN_DISPLAY_LANGSKILLS FS3 Skill Functions=[line_with_text(ansi(hw,Language Skills))]%R[table(iter(sort(xget(%0,langskills)),[padstr(ansi(h,[prettify(before(##,:))]:),15)]%B[u(#FS3SKILL_FUN/fun_print_level,after(##,:),skill)],,|),37,78,|)]
&FUN_DISPLAY_QUIRKS FS3 Skill Functions=[line_with_text(ansi(hw,Quirks))]%R[table(sort(xget(%0,quirks),a,|),37,78,|)]

&FUN_IS_VALID_ACTION FS3 Skill Functions=hasattr(#FS3SKILL_DB,actionskill_[unprettify(%0)])
&FUN_IS_VALID_ATTRIBUTE FS3 Skill Functions=hasattr(#FS3SKILL_DB,attribute_[unprettify(%0)])
&FUN_IS_VALID_BACKGROUND FS3 Skill Functions=1
&FUN_IS_VALID_LANGUAGE FS3 Skill Functions=1
&FUN_IS_VALID_RATING FS3 Skill Functions=and(isnum(%0),lte(%0,12),gte(%0,1))

&FUN_LEVEL_BRACKET FS3 Skill Functions=switch(%1,attribute,switch(%0,>9,Exceptional,>6,Good,>3,Average,Poor),switch(%0,>9,Expert,>6,Veteran,>3,Professional,Rookie))
&FUN_LEVEL_BRACKET_ABBREV FS3 Skill Functions=switch(%1,attribute,switch(%0,>9,Exc,>6,Good,>3,Avg,Poor),switch(%0,>9,Exp,>6,Vet,>3,Prof,Rook))
&FUN_PRETTY_SUCCESS_LEVEL FS3 Skill Functions=localize([setq(0,switch(%0,-2,hR|Terrible Failure,-1,hr|Bad Failure,0,r|Failure,1,g|Success,2,hg|Good Success,3,hG|Great Success))][ansi(before(%q0,|),after(%q0,|))])
&FUN_PRINT_LEVEL FS3 Skill Functions=switch(%0,0,,[ljust([u(fun_level_bracket_abbrev,%0,%1)],4)] [iter(lnum(1,%0),[ansi(switch(#@,<4,g,<7,y,<10,r,b),@)],,)])
&FUN_PRINT_LEVEL_ALT FS3 Skill Functions=[ljust(%0,2)] \([u(fun_level_bracket,%0,%1)]\)
&FUN_NOTIFY_ROLL_RESULTS FS3 Skill Functions=[remit(%0,%1)][cemit(FS3,[ansi(hc,<FS3>)] %1

&REM_PARSE_ROLL_PARAMS FS3 Skill Functions=ability|ruling attr or empty|modifier or 0
&FUN_PARSE_ROLL_PARAMS FS3 Skill Functions=localize([switch(%0,*/*+*,[setq(0,[before(%0,/)])][setq(1,[before(after(%0,/),+)])][setq(2,[after(%0,+)])],*/*-*,[setq(0,[before(%0,/)])][setq(1,[before(after(%0,/),-)])][setq(2,sub(0,[after(%0,-)]))],*+*,[setq(0,[before(%0,+)])][setq(1,)][setq(2,[after(%0,+)])],*-*,[setq(0,[before(%0,-)])][setq(1,)][setq(2,sub(0,[after(%0,-)]))],*/*,[setq(0,[before(%0,/)])][setq(1,[after(%0,/)])][setq(2,0)],[setq(0,%0)][setq(1,)][setq(2,0)])][unprettify(%q0)]|[unprettify(%q1)]|[trim(%q2)])

&REM_ROLL_ABILITY FS3 Skill Functions=%0 = player DB, %1 = ability, %2 = modifier, %3 = attribute.  Returns Succ Level %R%R  %q0 = ruling attr mod   %q1 = total mod
&FUN_ROLL_ABILITY FS3 Skill Functions=localize([setq(0,u(fun_ruling_attr_mod,%0,%1,%3))][setq(1,add(%2,%q0))][extract(v(ROLLRESULTS_[ability_level(%0,%1)]),u(FUN_ROLL_DICE,%q1),1)])

&REM_RULING_ATTR_MOD FS3 Skill Functions=%0 = player DB, %1 = ability, %2 = attr override (opt)
&FUN_RULING_ATTR FS3 Skill Functions=localize([setq(0,unprettify(%1))]switch(u(fun_ability_type,%0,%1),attribute,0,action,after(grab(xget(#FS3SKILL_DB,ruling_attr),%q0:*),:),switch(match(xget(%0,ruling_attr),%q0:*),0,xget(#FS3SKILL_DB,ruling_attr_bg),after(grab(xget(%0,ruling_attr),%q0:*),:))))
&FUN_RULING_ATTR_MOD FS3 Skill Functions=localize([setq(0,u(fun_ruling_attr,%0,%1))][switch(0,%q0,0,mul(sub(ability_level(%0,switch(t(%q2),1,%q2,%q0)),5),2))])
 
&REM_GET_OPPOSED_RESULT FS3 Skill Functions=%0 = A result, %1 = B result, Returns AB AL D BL BB F for "A wins big" "A wins little" "Draw" "Fail" etc.
&FUN_GET_OPPOSED_RESULT FS3 Skill Functions=switch(%0|%1,-2|-2,F,-1|-2,F,0|-2,F,1|-2,AB,2|-2,AB,3|-2,AB,-2|-1,F,-1|-1,F,0|-1,F,1|-1,AL,2|-1,AB,3|-1,AB,-2|0,F,-1|0,F,0|0,F,1|0,AL,2|0,AL,3|0,AB,-2|1,BB,-1|1,BL,0|1,BL,1|1,D,2|1,AL,3|1,AL,-2|2,BB,-1|2,BB,0|2,BL,1|2,BL,2|2,D,3|2,AL,-2|3,BB,-1|3,BB,0|3,BB,1|3,BL,2|3,BL,3|3,D)

&REM_PRETTY_OPPOSED_RESULT FS3 Skill Functions=%0 = A name, %1 = B name, %2 = result
&FUN_PRETTY_OPPOSED_RESULT FS3 Skill Functions=switch(%2,AB,[ansi(hc,%0 wins big.)],AL,[ansi(c,%0 wins.)],BB,[ansi(hm,%1 wins big.)],BL,[ansi(m,%1 wins.)],D,[ansi(hy,DRAW)],F,[ansi(hr,Both Fail.)])

&REM_ROLL_DICE FS3 Skill Functions=%0 = modifier
&FUN_ROLL_DICE FS3 Skill Functions=localize([setq(0,sub(die(2,51),1))][setq(1,switch(%q0,1,1,add(%q0,%0)))][max(min(%q1,100),1)])

&FUN_HAS_QUIRK FS3 Skill Functions=localize([setq(0,xget(%0,quirks))][t(match(ucstr(%q0),ucstr(squish(%1)),|))])

&REM_SET_ABILITY FS3 Skill Functions=%0 = player, %1 = type, %2 = ability, %3 = +/- to rating  // %q0 = oldLevel %q1= newLevel, %q2 = dataAttr, %q3 = validity name, q4 = unpretty ability name // Returns 1 or 0|Error message
&FUN_SET_ABILITY FS3 Skill Functions=localize([setq(0,ability_level(%0,%2))][setq(1,add(%q0,%3))][setq(2,switch(%1,attribute,attributes,attr,attributes,action,actionskills,act,actionskills,language,langskills,lang,langskills,bg,bgskills,background,bgskills))][setq(3,switch(%1,attribute,attribute,attr,attribute,action,action,act,action,language,language,lang,language,bg,background,background,background))][setq(4,unprettify(%2))][switch(0,t(pmatch(%0)),0|That is not a valid player.,match(v(ability_types),%1),0|That is not a valid type.  Use one of these: [v(ability_types)].,u(#FS3SKILL_FUN/fun_is_valid_%q3,%q4),0|That is not a valid ability name for a %q3 ability.,gte(%q1,0),0|You cannot lower an ability below 0.,lte(%q1,12),0|You cannot raise that ability above 12.,not(and(match(%q2,attributes),eq(%q1,0))),0|You cannot lower an attribute below 1.,not(and(u(#FS3SKILL_FUN/FUN_IS_VALID_ATTRIBUTE,%q4),not(match(%q2,attributes)))),0|%2 is an attribute.  You can't take it as a skill.,not(and(u(#FS3SKILL_FUN/FUN_IS_VALID_ACTION,%q4),not(match(%q2,actionskills)))),0|%2 is an action skill.  You can't take it as a %q3.,not(and(t(grab(xget(%0,bgskills),%q4:*)),match(%q2,langskills))),0|You already have %2 as a background skill.  You can't take it as a language also.,not(and(t(grab(xget(%0,langskills),%q4:*)),match(%q2,bgskills))),0|You already have %2 as a language skill.  You can't take it as a background also.,1[switch(%q1,0,set(%0,%q2:[squish(find_and_replace(xget(%0,%q2),%q4:*,))]),switch(t(grab(xget(%0,%q2),%q4:*)),1,set(%0,%q2:[find_and_replace(xget(%0,%q2),%q4:*,%q4:%q1)]),set(%0,%q2:[squish([xget(%0,%q2)]%B%q4:%q1)])))])
&ABILITY_TYPES FS3 Skill Functions=attribute action background language attr act prof bg lang

&FUN_HIGH_ABILITIES FS3 Skill Fun=localize([setq(0,0)][iter(attributes actionskills langskills bgskills,iter(xget(%0,##),switch(gte(after(itext(0),:),[xget(#FS3SKILL_DB,HIGH_ABILITY_LEVEL)]),1,setq(0,inc(%q0))),,),,)]%q0)

&ROLLRESULTS_0 FS3 Skill Functions=-2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2
&ROLLRESULTS_1 FS3 Skill Functions=-2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3
&ROLLRESULTS_10 FS3 Skill Functions=-1 0 0 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
&ROLLRESULTS_11 FS3 Skill Functions=-1 0 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
&ROLLRESULTS_12 FS3 Skill Functions=0 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
&ROLLRESULTS_2 FS3 Skill Functions=-2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3
&ROLLRESULTS_3 FS3 Skill Functions=-2 -2 -2 -2 -2 -2 -2 -2 -2 -2 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3
&ROLLRESULTS_4 FS3 Skill Functions=-2 -2 -2 -2 -2 -2 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3
&ROLLRESULTS_5 FS3 Skill Functions=-2 -2 -2 -2 -2 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3
&ROLLRESULTS_6 FS3 Skill Functions=-2 -2 -2 -2 -2 -1 -1 -1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 3 3
&ROLLRESULTS_7 FS3 Skill Functions=-2 -2 -1 -1 -1 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
&ROLLRESULTS_8 FS3 Skill Functions=-2 -2 -1 -1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
&ROLLRESULTS_9 FS3 Skill Functions=-2 -1 -1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3

&HATTR_XP FS3 Skill Functions=0
&HATTR_ACTIONSKILLS FS3 Skill Functions=
&HATTR_BGSKILLS FS3 Skill Functions=
&HATTR_LANGSKILLS FS3 Skill Functions=
&HATTR_ATTRIBUTES FS3 Skill Functions=
&HATTR_QUIRKS FS3 Skill Functions=
&HATTR_RULING_ATTR FS3 Skill Functions=
&HATTR_CG_ERRORS FS3 Skill Functions=

&HELP_+ROLL FS3 Skill Help=This game uses the [ansi(hg,FS3 Skills System)] by Faraday.%R%R[ansi(h,+roll <ability\[/attr\]\[+mod\]>)] - Simple ability roll.%R[ansi(h,+roll/casual <ability\[/attr\]\[+mod\]>)] - Casual roll, for UN-stressful situations.%R[ansi(h,+roll <charA>=<ability\[/attr\]\[+mod\]> vs <charB>=<ability\[/attr\]\[+mod\]>)]%R%TMakes an opposed roll.%R%R[ansi(g,Ability)] may be a skill name or number.%R[ansi(g,Attr)] is optional, to use a different ruling attribute than the default.%R[ansi(g,Mod)] is also optional, to apply a + or - percentage modifier to the roll.%R%RFor more information, see also: [ansi(h,+help FS3)]
&HELP_+SHEET FS3 Skill Help=This game uses the [ansi(hg,FS3 Skills System)] by Faraday.%R%R[ansi(h,+sheet)] - View your character sheet.%R[ansi(h,+sheet<#>)] - View additional pages of your +sheet, if available.  (e.g. +sheet2)%R%R[ansi(h,+sheet <character>)] - Views someone else's sheet.%R[ansi(h,+sheet<#> <character>)] - Views additional pages of someone's sheet, if available.%R%RSome games may restrict viewing other characters' sheets to staff only.  Either way, this information should not be used ICly.%R%RFor more information, see also: [ansi(h,+help FS3)].
&MORE_HELP_+ABILITIES FS3 Skill Help=This game uses the [ansi(hg,FS3 Skills System)] by Faraday.%R%RThe [ansi(h,+abilities)] command lists possible Abilities, including Attributes, Action Skills, Background Skills, Language Skills and Quirks.%R%RFor more information, see also: [ansi(h,+help FS3)].
&MORE_HELP_FS3 FS3 Skill Help=This game uses the [ansi(hg,FS3 Skills System)] by Faraday.%R%RHelp Topics%R==========%R[ansi(h,FS3_Abilities)]%TSkills, Attributes and Quirks%R[ansi(h,FS3_Ratings)]%TWhat the numbers mean%R[ansi(h,FS3_Rolls)]%THow skill rolls work%R[ansi(h,FS3_Copyright)]%TCopyright info%R%R%RCommands%R===========%R+abilities%R+roll%R+sheet%R+rulingattr%R%RSee +help <topic> for more info on a given topic.  You can also read all about FS3 on the web at http://wordsmyth.org/aresmush/index.php?title=FS3
&MORE_HELP_FS3_ABILITIES FS3 Skill Help=Each character in FS3 has a number of abilities:%R%R* [ansi(hg,Attributes)] represent natural talent.%R* [ansi(hg,Action Skills)] are those skills relevant to the game's 'action', whatever that might be.%R* [ansi(hg,Background Skills)] are other non-action skills your character may have.%R* [ansi(hg,Language Skills)] are hopefully self-explanatory.%R* [ansi(hg,Quirks)] are little things that make your character unique.%R%RAttributes and Action Skills are limited, so you can only select from a fixed list.  Background Skills, Language Skills and Quirks are freeform, meaning you can pick any one you want.  See [ansi(h,+abilities)] for a list of abilities.%R%RSee also [ansi(h,+help FS3_Ratings)] for info about how abilities are rated.%R%RPlease note that Attributes do not take the place of actual training.  Just because you have a high rating in Creative doesn't mean you can pick up a paintbrush and outdo Picasso. You do not normally roll attributes directly.
&MORE_HELP_FS3_CHARGEN FS3 Skill Help=Generating a character in FS3 is pretty simple. You start with a pool of [ansi(hg,Character Points)]. Each level in an attribute or skill costs 1 point. Quirks are free. For a description of the ratings and what they mean, see [ansi(hg,+help FS3_Ratings)].%R%RThere are a few limits to keep you from being superhuman, but beyond that it's very freeform.  Use the [ansi(h,+limits)] command to see what the limitations are on what you can spend.%R%RYou may not need all of your character points. It is more important to create a balanced character than to dump your points into silly things just to spend them. %R%RYou do not need skill levels in every single thing your character knows how to do. That would be silly. Skill levels reflect things your character has devoted time to learning and practicing. Many things can just be assumed to be 'common knowledge' and not require a specific skill level.
&MORE_HELP_FS3_COPYRIGHT FS3 Skill Help=The FS3 system is copyright 2007-2008 by Linda O'Meara (aka Faraday). All rights reserved. You may reproduce and distribute part or all of these rules and create derivative works (games using FS3) providing a) You don't make any money from it, and b) You include this FS3 copyright and license notice in the distribution.
&MORE_HELP_FS3_QUIRKS FS3 Skill Help=Quirks are little things that make your character unique. Quirks have no coded effects; all effects are at the discretion of the judge (or other players in a consent-based scene).%R%RQuirks just reflect [ansi(h,notable)] qualities of your character. What's notable for one character may not be notable for another, so just because someone picks 'Honest' as a quirk does not mean you have to have that quirk to be honest.%R%RWhy would you want to pick "negative" quirks? Well, first of all - it's fun to play flawed characters. You can get a lot of RP mileage out of them. But also keep in mind that many quirks are two-edged swords. "Stubborn" can work both for you (in the sense of not giving up when the chips are down) or against you (in the sense of not giving up when you really should).
&MORE_HELP_FS3_RATINGS FS3 Skill Help=Skills and Attributes are rated from 1-12 as shown in the table below.  The meaning behind the ratings differs for skills versus attributes.%R%R[ansi(h,Rating%TAttribute%TSkill%T%TLanguage)]%R1-3%TPoor%T%TRookie%T%TTourist/High School%R4-6%TAverage%T%TProfessional%TCompetent%R7-9%TGood%T%TVeteran%T%TNative Speaker%R10-12%TExceptional%TExpert%T%TFluent%R%RYou do not need skill levels in every single thing your character knows how to do. That would be silly. Skill levels reflect things your character has devoted time to learning and practicing. Many things can just be assumed to be 'common knowledge' and not require a specific skill level.
&MORE_HELP_FS3_ROLLS FS3 Skill Help=Abilities can be rolled to determine the outcome of various tasks. There are three types of rolls:%R* [ansi(hg,Standard Rolls)] are your garden-variety skill tests, such as jumping over a chasm, picking a lock, or wrangling a wet cat.%R* [ansi(hg,Casual Rolls)] are for NON-stressful situations, like making a dress,  playing your trumpet in a jam session, or practicing on the firing range.  You have a higher chance of success on a casual roll.%R* [ansi(hg,Opposed Rolls)] are used when two characters are pitted against each other.%R%R[ansi(h,Modifier)]%RYou can add a modifier to the roll when the task is particularly easy or particularly difficult. A standard roll reflects a task that is [ansi(h,routine to a trained professional)]. Example: a doctor removing a gallbladder, a soldier firing at a stationary target at close range, a demo guy setting up a tripwire.  Modifiers are percentages, so a +20 modifier increases your chance of success by 20\%.%R%R[ansi(h,Ruling Attribute)]%REach skill has a 'ruling attribute'. Medicine is ruled by Academic, Repair by Technical, etc. The ruling attribute acts as a modifier to your die result. If for some reason the standard ruling attribute does not apply in a given situation, you can override it using the +roll command.%R%R[ansi(h,Defaulting)]%RYou can roll a skill you don't have, and the system will roll the 'untrained' level (0) with a modifier based on the ruling attribute. Do not substitute an attribute roll for a missing skill (i.e. do not roll Athletics if you don't have Baseball, roll Baseball and the system will know you're defaulting.) %R%RContinued in +help FS3_ROLLS2
&MORE_HELP_FS3_ROLLS2 FS3 Skill Help=The result of a standard roll is a description of how well you did. Possible outcomes are:%RTerrible Failure, Bad Failure, Failure, Success, Good Success, Great Success %R%RIn general, you only need a "Success" to, well, succeed. Good and Great successes just mean you did better than expected - in terms of speed, reliability or quality. Please bear in mind that a Great Success doesn't mean you solved world hunger or created a silk purse out of a sow's ear. That's why it's called Great and not OMG YOU ARE AMAZING. A Terrible Failure is still pretty bad though. %R%ROn opposed rolls, each character gets an individual result and then there is a summary that shows who won overall.  Possible outcomes are:  Character A wins, Character A wins by a lot, Character B wins, Character B wins by a lot, DRAW! (both characters tied), FAIL! (everybody failed)
&MORE_HELP_+RULINGATTR FS3 Skill Help=This game uses the [ansi(hg,FS3 Skills System)] by Faraday.%R%REach ability has a [ansi(h,Ruling Attribute)].  The rating of the ruling attribute influences your chance of success with a skill.  You can see a list of abilities and ruling attrs using the [ansi(h,+rulingattr)] command.%R%RYou can customize the ruling attributes for your individual background skills.  For example, you might set the Music skill to use the Creative attribute. This only applies to background skills.%R%T[ansi(h,+rulingattr <background skill>=<ruling attr>%R%RFor more information, see +help FS3.
&SHELP_SKILLS FS3 Skill Help=+sheet <player>%R+skillmod <player>=<abilityType>/<ability>/<modifier> - modify's an ability rating%R%TabilityType must be one of action, background or language

@describe FS3 Chargen Commands=Commands for setting up abilities in Chargen using the FS3 system.  See the FS3 skills command object for important copyright/license information.
@set FS3 Chargen Commands = DARK
&CMD-+ABILITY FS3 Chargen Commands=$+ability */*=*:think pemit(%#,switch(isnum(%2),0,ansi(hr,That is not a valid rating.),u(fun_set,[trim(%0)],%1,sub(%2,ability_level(%#,%1)))))
&CMD-+ABILITY-ERROR FS3 Chargen Commands=$+ability *=*:think switch(%0,*/*,,[setq(0,u(#FS3SKILL_FUN/FUN_ABILITY_TYPE,%#,%0))]pemit(%#,switch(isnum(%1),0,ansi(hr,That is not a valid rating.),switch(%q0,background,ansi(hr,Remember to specify a type\, such as +raise background/Basketweaving.),u(fun_set,%q0,%0,sub(%1,ability_level(%#,%0))))))
&CMD-+LOWER FS3 Chargen Commands=$+lower */*:think pemit(%#,u(fun_set,[trim(%0)],%1,-1))
&CMD-+LOWER-ERROR FS3 Chargen Commands=$+lower *:think switch(%0,*/*,,[setq(0,u(#FS3SKILL_FUN/FUN_ABILITY_TYPE,%#,%0))]pemit(%#,switch(%q0,background,ansi(hr,Remember to specify a type\, such as +raise background/Basketweaving.),u(fun_set,%q0,%0,-1)))
&CMD-+POINTS FS3 Chargen Commands=$+points:think pemit(%#,u(fun_display_points,%#))
&CMD-+RAISE FS3 Chargen Commands=$+raise */*:think pemit(%#,u(fun_set,[trim(%0)],%1,1))
&CMD-+RAISE-ERROR FS3 Chargen Commands=$+raise *:think switch(%0,*/*,,[setq(0,u(#FS3SKILL_FUN/FUN_ABILITY_TYPE,%#,%0))]pemit(%#,switch(%q0,background,ansi(hr,Remember to specify a type\, such as +raise background/Basketweaving.),u(fun_set,%q0,%0,1)))
&CMD-+RESET FS3 Chargen Commands=$+reset:think pemit(%#,ansi(hg,You reset your abilities.))[set(%#,attributes:[iter(lattr(#FS3SKILL_DB/attribute_*),[capstr(lcstr(after(##,_)))]:4)])][iter(langskills bgskills actionskills quirks,set(%#,##:))][set(%#,langskills:[xget(#FS3SKILL_DB,default_lang)]:7)]
&CMD-+QUIRK-ADD FS3 Chargen Commands=$+quirk/add *:think [setq(0,xget(%#,quirks))]pemit(%#,switch(1,u(#FS3SKILL_FUN/fun_has_quirk,%#,%0),ansi(hr,You already have that quirk.),match(%0,*|*),ansi(hr,Quirks may not contain the '|' character.),ansi(hg,You add the %0 quirk.)[set(%#,quirks:%q0[switch(words(%q0,|),>0,|)][squish(%0)])][setq(z,u(fun_check_errors,%#))]))
&CMD-+QUIRK-DELETE FS3 Chargen Commands=$+quirk/delete *:think [setq(0,xget(%#,quirks))]pemit(%#,switch(0,u(#FS3SKILL_FUN/fun_has_quirk,%#,%0),ansi(hr,You don't have that quirk.),ansi(hg,You remove the %0 quirk.)[set(%#,quirks:[setdiff(find_and_replace(%q0,squish(%0),,|),,|)])][setq(z,u(fun_check_errors,%#))]))
&FUN_SET FS3 Chargen Commands=localize([setq(0,u(#FS3SKILL_FUN/fun_set_ability,%#,%0,%1,%2))][switch(%q0,1,[ansi(hg,You [switch(%2,>0,raise,lower)] the [prettify(%1)] ability by [abs(%2)] points.  It is now [ability_level(%#,%1)].)]%R[u(fun_display_points,%#)],ansi(hr,after(%q0,|)))])
@STARTUP FS3 Chargen Commands=@set me=!no_command
&FUN_AVAILABLE_POINTS FS3 Chargen Commands=xget(#FS3SKILL_DB,starting_points)

&CHECK_1 FS3 Chargen Commands=gte(u(fun_points_left,%0),0)
&ERROR_1 FS3 Chargen Commands=You have spent too many points.

&CHECK_2 FS3 Chargen Commands=lte(u(fun_spent_on,%0,attributes),xget(#FS3SKILL_DB,max_points_attributes))
&ERROR_2 FS3 Chargen Commands=You have spent too many points on attributes.  The maximum is [xget(#FS3SKILL_DB,max_points_attributes)].

&CHECK_3 FS3 Chargen Commands=lte(u(fun_spent_on,%0,actionskills),xget(#FS3SKILL_DB,max_points_action))
&ERROR_3 FS3 Chargen Commands=You have spent too many points on action skills.  The maximum is [xget(#FS3SKILL_DB,max_points_action)].

&CHECK_4 FS3 Chargen Commands=lte(u(#FS3SKILL_FUN/fun_high_abilities,%0),xget(#FS3SKILL_DB,max_high_abilities))
&ERROR_4 FS3 Chargen Commands=You have too many high abilities.  The maximum is [xget(#FS3SKILL_DB,max_high_abilities)] at or above level [xget(#FS3SKILL_DB,HIGH_ABILITY_LEVEL)].

&CHECK_5 FS3 Chargen Commands=lte(words(xget(%0,quirks),|),xget(#FS3SKILL_DB,max_quirks))
&ERROR_5 FS3 Chargen Commands=You have too many quirks.  The maximum is [xget(#FS3SKILL_DB,max_quirks)].

&CHECK_6 FS3 Chargen Commands=gte(words(xget(%0,bgskills)),xget(#FS3SKILL_DB,min_bgskills))
&ERROR_6 FS3 Chargen Commands=You must have at least [xget(#FS3SKILL_DB,min_bgskills)] background skills.

&CHECK_7 FS3 Chargen Commands=gte(words(xget(%0,quirks),|),xget(#FS3SKILL_DB,min_quirks))
&ERROR_7 FS3 Chargen Commands=You must have at least [xget(#FS3SKILL_DB,min_quirks)] quirks.

&CHECK_8 FS3 Chargen Commands=not(match(iter(lattr(#FS3SKILL_DB/attribute_*),gt(ability_level(%0,after(##,_)),0),,),*0*))
&ERROR_8 FS3 Chargen Commands=You can't have attributes at 0.

&CHECK_9 FS3 Chargen Commands=localize([setq(0,0)][iter(xget(%0,langskills),switch(after(##,:),>6,setq(0,1)),,)]%q0)
&ERROR_9 FS3 Chargen Commands=You must be a native speaker (rating 7) in at least one language.

&FUN_CHECK_ERRORS FS3 Chargen Commands=localize([setq(0,1)][setq(1,)][iter(lattr(me/check_*),switch(u(check_#@,%0),0,[setq(0,0)][setq(1,%q1%R[u(error_#@)])]),,)][set(%0,cg_errors:[squish(%q0|%q1)])][squish(%q0|%q1)])

&FUN_DISPLAY_POINTS FS3 Chargen Commands=localize([setq(0,u(fun_points_left,%0))][setq(1,u(FUN_CHECK_ERRORS,%0))][line()]%RYou have spent [ansi(h,u(fun_spent_points,%0))] of your [ansi(h,u(fun_available_points,%0))] available points.%R[switch(%q0,<0,ansi(hr,[abs(%q0)] points overspent.),ansi(hg,%q0 points remaining.))][switch(%q1,0*,%R%R[ansi(hr,ERRORS:%R)][after(%q1,|)])]%R[line()])

&FUN_POINTS_LEFT FS3 Chargen Commands=sub(u(fun_available_points,%0),u(fun_spent_points,%0))
&FUN_SPENT_ON FS3 Chargen Commands=localize([setq(0,0)][iter(xget(%0,%1),setq(0,add(%q0,after(itext(0),:))),,)]%q0)
&FUN_SPENT_POINTS FS3 Chargen Commands=localize([setq(0,0)][iter(attributes actionskills langskills bgskills,setq(0,add(%q0,u(fun_spent_on,%0,##))),,)]%q0)
@startup FS3 Chargen Commands=@set me=!NO_COMMAND

@power Chargen Exit Parent = See_All
@DESCRIBE Chargen Exit Parent=Stores some functions common to chargen exits.  It will require that they have set something in every attribute listed in REQUIRED_ATTRS on the child exit.  It will also call a function OTHER_CHECKS, which should return 0 or 1 depending on whether there's anything else wrong.  If OTHER_CHECKS returns 0, the exit parent will call OTHER_ERRORS to tell the user what the problem is.
@FAILURE Chargen Exit Parent=ansi(hr,You have not set everything yet.[squish(iter(v(required_attrs),switch(strlen(xget(%#,##)),0,%R- Missing ##)))]%R[u(other_errors,%#)])
&ISDONE Chargen Exit Parent=[and(not(t(edit(iter(v(required_attrs),eq(strlen(xget(%#,##)),0)),%B,))),u(other_checks,%#))]
@lock Chargen Exit Parent=ISDONE/1
@lset Chargen Exit Parent/basic=!no_inherit

@lock Demographic Commands=me
@set Demographic Commands = DARK
&CMD-+RANKS Demographic Commands=$+ranks:think pemit(%#,[line()]%R[table(%B%B%BOfficer|Enlisted|[iter(lnum(1,10),[ljust(#@,2)] [extract(u(#FS3SKILL_CGINFO/fun_officer_ranks),#@,1,|)]|[extract(u(#FS3SKILL_CGINFO/fun_enlisted_ranks),#@,1,|)]|,,)],39,78,|)]%R[line()])
&CMD-+AGE Demographic Commands=$+age *:think pemit(%#,switch(0,isnum(%0),ansi(hr,Your name must be a number.),lte(%0,75),ansi(hr,You cannot be that old without special staff permission. Contact a member of staff.),gte(%0,11),ansi(hr,You cannot be that young without special staff permission.  Contact a member of staff.),[set(%#,birthdate:[rand(1,12)]/[rand(1,28)]/[sub(last(time()),%0)])][ansi(hg,You set your age to %0.%R%RYour birthdate has been randomly set to: [birthdate(%#)].  If you would like a different random birthday you can use the command again.  If you would like a specific birthday, contact a staff member.)]))
&CMD-+FACTION Demographic Commands=$+faction *:think pemit(%#,switch(0,t(match(factions(),%0)),ansi(hr,That is not a valid faction.  Use one of: [factions()].),ansi(hg,You set your faction to %0.)[set(%#,rank:)][set(%#,faction:[trim(capstr(%0))])]))
&CMD-+FULLNAME Demographic Commands=$+fullname *:think pemit(%#,ansi(hg,You set your full name to %0.))[set(%#,fullname:%0)]
&CMD-+ORG Demographic Commands=$+org *:think pemit(%#,switch(0,u(#FS3SKILL_CGINFO/fun_is_valid_org,%0),ansi(hr,That is not a valid org. Use one of: [orgs()].),ansi(hg,You set your organization to %0.)[set(%#,org:[trim(capstr(%0))])]))
&CMD-+POSITION Demographic Commands=$+position *:think pemit(%#,switch(0,u(#FS3SKILL_CGINFO/fun_is_valid_position,%0),ansi(hr,That is not a valid position.  See +positions.),ansi(hg,You set your position to %0.)[set(%#,position:[trim(capstr(%0))])])))
&CMD-+RANK Demographic Commands=$+rank *:think pemit(%#,switch(0,match(u(#FS3SKILL_CGINFO/fun_ranks),%0,|),ansi(hr,That is not a valid rank.),not(match(xget(%#,faction),Civilian)),ansi(hr,Ranks are not for civilians.),ansi(hg,You set your rank to [prettify(%0)].)[set(%#,rank:[prettify(%0)])]))
@DESCRIBE Demographic Commands=Chargen commands for setting demographic information.
@STARTUP Demographic Commands=@set me=!no_command

&FUN_DISPLAY_BIRTHDATE Chargen Info Functions=[switch(xget(%0,birthdate),,-,[extract(v(months),before(xget(%0,birthdate),/),1)] [extract(xget(%0,birthdate),2,1,/)])
&FUN_GET_AGE Chargen Info Functions=switch(xget(%0,birthdate),,0,add(sub(last(time()),add(after(after(xget(%0,birthdate),/),/),1)),switch(match(v(months),extract(time(),2,1)),<[before(xget(%0,birthdate),/)],0,[before(xget(%0,birthdate),/)],switch(gte(extract(time(),3,1),before(after(xget(%0,birthdate),/),/)),1,1,0),1))
&FUN_IS_VALID_FACTION Chargen Info Functions=t(match(factions(),%0))
&FUN_IS_VALID_ORG Chargen Info Functions=t(match(orgs(),%0))
&FUN_IS_VALID_POSITION Chargen Info Functions=t(match(positions(),%0))
&FUN_IS_VALID_RANK Chargen Info Functions=t(match(u(fun_ranks),%0))
&FUN_RANK Chargen Info Functions=xget(%0,rank)
&FUN_RANKS Chargen Info Functions=[u(FUN_ENLISTED_RANKS)]|[u(FUN_OFFICER_RANKS)]
&MONTHS Chargen Info Functions=Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec
@STARTUP Chargen Info Functions=@set me=!no_command;@fun AGE=[num(me)]/FUN_GET_AGE;@fun RANK=[num(me)]/FUN_RANK;@fun BIRTHDATE=[num(me)]/fun_display_birthdate

@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@    *****       DATA SECTION           *****
@@    *****   CHECK BEFORE UPGRADING     *****
@@    *****   REMOVE OF MODIFY AS NEEDED *****
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


&FUN_ENLISTED_RANKS Chargen Info Functions=Private|Private First Class|Lance Corporal|Corporal|Sergeant|Staff Sergeant|Gunnery Sergeant|Master Sergeant|Sergeant Major
&FUN_OFFICER_RANKS Chargen Info Functions=2nd Lieutenant|1st Lieutenant|Captain|Major|Lt. Colonel|Colonel|Brigadier General|Major General|Lieutenant General|General


&ACTIONSKILL_ALERTNESS FS3 Skill Data=Noticing things and being aware of your surroundings.
&ACTIONSKILL_DEMOLITIONS FS3 Skill Data=Blowing crap up.
&ACTIONSKILL_DRIVE FS3 Skill Data=Driving ground vehicles.
&ACTIONSKILL_ECM FS3 Skill Data=Operating electronic countermeasure systems.
&ACTIONSKILL_FIREARMS FS3 Skill Data=Shooting pistols, rifles and personal guns.
&ACTIONSKILL_FIRST_AID FS3 Skill Data=Basic first aid/paramedic medicine.  Use Medicine for docs.
&ACTIONSKILL_GUNNERY FS3 Skill Data=Shooting big vehicle and ship weapons.
&ACTIONSKILL_MEDICINE FS3 Skill Data=Doctor skills.  Use First Aid for first aid.
&ACTIONSKILL_MELEE FS3 Skill Data=Fighting with fists, knives, and hand to hand weapons.
&ACTIONSKILL_PILOTING FS3 Skill Data=Flying planes and other airborne vehicles.
&ACTIONSKILL_REPAIR FS3 Skill Data=Fixing things using mechanics or electronics.
&ACTIONSKILL_STEALTH FS3 Skill Data=Being sneaky.

&ATTRIBUTE_ACADEMIC FS3 Skill Data=Book learning and scientific pursuits.
&ATTRIBUTE_CREATIVE FS3 Skill Data=Artistic and creative endeavors.
&ATTRIBUTE_TECHNICAL FS3 Skill Data=Working with gizmos.
&ATTRIBUTE_ATHLETIC FS3 Skill Data=Running, jumping, and the like.
&ATTRIBUTE_REACTIVE FS3 Skill Data=Things involving good reaction and hand/eye coordination.
&ATTRIBUTE_SOCIAL FS3 Skill Data=Dealing with people. 

&DEFAULT_LANG FS3 Skill Data=English
&LANGUAGE_SKILLS FS3 Skill Data=English
&BACKGROUND_SKILLS FS3 Skill Data=A science - astronomy, biology, chemistry, geology, mathematics, physics, etc.|A humanity - history, literature, psychology, philosophy, poetry, etc.|A profession or trade - cook, waitress, bartender, accountant, programmer, carpenter, brewer, blacksmith, etc.|A game - chess, roleplaying, poker, etc.|An art - sculpting, painting, sketching, photography, etc.|A form of expression - acting, singing, dancing, playing an instrument, writing|A sport - baseball, football, gymnastics, etc.|A craft or hobby - gardening, basketweaving, knitting, etc.|An unusual interest - detective novels, game show hosts, etc. |
&PLAYER_VISIBLE_SHEETS FS3 Skill Data=1
&RULING_ATTR FS3 Skill Data=Alertness:Reactive Demolitions:Technical Drive:Reactive ECM:Technical Firearms:Reactive First_Aid:Technical Gunnery:Technical Medicine:Academic Melee:Athletic Piloting:Reactive Repair:Technical Stealth:Athletic
&RULING_ATTR_BG FS3 Skill Data=Academic

&FUN_DISPLAY_SHEET_PAGE0 FS3 Skill Data=[line()]%R[center([name(%0)]'s Sheet,78)]%R%R[u(#FS3SKILL_FUN/FUN_DISPLAY_ATTRS,%0)]%R%R[u(#FS3SKILL_FUN/FUN_DISPLAY_ACTSKILLS,%0)]%R%R[u(#FS3SKILL_FUN/FUN_DISPLAY_BGSKILLS,%0)]%R%R[u(#FS3SKILL_FUN/FUN_DISPLAY_LANGSKILLS,%0)]%R%R[u(#FS3SKILL_FUN/FUN_DISPLAY_QUIRKS,%0)]%R%R[ljust([ansi(hc,Experience Points:)] [xget(%0,XP)],38)][ansi(hc,Luck Points:)] [xget(%0,LUCK_POINTS)]%R[line()]

&MAX_HIGH_ABILITIES FS3 Skill Data=4
&MAX_POINTS_ACTION FS3 Skill Data=32
&MAX_POINTS_ATTRIBUTES FS3 Skill Data=32
&STARTING_POINTS FS3 Skill Data=80
&HIGH_ABILITY_LEVEL FS3 Skill Data=7
&MAX_QUIRKS FS3 Skill Data=4
&MIN_QUIRKS FS3 Skill Data=1
&MIN_BGSKILLS FS3 Skill Data=2

@wait 5=+jobs/create CODE=FS3 Skills Config/Configure FS3Skills.  See guide here: http://wordsmyth.org/aresmush/index.php?title=FS3_Configuration

@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@    *****       END DATA SECTION      *****
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@wait 5=+jobs/create CODE=FS3 Chargen Objects/After the chargen rooms are built, place the chargen objects (Demographics and Abilities) into their appropriate rooms in Chargen.

@pemit/silent %#=[ansi(hg,Setting up database numbers...)]%R

@wait 2=+install/updategroup FS3SKILL


@wait 10=@set me=!quiet
@wait 10=@pemit/silent %#=%R%R[ansi(hg,Installation complete.)]
