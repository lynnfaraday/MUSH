@@ Faraday's Global Utility Functions
@@ Author:  Linda O'Meara
@@ Website: http://code.google.com/p/faramushcode/
@@
@@ Visit the website for documentation, installation instructions, bug reports,
@@ and more.

@set me=quiet

@pemit/silent %#=[ansi(hg,Beginning Installation.  Please wait until the Installation Complete message appears...)]%R

@pemit/silent %#=[ansi(hg,Creating Objects...)]%R

think install_create(GLOBFUN_FUN,Global Utility Functions,1,1,5.0,Useful utility functions.)
think install_create(GLOBFUN_DB,Global Utility Function Data,1,1,5.0,Customizable utility functions and related data.)


@pemit/silent %#=[ansi(hg,Setting Object Attributes...)]%R

&FUN_APPEND Global Utility Functions=localize([setq(0,xget(%0,%1))][set(%0,%1:%q0[switch(words(%q0),>0,switch(%3,,%B,%3))]%2)])
&FUN_IS_REAL_PLAYER Global Utility Functions=and(pmatch(%0),not(match(xget(#GLOBFUN_DB,non_players),%0)))
&FUN_WIKIFI Global Utility Functions=edit(regeditalli(%0,\\\[ansi\\\(\[^\,\]+\,\(\[^\\\)\]+\)\\\)\\\],'''$1'''),\%R,%R%R,\%r,%R%R,\%b,%b,\%B,%b,\%t,,\%T,)
&FUN_REAL_PLAYERS Global Utility Functions=setdiff(lsearch(all,type,player),v(non_players))
&FUN_CENTER_STR Global Utility Functions=[center(mid(%0,0,%1),%1)]
&FUN_ESCAPE_CR Global Utility Functions=[edit(edit(%0,%r,\\\%r),%R,\\\%R)]
&FUN_FIND_AND_REPLACE Global Utility Functions=replace(%0,match(%0,%1,%3),%2,%3)
&FUN_FUNCTION_HELP Global Utility Functions=switch(hasattr(me,fun_%0),0,ansi(hr,No such function %0.),[ansi(h,Function Help:)] [ansi(hr,%0)]%R%R[u(funhelp_%0)])
&FUN_CAPSTR_ALL Global Utility Functions=iter(%0,capstr(##),switch(%1,,%B,%1),switch(%1,,%B,%1))
&fun_monthname Global Utility Functions=switch(0,isnum(%0),#-1,gt(%0,0),#-1,lt(%0,13),#-1,extract(v(months),%0,1,))
&MONTHS Global Utility Functions=Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec
&FUN_ISIC Global Utility Functions=match(xget(%0,status),IC)
&FUN_ISPLAYER Global Utility Functions=t(pmatch(%0))
&FUN_MATCHCON Global Utility Functions=localize([setq(9,#-1)][first(trim(iter([lcon(%1)] %1,switch(strmatch(name(##),%0*),1,##[setq(9,1)]))))][switch(%q9,#-1,#-1)])
&FUN_NUMCOMP Global Utility Functions=switch(1,gt(%0,%1),1,lt(%0,%1),-1,eq(%0,%1),0)
&FUN_ORDINAL Global Utility Functions=switch(%0,1,first,2,second,3,third,4,fourth,5,fifth,6,sixth,7,seventh,8,eighth,9,ninth,10,tenth,11,eleventh,12,twelvth,13,thirteenth,14,fourteenth,15,fifteenth,16,sixteenth,17,seventeenth,18,eighteenth,19,nineteenth,20,twentieth,30,thirtieth,40,fourtieth,50,fiftieth,60,sixtieth,70,seventieth,80,eightieth,90,ninetieth,100,onehundreth,>1000,error,>900,nine-hundred-[ordinal(mod(%0,900))],>800,eight-hundred-[ordinal(mod(%0,800))],>700,seven-hundred-[ordinal(mod(%0,700))],>600,six-hundred-[ordinal(mod(%0,600))],>500,five-hundred-[ordinal(mod(%0,500))],>400,four-hundred-[ordinal(mod(%0,400))],>300,three-hundred-[ordinal(mod(%0,300))],>200,two-hundred-[ordinal(mod(%0,200))],>100,one-hundred-[ordinal(mod(%0,100))],>90,ninety-[ordinal(mod(%0,90))],>80,eighty-[ordinal(mod(%0,80))],>70,seventy-[ordinal(mod(%0,70))],>60,sixty-[ordinal(mod(%0,60))],>50,fifty-[ordinal(mod(%0,50))],>40,forty-[ordinal(mod(%0,40))],>30,thirty-[ordinal(mod(%0,30))],>20,twenty-[ordinal(mod(%0,20))])
&FUN_PADSTR Global Utility Functions=[switch(%2,center,center(mid({%0},0,%1),%1,%3),right,rjust(mid({%0},0,%1),%1,%3),ljust(mid({%0},0,%1),%1,%3))]
&FUN_PARSE_POSE Global Utility Functions=switch(%0,:*,%1 [after(%0,:)],\;*,%1[after(%0,\;)],.*,[after(%0,.)],%1 says\, "%0")
&FUN_PRETTIFY Global Utility Functions=iter(edit(%0,_,%B),capstr(##))
&FUN_RAND_COLOR Global Utility Functions=[switch(mod(secs(),60),<5,b,<10,c,<15,m,<20,r,<25,g,<30,y,<35,b,<40,c,<45,m,<50,r,<55,g,y)]
&FUN_REPLACE_CR Global Utility Functions=[edit(edit(%0,\\\%r,%r),\\\%R,%R)]
&FUN_SAFE_TEL Global Utility Functions=switch(hastype(%1,room),1,tel(%0,%1),pemit(%0,ansi(hr,<OOC> Some code tried to teleport you to a bad location.  Please notify staff.)))
&FUN_SORT_OLDEST Global Utility Functions=sortby(sortby_oldest,%0)
&FUN_SORT_RECENT Global Utility Functions=sortby(sortby_recent,%0)
&FUN_SORT_NAMES Global Utility Functions=sortby(sortby_names,%0)
&FUN_WEB_EDIT Global Utility Functions=[setq(9,%0)][setq(9,edit(%q9,<,\[))][setq(9,edit(%q9,>,\]))][setq(9,edit(%q9,\\\%r\\\%r,%R<p>))][setq(9,edit(%q9,\\\%R\\\%R,%R<p>))][setq(9,edit(%q9,\\\%r,%R<BR>))][setq(9,edit(%q9,\\\%R,%R<BR>))]%q9
&FUN_UNPRETTIFY Global Utility Functions=edit(squish(capstr_all(capstr_all(%0,_))),%B,_)
&FUN_WIKIFI Global Utility Functions=edit(regeditalli(%0,\\\[ansi\\\(\[^\,\]+\,\(\[^\\\)\]+\)\\\)\\\],'''$1'''),\%R,%R%R,\%r,%R%R,\%b,%b,\%B,%b,\%t,,\%T,)

&SORTBY_NAMES Global Utility Functions=comp(name(%0),name(%1))
&SORTBY_OLDEST Global Utility Functions=sub(after(%0,_),after(%1,_))
&SORTBY_RECENT Global Utility Functions=sub(after(%1,_),after(%0,_))
@STARTUP Global Utility Functions=@dolist lattr(me/fun_*)={@function after(##,_)=num(me),##}

&FUNHELP_APPEND Global Utility Functions=Appends text to an attribute.  Separator is optional and defaults to a blank space.%R%RUsage: append(db#,attribute,text to append,separator)
&FUNHELP_CAPSTR_ALL Global Utility Functions=This function will capitalize each word of a multi-word string. It defaults to a space-delimited string but you can pass a delimiter if you want.%R%RUsage: capstr_all(<string>,\[delimiter\])
&FUNHELP_CENTER_STR Global Utility Functions=This function centers a string, just like the center() function, but it also chops the string if it's too long to fit.  It returns the formatted string.%R%RUsage: center_str(<string>, <length>)
&FUNHELP_ESCAPE_CR Global Utility Functions=When storing user input on an attribute, the MUSH will put in hard line breaks for any carriage return(\%R).  This function escapes them out so you can later @decompile the attribute easily.  It returns the string with all carriage returns escaped out.  You use it in conjunction with the 'set' function.  For example:%Rset(#123,foo:\[escape_cr(\%0)\])%R%RIts partner is replace_cr, which will un-escape the linebreaks so you can display them.
&FUNHELP_FIND_AND_REPLACE Global Utility Functions=This function is a simple find/replace combination.  It will find the first instance (and ONLY the first instance) of a pattern match and replace it with the provided string.%R%RUsage: find_and_replace(<original string>,<find string>,<replace string>,<delimiter>)%R%RExample: find_and_replace(Art:2|Cooking:3|Melee:1,Cooking:*,Cooking:4,|)
&FUNHELP_FUNCTION_HELP Global Utility Functions=This function obtains help for one of the utility functions.%R%RUsage: function_help(<function name>)
&FUNHELP_ICTIME Global Utility Functions=This function is intended to return the IC time for your MUSH.  By default, it returns the OOC time, so you'll have to configure it for your game's time system.%R%RUsage: ictime()
&FUNHELP_ISIC Global Utility Functions=This function returns 1 if a player is set IC, and 0 if they are not.%RUsage: isic(<player DB#>)
&FUNHELP_ISPLAYER Global Utility Functions=This function tells whether an object is a player or not.  It returns 1 if the object is a player, and 0 if not.%R%RUsage: isplayer(<db#>)
&FUNHELP_ISSTAFF Global Utility Functions=This function returns 1 if the player is on staff, and 0 if not.  It goes by the Wizard, Royal and Judge flags.  If you use a different system for staff members, you can edit this function.%R%RUsage: isstaff(<db#>)
&FUNHELP_LINE Global Utility Functions=This is a helpful utility you can use to standardize all the lines around your commands.  By default, it gives a standard colored line.  You can edit this to customize the style of your lines.%RUsage: line()%R%RSee also related functions: line2(), line_no_color(), and line_with_text()
&FUNHELP_LINE2 Global Utility Functions=This is a rather plain-looking line.  You can edit this to customize the style of your lines.%RUsage: line2()%R%RSee also related functions: line(), line_no_color(), and line_with_text()
&FUNHELP_LINE_NO_COLOR Global Utility Functions=The same style of line as the line() function, but without color.%RUsage: line_no_color()%R%RSee also related functions: line(), line2(), and line_with_text()
&FUNHELP_LINE_WITH_TEXT Global Utility Functions=The same style of line as the line() function, but text centered in the middle of the line.%RUsage: line_with_text()%R%RSee also related functions: line(), line2(), and line_no_color()
&FUNHELP_MATCHCON Global Utility Functions=This function searches the contents of a room to find a match (either an object or a player) to a given name.  It returns the DB# of the first match it finds, or #-1 if no match is found.%R%RUsage: matchcon(<name search string>,<room DB#>)
&FUNHELP_MONTHNAME Global Utility Functions=Takes in a number from 1-12 and gives back a month name in the format that makes convtime() happy.  Returns #-1 if you give it something nonsensical.%R%RUsage: monthname(<number>)
&FUNHELP_NUMCOMP Global Utility Functions=This function compares two numbers,much like strcmp compares strings. If the first number is bigger, it returns 1.  If the first number is smaller, it returns -1.  If the numbers are equal, it returns 0.%R%RUsage: numcomp(<num1>, <num2>)
&FUNHELP_ORDINAL Global Utility Functions=This function gives the ordinal representation "first, second, third, etc.) of a number.%R%RUsage: ordinal(<number>)
&FUNHELP_PADSTR Global Utility Functions=This function is a combination of the mid() and ljust/rjust/center() functions.  If a string is too long, it will truncate it.  If a string is too short, it will pad it (on the left, right or center, as you specify it).  By default, it will left justify.  Also, it uses spaces to pad by default by you can override that by specifying a padding character.%R%RUsage: padstr(<string>, <length>) (pads left with spaces)%R%Tpadstr(<string>,<length>,<left/right/center>)%R%Tpadstr(<string>, <length>, <left/right/center>, <pad character>)
&FUNHELP_PRETTIFY Global Utility Functions=Makes a string pretty by replacing underscores with spaces and capitalizing each word in the resulting string.  So Sleight_of_hand becomes Sleight Of Hand.%R%RUsage: prettify(<string>)%R%RSee also: unprettify()
&FUNHELP_PARSE_POSE Global Utility Functions=This function takes a standard pose string and formats it with the player's name.  It accepts the tokens : (for action poses), " (for say poses), \; (for possessive poses) and . (for emits).%R%RUsage: parse_pose(<pose string>,<player name>)
&FUNHELP_RAND_COLOR Global Utility Functions=This function gives you a random ansi color.  You can use it to make your lines change color in commands.  Because the color changes every 5 seconds, you can call it more than once in the same command and be reasonably sure of getting the same color both times.  But if you call it from two different commands, you may get two different colors.  To get around this, you can store the value returned from this function and store it in one of the registers.%R%RUsage: ansi(rand_color(),<string>)   or %R%Tsetq(0,rand_color()) then later: ansi(\%q0,<string>)
&FUNHELP_REPLACE_CR Global Utility Functions=This function is the partner to escape_cr.  If you have a string that you removed carriage returns from using escape_cr, you use this function to get them back before displaying them.%R%RUsage: replace_cr(<string>)
&FUNHELP_SORT_NAMES Global Utility Functions=This function will take a list of DB numbers and sort them according to the object names.%R%RUsage: sort_names(<list>)
&FUNHELP_SORT_OLDEST Global Utility Functions=This function will take a list of items in the form "prefix_number" and sort them by number with the oldest coming first.  For example: MSG_1 MSG_2 MSG_3 MSG_10 would be sorted as MSG_1 MSG_2 MSG_3 MSG10.%R%RUsage: sort_oldest(<list>)%R%RSee also the companion function sort_recent.
&FUNHELP_SORT_RECENT Global Utility Functions=This function will take a list of items in the form "prefix_number" and sort them by number with the most recent coming first.  For example: MSG_1 MSG_2 MSG_3 MSG_10 would be sorted as: MSG_10 MSG_3 MSG_2 MSG_1.%R%RUsage: sort_recent(<list>)%R%RSee also the companion function sort_oldest
&FUNHELP_IS_REAL_PLAYER Global Utility Functions=This function returns 1 if the player is a REAL player (i.e. not a builder char or game wizard).  Non-players are marked by adding their DB# to the NON_PLAYERS list on this object.  You can also use the real_players() function to get a list of all real players.%R%RUsage: is_real_player(<player db#>)
&FUNHELP_REAL_PLAYERS Global Utility Functions=This function gives you back a list of all 'real' players (i.e. not wizards, builders, etc.).%R%RUsage: real_players()
&FUNHELP_SAFE_TEL Global Utility Functions=This is a safer version of the teleport function tel().  It will not try to teleport a player to a bad location (which can sometimes cause the object doing the teleporting to end up in the player's inventory!).%R%RUsage: safe_tel(<player>,<location>)
&FUNHELP_UNPRETTIFY Global Utility Functions=Makes a string code-friendly by replacing underscores with spaces and doing a squish.  So Sleight Of%B%B%BHand becomes Sleight_Of_Hand.%R%RUsage: unprettify(<string>)%R%RSee also: prettify()
&FUNHELP_WEB_EDIT Global Utility Functions=This function will take a MUSH string and perform basic formatting to turn it into a HTML-friendly version.  For example, it will replace < and > with &lt and &gt, and will replace escaped-out carriage returns (obtained using the escape_cr function) with paragraph and line breaks.%R%RUsage: web_edit(<string>)
&FUNHELP_WIKIFI Global Utility Functions=This function will take a MUSH string and perform basic formatting to turn it into a Mediawiki-friendly version.%R%RUsage: wikifi(<string>)


@STARTUP Global Utility Function Data=@dolist lattr(me/fun_*)={@function after(##,_)=num(me),##}

@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@    *****       DATA SECTION           *****
@@    *****   CHECK BEFORE UPGRADING     *****
@@    *****   REMOVE OF MODIFY AS NEEDED *****
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

&NON_PLAYERS Global Utility Function Data=#1
&FUN_ICTIME Global Utility Function Data =time()
&FUN_ISSTAFF Global Utility Function Data =orflags(%0,WrJ)
&FUN_LINE Global Utility Function Data =[ansi(rand_color(),+==~~~~~====~~~~====~~~~====~~~~=====~~~~=====~~~~====~~~~====~~~~====~~~~~==+)]
&FUN_LINE2 Global Utility Function Data =[ansi(rand_color(),[repeat(~,78)])]
&FUN_LINE_NO_COLOR Global Utility Function Data =+===~~~~~====~~~~====~~~~====~~~~=====~~~~=====~~~~====~~~~====~~~~====~~~~~==+
&FUN_LINE_WITH_TEXT Global Utility Function Data=[ansi(rand_color(),+==~~~~~====~~~~====~~~~===[padstr(%B%0%B,25,center,~)]==~~~~====~~~~====~~~~~==+)]

@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@    *****       END DATA SECTION      *****
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@pemit/silent %#=[ansi(hg,Setting up database numbers...)]%R

@wait 2={think [setq(0,install_aliasdb(GLOBFUN_FUN))][setq(1,install_aliasdb(GLOBFUN_DB))][iter(FUN_ICTIME FUN_ISSTAFF FUN_LINE FUN_LINE2 FUN_LINE_NO_COLOR FUN_LINE_WITH_TEXT NON_PLAYERS,switch(1,hasattr(%q0,##),[set(%q1,##:[xget(%q0,##)])][wipe(%q0/##)]))]

@wait 5=+install/updategroup GLOBFUN

@wait 9=@pemit/silent %#=%R%R[ansi(hg,Installation Complete!!)]

@wait 10=@set me=!quiet

